{"version":3,"sources":["layouts/with-profile-nav/with-profile-nav.module.sass","components/loader/loader.module.sass","pages/constructor-page/constructor-page.module.sass","components/app-header/app-header.module.sass","hooks/hooks.ts","components/app-header/app-header.tsx","layouts/with-app-header/with-app-header.tsx","services/constants/user.ts","services/actions/user/user.ts","components/profile-nav/profile-nav.tsx","layouts/with-profile-nav/with-profile-nav.tsx","services/types/hooks.ts","components/burger-ingredients-item/burger-ingredients-item.tsx","components/burger-ingredients-list/burger-ingredients-list.tsx","components/loader/loader.tsx","components/burger-ingredients/burger-ingredients.tsx","services/constants/ingredients.ts","components/burger-constructor-item/burger-constructor-item.tsx","services/actions/ingredients/ingredients.ts","components/burger-constructor/burger-constructor.tsx","pages/constructor-page/constructor-page.tsx","pages/login-page/login-page.tsx","pages/register-page/register-page.tsx","services/constants/reset-password.ts","services/actions/reset-password/reset-password.ts","pages/forgot-password-page/forgot-password-page.tsx","pages/reset-password-page/reset-password-page.tsx","pages/profile-page/profile-page.tsx","components/order-item/order-item.tsx","services/constants/wsOrders.ts","services/actions/wsOrders/wsOrders.ts","pages/orders-page/orders-page.tsx","pages/feed-page/feed-page.tsx","services/constants/modal.ts","services/actions/modal/modal.ts","components/ingredient-details/ingredient-details.tsx","pages/ingredient-item-page/ingredient-item-page.tsx","images/order-detail.svg","images/stroke.svg","pages/order-details-page/order-details-page.tsx","components/modal/modal.tsx","components/order-details/order-details.tsx","components/order-info/order-info.tsx","layouts/protected-route/protected-route.tsx","services/constants/order.ts","services/actions/order/order.ts","pages/order-info-page/order-info-page.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/ingredients/ingredients.ts","services/reducers/modal/modal.ts","services/reducers/order/order.ts","services/reducers/reset-password/reset-password.ts","services/reducers/user/user.ts","services/reducers/wsOrders/wsOrders.ts","services/reducers/index.ts","utils/cookies.js","services/middleware/socketMiddleware.ts","services/constants/index.ts","utils/apiHelper.js","services/sagas/ingredients.ts","services/sagas/user.ts","services/sagas/order.ts","services/sagas/reset-password.ts","services/sagas/index.ts","services/store.ts","index.tsx","components/order-item/order-item.module.sass","pages/order-details-page/order-details-page.module.sass","components/profile-nav/profile-nav.module.sass","pages/login-page/login-page.module.sass","pages/feed-page/feed-page.module.sass","components/ingredient-details/ingredient-details.module.sass","components/order-details/order-details.module.sass","components/order-info/order-info.module.sass","components/modal/modal.module.sass","components/burger-ingredients-item/burger-ingredients-item.module.sass","components/burger-ingredients/burger-ingredients.module.sass","components/burger-constructor/burger-constructor.module.sass","pages/register-page/register-page.module.sass","pages/forgot-password-page/forgot-password-page.module.sass","pages/reset-password-page/reset-password-page.module.sass","pages/profile-page/profile-page.module.sass","components/burger-constructor-item/burger-constructor-item.module.sass","components/burger-ingredients-list/burger-ingredients-list.module.sass","pages/orders-page/orders-page.module.sass","pages/ingredient-item-page/ingredient-item-page.module.sass","pages/order-info-page/order-info-page.module.sass"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","path","useRouteMatch","user","store","className","s","header","header_container","header_left_wrapper","to","exact","header_item","activeClassName","active","type","header_logo","WithAppHeader","children","USER_REGISTER_REQUEST","USER_LOGOUT_REQUEST","USER_LOGIN_REQUEST","UPDATE_USER_INFO_REQUEST","GET_USER_INFO_REQUEST","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILED","SET_EMAIL","RESET_EMAIL","SET_PASSWORD","RESET_PASSWORD","SET_NAME","RESET_NAME","updateUserInfoRequest","getUserInfoRequest","getUserInfoSuccess","payload","getUserInfoFailed","setEmail","email","resetEmail","setPassword","password","resetPassword","setName","name","ProfileNav","dispatch","container_nav","container_nav_item","onClick","container_nav_descr","WithProfileNav","container","BurgerIngredientsItem","ingredient","count","onIngredientClick","location","useLocation","price","image","_id","useDrag","item","ingredientRef","pathname","state","background","ref","data-test","ingredient_counter","size","ingredient_img","src","alt","ingredient_price_wrapper","ingredient_name","BurgerIngredientsList","title","ingredients","constructorIngredients","constructorBun","counters","useMemo","counter","map","ingredientsArr","data-scroll-id","type_wrapper","ingredients_type_wrapper","Loader","loader","xmlns","xmlnsXlink","style","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","fill","attributeName","repeatCount","dur","calcMode","keyTimes","values","keySplines","begin","BurgerIngredients","handleIngredientClick","useState","currentTab","setCurrentTab","boxRef","useRef","switchCurrentTab","element","document","querySelector","HTMLElement","offset","offsetTop","current","scroll","left","top","behavior","section_container","ingredients_wrapper","tab_wrapper","value","onScroll","e","bunContainer","sauceContainer","mainContainer","target","scrollTop","ingredients_items_wrapper","category","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","ADD_INGREDIENT_TO_CONSTRUCTOR","DELETE_INGREDIENT_FROM_CONSTRUCTOR","ADD_BUN_TO_CONSTRUCTOR","MOVE_INGREDIENT_IN_CONSTRUCTOR","RESET_CONSTRUCTOR","BurgerConstructorItem","index","deleteIngredient","deleteIngredientFromConstructor","useDrop","accept","collect","monitor","isHover","isOver","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","clientOffset","getClientOffset","hoverClientY","y","drop","isDragging","drag","constructor_item","drag_icon","text","thumbnail","handleClose","BurgerConstructor","handleOrderClick","history","useHistory","drag_id","uuidv4","dropContainer","totalPrice","length","reduce","acc","curr","no_ingredients","isLocked","wrapper_inner","constructor_footer","total_wrapper","push","ConstructorPage","DndProvider","backend","HTML5Backend","table_wrapper","LoginPage","from","form_container","form_wrapper","onSubmit","preventDefault","form","onChange","form_descr","form_link","RegisterPage","placeholder","SEND_EMAIL_REQUEST","SEND_EMAIL_SUCCESS","SEND_EMAIL_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","SET_EMAILCODE","RESET_EMAILCODE","sendEmailSuccess","resetPasswordSuccess","ForgotPasswordPage","useEffect","success","replace","ResetPasswordPage","emailCode","code","ProfilePage","container_form","profile_btn_wrapper","profile_btn_cancel","OrderItem","onOrderClick","orderInfo","createdAt","number","ingredientsStore","ingredientsFull","ingredientId","find","filter","Boolean","orderPrice","ingredientsImageArr","slice","statusText","status","container_orders_item_wrapper","container_orders_item","order_header","container_orders_item_footer","container_orders_item_ingredients","container_orders_item_ingredient","transform","zIndex","container_orders_item_ingredient_length","container_orders_item_total","WS_ALL_ORDERS_CONNECTION_SUCCESS","WS_ALL_ORDERS_CONNECTION_ERROR","WS_ALL_ORDERS_CONNECTION_CLOSED","WS_ALL_ORDERS_GET_MESSAGE","WS_ALL_ORDERS_CONNECTION_START","WS_USER_ORDERS_CONNECTION_SUCCESS","WS_USER_ORDERS_CONNECTION_ERROR","WS_USER_ORDERS_CONNECTION_CLOSED","WS_USER_ORDERS_GET_MESSAGE","WS_USER_ORDERS_CONNECTION_START","wsUserOrdersConnectionStart","OrdersPage","handleOrderInfoClick","userOrders","wsOrders","ordersContetnt","orders","order","container_orders","container_orders_wrapper","FeedPage","allOrders","wsAllOrdersConnect","formOrdersStatusArr","filterArr","pendingOrdersArr","doneOrdersArr","allOrdersContent","container_wrapper","orders_wrapper","details_wrapper","details_column","orders_status_column","total","toLocaleString","totalToday","SET_MODAL_INNER_INGREDIENT_DETAILS","SET_MODAL_INNER_ORDER_DETAILS","SET_CURRENT_INGREDIENT","SET_MODAL_INNER_ORDER_INFO","SET_CURRENT_ORDER_INFO","setCurrentIngredient","setCurrentOrderInfo","IngredientDetails","currentIngredient","modal","subtitle","footer","footer_item","calories","proteins","fat","carbohydrates","IngredientItemPage","id","useParams","ingredient_wrapper","ingredient_title","OrderDetailsPage","order_wrapper","count_descr","image_wrapper","footer_title","footer_descr","modalRoot","getElementById","Modal","closeModal","modalInner","ReactDOM","createPortal","modal_wrapper","modal_title","modal_close","modal_overlay","OrderDetails","orderRequest","OrderInfo","currentOrderInfo","order_info_wrapper","order_info_item","order_info_icon","order_info_image","order_info_title","order_info_footer","order_info_time","ProtectedRoute","rest","isUserLoaded","setUserLoaded","init","a","render","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","ORDER_RESET","getOrderRequest","getOrderFailed","OrderInfoPage","params","dispatchCurrentOrder","ordersArr","currentOrder","ingredientItem","App","ModalSwitch","action","modalInnerDetails","orderNumber","goBack","localStorage","getItem","closeModalByEscape","key","addEventListener","removeEventListener","propLocation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsRequest","ingredientsFiled","ingredientsConstructor","orderFiled","sendEmailRequest","sendEmailFailed","resetPasswordRequest","resetPasswordFailed","userReguest","userFailed","wsUserOrdersConnect","wsAllOrdersActions","wsInit","onOpen","onClose","onError","onMessage","wsUserOrdersActions","rootReducer","combineReducers","arr","dragItem","hoverItem","setCookie","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","decodeURIComponent","undefined","createSocketMiddlware","token","wsActions","socket","next","WebSocket","onopen","event","onerror","onmessage","data","parsedData","JSON","parse","restParsedData","onclose","_apiUrl","checkResponse","response","ok","json","Promise","reject","error","getIngredients","ingredientsSaga","getIngredientsFetch","fetch","call","put","takeEvery","userLogin","userLogout","getUserInfo","updateUserInfo","userRegister","userSaga","userLoginFetch","method","headers","body","stringify","userLogoutFetch","getUserInfoFetch","Authorization","updateAccessTokenFetch","catch","console","log","updateUserInfoFetch","userRegisterFetch","select","userActions","accessToken","split","refreshToken","setItem","removeItem","message","makeOrder","orderSaga","makeOrderFetch","ingredientsIdArr","finalIngredients","finalIngredientsArg","sendEmail","resetUserPassword","resetPasswordSaga","sendEmailFetch","resetUserPasswordFetch","newPassword","rootSaga","sagas","all","saga","spawn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","thunk","createStore","run","StrictMode"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,UAAY,sC,oBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,cAAgB,0C,yCCAlCD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,iBAAmB,qCAAqC,oBAAsB,wCAAwC,YAAc,gCAAgC,OAAS,6B,8GCMtNC,EAA+CC,IAE/CC,EAAc,kBAAMC,e,+BCiElBC,EAnEG,WAEd,IAAQC,EAASC,cAATD,KAEFE,EAAOP,GAAY,SAAAQ,GAAK,OAAIA,EAAMD,KAAKA,QAE7C,OACI,iCACI,qBAAKE,UAAS,UAAKC,IAAEC,OAAP,cAAd,SACI,sBAAKF,UAAWC,IAAEE,iBAAlB,UACI,qBAAIH,UAAWC,IAAEG,oBAAjB,UACI,eAAC,IAAD,CACIC,GAAG,IACHC,OAAK,EACLN,UAAS,UAAKC,IAAEM,YAAP,6BACTC,gBAAiBP,IAAEQ,OAJvB,UAMI,qBAAKT,UAAU,OAAf,SACI,cAAC,aAAD,CAAYU,KAAe,MAATd,EAAe,UAAY,gBAEjD,sBAAMI,UAAU,8BAAhB,mFAEJ,eAAC,IAAD,CACIA,UAAS,UAAKC,IAAEM,YAAP,wBACTF,GAAG,QACHC,OAAK,EACLE,gBAAiBP,IAAEQ,OAJvB,UAMI,qBAAKT,UAAU,OAAf,SACI,cAAC,WAAD,CAAUU,KAAe,UAATd,EAAmB,UAAY,gBAEnD,sBAAMI,UAAU,8BAAhB,uFAGR,cAAC,IAAD,CAAMK,GAAG,IAAIL,UAAWC,IAAEU,YAA1B,SACI,cAAC,OAAD,OAEFb,GACE,eAAC,IAAD,CACIO,GAAG,SACHL,UAAS,UAAKC,IAAEM,YAAP,wBACTC,gBAAiBP,IAAEQ,OAHvB,UAKI,qBAAKT,UAAU,OAAf,SACI,cAAC,cAAD,CAAcU,KAAe,WAATd,EAAoB,UAAY,gBAExD,sBAAMI,UAAU,8BAAhB,+CAGPF,GACG,eAAC,IAAD,CACIO,GAAG,WACHL,UAAS,UAAKC,IAAEM,YAAP,wBACTC,gBAAiBP,IAAEQ,OAHvB,UAKI,qBAAKT,UAAU,OAAf,SACI,cAAC,cAAD,CAAaU,KAAgB,aAATd,GAAgC,oBAATA,EAA8B,UAAY,gBAEzF,sBAAMI,UAAU,8BAAhB,wGCrDbY,EATW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACI,qCACI,cAAC,EAAD,IACCA,MCPAC,EAAiD,wBAIjDC,EAA6C,sBAI7CC,EAA2C,qBAI3CC,EAAuD,2BAIvDC,EAAiD,wBACjDC,EAAiD,wBACjDC,EAA+C,uBAE/CC,EAAyB,YACzBC,EAA6B,cAE7BC,EAA+B,eAC/BC,EAAmC,iBAEnCC,EAAuB,WACvBC,EAA2B,aCsH3BC,EAAwB,iBAAqC,CACtEjB,KAAMO,IAmBGW,EAAqB,iBAAkC,CAChElB,KAAMQ,IAEGW,EAAqB,SAAC/B,GAAD,MAAoD,CAClFY,KAAMS,EACNW,QAAShC,IAEAiC,EAAoB,iBAAiC,CAC9DrB,KAAMU,IAaGY,EAAW,SAACC,GAAD,MAAqC,CACzDvB,KAAMW,EACNS,QAASG,IAEAC,EAAa,iBAA0B,CAChDxB,KAAMY,IAEGa,EAAc,SAACC,GAAD,MAA2C,CAClE1B,KAAMa,EACNO,QAASM,IAEAC,EAAgB,iBAA6B,CACtD3B,KAAMc,IAEGc,EAAU,SAACC,GAAD,MAAmC,CACtD7B,KAAMe,EACNK,QAASS,I,iBCpKEC,EA/BI,WAEf,IAAMC,EAAWhD,IAMjB,OACI,sBAAKO,UAAS,UAAKC,IAAEyC,cAAP,UAAd,UACI,cAAC,IAAD,CACIrC,GAAG,WACHL,UAAS,UAAKC,IAAE0C,mBAAP,+BACTnC,gBAAiBP,IAAEQ,OACnBH,OAAK,EAJT,wDAMA,cAAC,IAAD,CACID,GAAG,kBACHL,UAAS,UAAKC,IAAE0C,mBAAP,+BACTnC,gBAAiBP,IAAEQ,OAHvB,mGAKA,qBACIT,UAAS,UAAKC,IAAE0C,mBAAP,+BACTC,QAnBY,WACpBH,ED+I0D,CAC9D/B,KAAMK,KChIE,4CAKA,mBAAGf,UAAS,UAAKC,IAAE4C,oBAAP,sCAAZ,sU,kBCnBGC,EATY,SAAC,GAAkB,IAAhBjC,EAAe,EAAfA,SAC1B,OACI,sBAAKb,UAAS,UAAKC,IAAE8C,WAArB,UACI,cAAC,EAAD,IACClC,M,0BCDEtB,EAA+CC,I,0BCmD/CwD,EA3Ce,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,WAAYC,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,kBAE1CC,EAAWC,cAETd,EAA4BU,EAA5BV,KAAMe,EAAsBL,EAAtBK,MAAOC,EAAeN,EAAfM,MAAOC,EAAQP,EAARO,IAE5B,EAA0BC,YAAQ,CAC9B/C,KAAM,cACNgD,KAAMT,IAFDU,EAAT,oBASA,OACI,eAAC,IAAD,CACItD,GAAI,CACAuD,SAAS,gBAAD,OAAkBJ,GAC1BK,MAAO,CAAEC,WAAYV,IAEzBR,QAAS,kBAAMO,EAAkBF,IACjCjD,UAAS,UAAKC,IAAEgD,YAChBc,IAAKJ,EACLK,YAAU,aARd,UAUI,sBAAKhE,UAAU,iBAAf,UACKkD,GACG,qBAAKlD,UAAWC,IAAEgE,mBAAlB,SACI,cAAC,UAAD,CAASf,MAAOA,EAAOgB,KAAK,cAGpC,qBAAKlE,UAAS,UAAKC,IAAEkE,eAAP,SAA8BC,IAAKb,EAAOc,IAAK9B,IAC7D,sBAAKvC,UAAS,UAAKC,IAAEqE,yBAAP,SAAd,UACI,sBAAMtE,UAAU,gCAAhB,SAAiDsD,IACjD,cAAC,eAAD,CAAc5C,KAAK,kBAG3B,oBAAIV,UAAS,UAAKC,IAAEsE,gBAAP,gCAAb,SAAoEhC,Q,oBCajEiC,GA/Ce,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,MAAO/D,EAA2D,EAA3DA,KAAMyC,EAAqD,EAArDA,kBAE1C,EAAgE5D,GAAY,SAAAQ,GAAK,MAAK,CAClF2E,YAAa3E,EAAM2E,YAAYA,YAC/BC,uBAAwB5E,EAAM2E,YAAYC,uBAC1CC,eAAgB7E,EAAM2E,YAAYE,mBAH9BF,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,uBAAwBC,EAA7C,EAA6CA,eAMvCC,EAAWC,mBAAQ,WAC3B,IAAMC,EAAqB,GAY3B,OAVAJ,EAAuBK,KAAI,SAAC/B,GACtB8B,EAAQ9B,EAAWO,OACXuB,EAAQ9B,EAAWO,KAAO,GAEvCuB,EAAQ9B,EAAWO,UAGhBoB,IACMG,EAAQH,EAAepB,KAAO,GAEjCuB,IACL,CAACJ,EAAwBC,IAEnBK,EAAc,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAaM,KAAI,SAAC/B,GACrC,GAAIA,EAAWvC,OAASA,EACpB,OACI,cAAC,EAAD,CAEIuC,WAAYA,EACZC,MAAO2B,EAAS5B,EAAWO,KAC3BL,kBAAmBA,GAHdF,EAAWO,QAShC,OACI,sBAAK0B,iBAAgBxE,EAAMV,UAAS,UAAKC,KAAEkF,aAAP,UAApC,UACI,oBAAInF,UAAU,kCAAd,SAAiDyE,IACjD,qBAAKzE,UAAWC,KAAEmF,yBAAlB,SACKH,Q,qBC1BFI,GAjCA,WACX,OACI,qBAAKrF,UAAWC,KAAEqF,OAAlB,SACI,sBACIC,MAAM,6BACNC,WAAW,+BACXC,MAAO,CAAC3B,WAAY,OAAQ4B,QAAS,QAASC,eAAgB,QAC9DC,MAAM,OACNC,OAAO,OACPC,QAAQ,cACRC,oBAAoB,WAPxB,UASI,yBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,UAApC,UACI,yBAASC,cAAc,IAAIC,YAAY,aAAaC,IAAI,QAAQC,SAAS,SAASC,SAAS,MAAMC,OAAO,OAAOC,WAAW,cAAcC,MAAM,OAC9I,yBAASP,cAAc,OAAOC,YAAY,aAAaC,IAAI,KAAKC,SAAS,WAAWC,SAAS,oBAAoBC,OAAO,0CAA0CE,MAAM,UACnK,yBAAQX,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,UAApC,UACT,yBAASC,cAAc,IAAIC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,eAAeC,WAAW,kDAAkDC,MAAM,OACrM,yBAASP,cAAc,KAAKC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,iBAAiBC,WAAW,kDAAkDC,MAAM,UAC/L,yBAAQX,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,UAApC,UACT,yBAASC,cAAc,IAAIC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,eAAeC,WAAW,kDAAkDC,MAAM,WACrM,yBAASP,cAAc,KAAKC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,iBAAiBC,WAAW,kDAAkDC,MAAM,cAC/L,yBAAQX,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,UAApC,UACT,yBAASC,cAAc,IAAIC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,eAAeC,WAAW,kDAAkDC,MAAM,UACrM,yBAASP,cAAc,KAAKC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,iBAAiBC,WAAW,kDAAkDC,MAAM,aAC/L,yBAAQX,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,UAApC,UACT,yBAASC,cAAc,IAAIC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,eAAeC,WAAW,kDAAkDC,MAAM,WACrM,yBAASP,cAAc,KAAKC,YAAY,aAAaC,IAAI,KAAKC,SAAS,SAASC,SAAS,oBAAoBC,OAAO,iBAAiBC,WAAW,kDAAkDC,MAAM,oB,oBC+EzMC,GA3FW,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,sBAEzB,EAAoCC,mBAAmC,OAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAASC,iBAAuB,MAC9BxC,EAAgBnF,GAAY,SAAAQ,GAAK,MAAK,CAC1C2E,YAAa3E,EAAM2E,YAAYA,gBAD3BA,YAIFyC,EAAmB,SAACzG,GACtB,IAAM0G,EAAUC,SAASC,cAAT,2BAA2C5G,EAA3C,OAChB,GAAI0G,GAAWA,aAAmBG,YAAa,CAAC,IAAD,EACrCC,EAASJ,EAAQK,UACvB,UAAAR,EAAOS,eAAP,SAAgBC,OAAO,CACnBC,KAAM,EACNC,IAAKL,EAAS,IACdM,SAAU,aA+BtB,OACI,0BAAS9H,UAAS,UAAKC,KAAE8H,kBAAP,UAAlB,UACI,oBAAI/H,UAAS,UAAKC,KAAEwE,MAAP,mCAAb,mGACI,sBAAKzE,UAAWC,KAAE+H,oBAAlB,WACMtD,GAAe,cAAC,GAAD,IAChBA,GACG,qCACI,sBAAK1E,UAAS,UAAKC,KAAEgI,aAArB,UACI,cAAC,MAAD,CACIxH,OAAuB,QAAfsG,EACRnE,QAAS,kBAAMuE,EAAiB,QAChCe,MAAM,6CAHV,4CAKA,cAAC,MAAD,CACIzH,OAAuB,UAAfsG,EACRnE,QAAS,kBAAMuE,EAAiB,UAChCe,MAAM,6CAHV,4CAKA,cAAC,MAAD,CACIzH,OAAuB,SAAfsG,EACRnE,QAAS,kBAAMuE,EAAiB,SAChCe,MAAM,6CAHV,2DAMJ,qBACIC,SAnDK,SAACC,GAC9B,IAAMC,EAAehB,SAASC,cAAT,0BACfgB,EAAiBjB,SAASC,cAAT,4BACjBiB,EAAgBlB,SAASC,cAAT,2BAEjBc,EAAEI,OAAOC,UAAY,IAAOJ,EAAcZ,WAAcW,EAAEI,OAAOC,UAAY,IAAOH,EAAgBb,WAA4B,QAAfV,EAClHC,EAAc,OAGboB,EAAEI,OAAOC,UAAY,IAAOH,EAAgBb,WAAcW,EAAEI,OAAOC,UAAY,IAAOF,EAAed,WAA4B,UAAfV,EACnHC,EAAc,SAGboB,EAAEI,OAAOC,UAAY,IAAOF,EAAed,WAA4B,SAAfV,GACzDC,EAAc,SAsCMjD,IAAKkD,EACLjH,UAAS,UAAKC,KAAEyI,0BAAP,eAHb,SA9BmF,CACvG,CAACjE,MAAO,iCAAS/D,KAAM,OACvB,CAAC+D,MAAO,iCAAS/D,KAAM,SACvB,CAAC+D,MAAO,6CAAW/D,KAAM,SAgCuBsE,KAAI,SAAC2D,GAAD,OACxB,cAAC,GAAD,CAEIxF,kBAAmB0D,EACnBpC,MAAOkE,EAASlE,MAChB/D,KAAMiI,EAASjI,MAHViI,EAASjI,qB,4BC7FzCkI,GAAqD,0BACrDC,GAAqD,0BACrDC,GAAmD,yBACnDC,GAAiE,gCACjEC,GAA2E,qCAC3EC,GAAmD,yBACnDC,GAAmE,iCACnEC,GAAyC,oB,oBCmFvCC,GA1Ee,SAAC,GAAwD,IAAtDnG,EAAqD,EAArDA,WAAYoG,EAAyC,EAAzCA,MAEnC5G,EAAWhD,IACXsE,EAAMmD,iBAAuB,MAE7BoC,EAAmB,SAACrG,GACtBR,ECiDuC,SAACQ,GAAD,MAAkF,CAC7HvC,KAAMsI,GACNlH,QAASmB,GDnDIsG,CAAgCtG,KAG7C,EAAiBuG,aAAQ,CACrBC,OAAQ,aACRC,QAAS,SAAAC,GAAO,MAAK,CACjBC,QAASD,EAAQE,WAErBC,MALqB,SAKfpG,EAAyBiG,GAAU,IAAD,EACpC,GAAK5F,EAAI2D,QAAT,CAGA,IAAMqC,EAAYrG,EAAK2F,MACjBW,EAAaX,EAEnB,GAAIU,IAAcC,EAAlB,CAIA,IAAMC,EAAiB,UAAGlG,EAAI2D,eAAP,aAAG,EAAawC,wBACjCC,GAAgBF,EAAkBG,OAASH,EAAkBpC,KAAO,EACpEwC,EAAeV,EAAQW,kBAC7B,GAAID,EAAc,CACd,IAAME,EAAeF,EAAaG,EAAIP,EAAkBpC,IAExD,GAAIkC,EAAYC,GAAcO,EAAeJ,EACzC,OAEJ,GAAIJ,EAAYC,GAAcO,EAAeJ,EACzC,OAEJ1H,EC0BiG,CAC7G/B,KAAMwI,GACNpH,QD5BiD,CAACkI,aAAYD,eAClDrG,EAAK2F,MAAQW,QA7BhBS,EAAT,oBAkCA,EAA+BhH,YAAQ,CACnC/C,KAAM,aACNgD,KAAM,WACF,MAAO,CAAE2F,UAEbK,QAAS,SAACC,GAAD,MAAc,CACnBe,WAAYf,EAAQe,iBAN5B,mBAASA,EAAT,KAASA,WAYT,OAFAC,EAVA,MAUKF,EAAK1G,IAGN,sBACIA,IAAKA,EACL/D,UAAS,UAAKC,KAAE2K,iBAAP,YAA2BF,EAAazK,KAAEQ,OAAS,GAAnD,cACTuD,YAAU,yBAHd,UAKI,qBAAKhE,UAAWC,KAAE4K,UAAlB,SACI,cAAC,WAAD,CAAUnK,KAAK,gBAEnB,cAAC,qBAAD,CACIoK,KAAM7H,EAAWV,KACjBe,MAAOL,EAAWK,MAClByH,UAAW9H,EAAWM,MACtByH,YAAa,kBAAM1B,EAAiBrG,U,oBE0CrCgI,GA1GW,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,iBAEnBC,EAAUC,cACVhI,EAAWC,cAEjB,EAAyD9D,GAAY,SAAAQ,GAAK,MAAK,CAC3E4E,uBAAwB5E,EAAM2E,YAAYC,uBAC1CC,eAAgB7E,EAAM2E,YAAYE,eAClC9E,KAAMC,EAAMD,KAAKA,SAHb6E,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,eAAgB9E,EAAhD,EAAgDA,KAM1C2C,EAAWhD,IAajB,EAA0B+J,aAAQ,CAC9BC,OAAQ,cACRgB,KAF8B,SAEzB/G,GD6BsB,IARQT,ECpBb,QAAdS,EAAKhD,KAIT+B,GDgB+BQ,EChBK,6BAAIS,GAAL,IAAW2H,QAASC,iBDgBmD,CAClH5K,KAAMqI,GACNjH,QAASmB,KCrBGR,ED2BuE,CACnF/B,KAAMuI,GACNnH,QC7ByC4B,OAJhC6H,EAAT,oBAWMC,EAAqB1G,mBAAQ,WAC/B,OAAIF,GAAkBD,EAAuB8G,OAAS,EAC/B9G,EAAuB+G,QAAO,SAACC,EAAaC,GAC3D,OAAOD,EAAMC,EAAKtI,QACnB,GAEgE,GAA7CsB,EAAiBA,EAAetB,MAAQ,GAEvD,IAEZ,CAACqB,EAAwBC,IAE5B,OACI,0BAAS5E,UAAS,UAAKC,KAAE8H,kBAAP,UAAlB,UACQ,sBACI/H,UAAS,YACT+D,IAAKwH,EACLvH,YAAU,cAHd,WAKMY,GAAoD,IAAlCD,EAAuB8G,QACvC,mBAAGzL,UAAS,UAAKC,KAAE4L,eAAP,gCAAZ,wNAEHjH,GACG,qBAAK5E,UAAS,sBAAd,SACI,cAAC,qBAAD,CACQU,KAAK,MACLoL,UAAU,EACVhB,KAAI,UAAKlG,EAAerC,KAApB,+BACJe,MAAOsB,EAAetB,MACtByH,UAAWnG,EAAerB,UAIzCoB,EAAuB8G,OAAS,GAC7B,qBAAKzL,UAAS,UAAKC,KAAE8L,cAAP,SAAd,SACKpH,EAAuBK,KAAI,SAAC/B,EAAoCoG,GAArC,OACpB,cAAC,GAAD,CACIA,MAAOA,EACPpG,WAAYA,GACPA,EAAWoI,cAKnCzG,GACG,qBAAK5E,UAAS,sBAAd,SACI,cAAC,qBAAD,CACQU,KAAK,SACLoL,UAAU,EACVhB,KAAI,UAAKlG,EAAerC,KAApB,yBACJe,MAAOsB,EAAetB,MACtByH,UAAWnG,EAAerB,aAKnD,sBAAKvD,UAAS,UAAKC,KAAE+L,oBAArB,UACK,sBAAKhM,UAAS,UAAKC,KAAEgM,cAAP,UAAd,UACI,sBAAMjM,UAAU,+BAAhB,SAAgDwL,IAChD,cAAC,eAAD,CAAc9K,KAAK,eAEvB,qBAAKkC,QAnFC,WACT9C,EAKD8E,GAAkBD,EAAuB8G,OAAS,GAClDP,EAAiB9H,GALjB+H,EAAQe,KAAK,CAAEtI,SAAU,YAiFrB,SACI,cAAC,SAAD,CAAQlD,KAAK,UAAUwD,KAAK,SAA5B,sG,qBCpFLiI,GAdS,SAAC,GAAwE,IAAtEtF,EAAqE,EAArEA,sBAAuBqE,EAA8C,EAA9CA,iBAE9C,OACI,mCACI,cAACkB,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACI,0BAAStM,UAAWC,KAAEsM,cAAtB,UACI,cAAC,GAAD,CAAmB1F,sBAAuBA,IAC1C,cAAC,GAAD,CAAmBqE,iBAAkBA,Y,oBCsC1CsB,GAvDG,WAEd,IAAM/J,EAAWhD,IACToE,EAAUR,cAAVQ,MAER,EAAkCtE,GAAY,SAAAQ,GAAK,MAAK,CACpDkC,MAAOlC,EAAMD,KAAKmC,MAClBG,SAAUrC,EAAMD,KAAKsC,SACrBtC,KAAMC,EAAMD,KAAKA,SAHbmC,EAAR,EAAQA,MAAOG,EAAf,EAAeA,SAWf,OAXA,EAAyBtC,KAYd,cAAC,IAAD,CAAUO,IAAU,OAALwD,QAAK,IAALA,OAAA,EAAAA,EAAO4I,OAAQ,MAIrC,qBAAKzM,UAAS,UAAKC,KAAEyM,eAAP,UAAd,SACI,sBAAK1M,UAAWC,KAAE0M,aAAlB,UACI,qBAAK3M,UAAU,QAAf,SACI,cAAC,OAAD,MAEJ,uBAAM4M,SAfG,SAACxE,GAClBA,EAAEyE,iBACFpK,EbiHwD,CAC5D/B,KAAMM,KarGoChB,UAAS,UAAKC,KAAE6M,KAAP,UAAvC,UACI,oBAAI9M,UAAU,kCAAd,sCACA,qBAAKA,UAAU,OAAf,SACI,cAAC,aAAD,CACIuC,KAAK,QACL2F,MAAOjG,EACP8K,SAAU,SAAA3E,GAAC,OAAI3F,EAAST,EAASoG,EAAEI,OAAON,aAGlD,qBAAKlI,UAAU,OAAf,SACI,cAAC,gBAAD,CACIuC,KAAK,WACL2F,MAAO9F,EACP2K,SAAU,SAAA3E,GAAC,OAAI3F,EAASN,EAAYiG,EAAEI,OAAON,aAGrD,cAAC,SAAD,gDAEJ,oBAAGlI,UAAS,UAAKC,KAAE+M,WAAP,qCAAZ,qIAC6B,cAAC,IAAD,CAAM3M,GAAI,CAAEuD,SAAU,YAAaC,MAAO,aAAe7D,UAAWC,KAAEgN,UAAtE,6HAE7B,oBAAGjN,UAAS,UAAKC,KAAE+M,WAAP,gCAAZ,wFACmB,cAAC,IAAD,CAAM3M,GAAI,CAAEuD,SAAU,mBAAoBC,MAAO,aAAe7D,UAAWC,KAAEgN,UAA7E,oI,oBCiBpBC,GAjEM,WAEjB,IAAMzK,EAAWhD,IACX2D,EAAWC,cAEjB,EAAwC9D,GAAY,SAAAQ,GAAK,MAAK,CAC1DkC,MAAOlC,EAAMD,KAAKmC,MAClBG,SAAUrC,EAAMD,KAAKsC,SACrBG,KAAMxC,EAAMD,KAAKyC,KACjBzC,KAAMC,EAAMD,KAAKA,SAJbyC,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MAAOG,EAArB,EAAqBA,SAYrB,OAZA,EAA+BtC,KAapB,cAAC,IAAD,CAAUO,GAAG,MAGD,cAAnB+C,EAASS,MACF,cAAC,IAAD,CAAUxD,GAAG,WAIpB,qBAAKL,UAAS,UAAKC,KAAEyM,eAAP,UAAd,SACI,sBAAK1M,UAAWC,KAAE0M,aAAlB,UACI,qBAAK3M,UAAU,QAAf,SACI,cAAC,OAAD,MAEJ,uBAAM4M,SAnBG,SAACxE,GAClBA,EAAEyE,iBACFpK,EdyJ8D,CAClE/B,KAAMI,KczIoCd,UAAS,UAAKC,KAAE6M,KAAP,UAAvC,UACI,oBAAI9M,UAAU,kCAAd,gFACA,qBAAKA,UAAU,OAAf,SACI,cAAC,QAAD,CACIU,KAAK,OACLyM,YAAY,qBACZjF,MAAO3F,EACPwK,SAAU,SAAA3E,GAAC,OAAI3F,EAASH,EAAQ8F,EAAEI,OAAON,aAGjD,qBAAKlI,UAAU,OAAf,SACI,cAAC,aAAD,CACIuC,KAAK,QACL2F,MAAOjG,EACP8K,SAAU,SAAA3E,GAAC,OAAI3F,EAAST,EAASoG,EAAEI,OAAON,aAGlD,qBAAKlI,UAAU,OAAf,SACI,cAAC,gBAAD,CACIuC,KAAK,QACL2F,MAAO9F,EACP2K,SAAU,SAAA3E,GAAC,OAAI3F,EAASN,EAAYiG,EAAEI,OAAON,aAGrD,cAAC,SAAD,8HAEJ,oBAAGlI,UAAS,UAAKC,KAAE+M,WAAP,qCAAZ,kIAC0B,cAAC,IAAD,CAAM3M,GAAG,SAASL,UAAWC,KAAEgN,UAA/B,qDClE7BG,GAA2C,qBAC3CC,GAA2C,qBAC3CC,GAAyC,oBAEzCC,GAAmD,yBACnDC,GAAmD,yBACnDC,GAAiD,wBAEjDC,GAAiC,gBACjCC,GAAqC,kBCkDrCC,GAAmB,SAAC3L,GAAD,MAAyD,CACrFvB,KAAM2M,GACNvL,QAASG,IAQA4L,GAAuB,SAACzL,GAAD,MAAmE,CACnG1B,KAAM8M,GACN1L,QAASM,I,oBCAE0L,GA5DY,WAEvB,IAAMrL,EAAWhD,IACX2D,EAAWC,cACX8H,EAAUC,cAEhB,EAA0C7L,GAAY,SAAAQ,GAAK,MAAK,CAC5DkC,MAAOlC,EAAMD,KAAKmC,MAClBnC,KAAMC,EAAMD,KAAKA,KACjB8N,iBAAkB7N,EAAMsC,cAAcuL,qBAHlC3L,EAAR,EAAQA,MAAOnC,EAAf,EAAeA,KAAM8N,EAArB,EAAqBA,iBAiBrB,OANAG,qBAAU,WACFH,GAAoBA,EAAiBI,SACrC7C,EAAQ8C,QAAQ,CAAErK,SAAU,kBAAmBC,MAAO,yBAE3D,CAAC+J,EAAkBzC,EAAS1I,IAE3B3C,EACO,cAAC,IAAD,CAAUO,GAAG,MAGD,cAAnB+C,EAASS,MACF,cAAC,IAAD,CAAUxD,GAAG,WAIpB,qBAAKL,UAAS,UAAKC,KAAEyM,eAAP,UAAd,SACI,sBAAK1M,UAAWC,KAAE0M,aAAlB,UACI,qBAAK3M,UAAU,QAAf,SACI,cAAC,OAAD,MAEJ,uBACIA,UAAS,UAAKC,KAAE6M,KAAP,UACTF,SA3BK,SAACxE,GAClBA,EAAEyE,iBACFpK,ED+BwD,CAC5D/B,KAAM0M,MCTM,UAII,oBAAIpN,UAAU,kCAAd,uIACA,qBAAKA,UAAU,OAAf,SACI,cAAC,QAAD,CACIU,KAAK,OACLyM,YAAY,oDACZjF,MAAOjG,EACP8K,SAAU,SAAA3E,GAAC,OAAI3F,EAAST,EAASoG,EAAEI,OAAON,aAGlD,cAAC,SAAD,0FAEJ,oBAAGlI,UAAS,UAAKC,KAAE+M,WAAP,qCAAZ,0GACsB,cAAC,IAAD,CAAM3M,GAAG,SAASL,UAAWC,KAAEgN,UAA/B,qD,oBCcvBiB,GApEW,WAEtB,IAAMzL,EAAWhD,IACX2D,EAAWC,cACX8H,EAAUC,cAEhB,EAA4D7L,GAAY,SAAAQ,GAAK,MAAK,CAC9EqC,SAAUrC,EAAMD,KAAKsC,SACrB+L,UAAWpO,EAAMsC,cAAc8L,UAC/BrO,KAAMC,EAAMD,KAAKA,KACjB+N,qBAAsB9N,EAAMsC,cAAcwL,yBAJtCzL,EAAR,EAAQA,SAAU+L,EAAlB,EAAkBA,UAAWrO,EAA7B,EAA6BA,KAAM+N,EAAnC,EAAmCA,qBAOnCE,qBAAU,WACFF,GAAwBA,EAAqBG,SAC7C7C,EAAQ8C,QAAQ,CAAErK,SAAU,aAEjC,CAACuH,EAAS0C,IAOb,OAAI/N,EACO,cAAC,IAAD,CAAUO,GAAG,MAGD,uBAAnB+C,EAASS,MACF,cAAC,IAAD,CAAUxD,GAAG,WAIpB,qBAAKL,UAAS,UAAKC,KAAEyM,eAAP,UAAd,SACI,sBAAK1M,UAAWC,KAAE0M,aAAlB,UACI,qBAAK3M,UAAU,QAAf,SACI,cAAC,OAAD,MAEJ,uBACIA,UAAS,UAAKC,KAAE6M,KAAP,UACTF,SArBK,SAACxE,GAClBA,EAAEyE,iBACFpK,EFmCgE,CACpE/B,KAAM6M,MEnBM,UAII,oBAAIvN,UAAU,kCAAd,uIACA,qBAAKA,UAAU,OAAf,SACI,cAAC,gBAAD,CACIuC,KAAK,WACL2F,MAAO9F,EACP2K,SAAU,SAAA3E,GAAC,OAAI3F,EAASN,EAAYiG,EAAEI,OAAON,aAGrD,qBAAKlI,UAAU,OAAf,SACI,cAAC,QAAD,CACIU,KAAK,OACLyM,YAAY,kHACZjF,MAAOiG,EACPpB,SAAU,SAAA3E,GAAC,OAAI3F,GFWd2L,EEXoChG,EAAEI,OAAON,MFWN,CAChExH,KAAMgN,GACN5L,QAASsM,KAFe,IAACA,OERT,cAAC,SAAD,wEAEJ,oBAAGpO,UAAS,UAAKC,KAAE+M,WAAP,qCAAZ,0GACsB,cAAC,IAAD,CAAM3M,GAAG,SAASL,UAAWC,KAAEgN,UAA/B,qD,oBCdvBoB,GAlDK,WAEhB,IAAM5L,EAAWhD,IACjB,EAAkCF,GAAY,SAAAQ,GAAK,MAAK,CACpDkC,MAAOlC,EAAMD,KAAKmC,MAClBM,KAAMxC,EAAMD,KAAKyC,KACjBH,SAAUrC,EAAMD,KAAKsC,aAHjBH,EAAR,EAAQA,MAAOM,EAAf,EAAeA,KAAMH,EAArB,EAAqBA,SAWrB,OACI,qBAAKpC,UAAS,UAAKC,KAAEqO,eAAP,UAAd,SACI,uBAAO1B,SAPa,SAACxE,GACzBA,EAAEyE,iBACFpK,EAASd,MAKiC3B,UAAWC,KAAE0M,aAAnD,UACI,qBAAK3M,UAAU,OAAf,SACI,cAAC,QAAD,CACIU,KAAK,OACLyM,YAAY,qBACZjF,MAAO3F,EACPwK,SAAU,SAAA3E,GAAC,OAAI3F,EAASH,EAAQ8F,EAAEI,OAAON,aAGjD,qBAAKlI,UAAU,OAAf,SACI,cAAC,aAAD,CACIuC,KAAK,QACL2F,MAAOjG,EACP8K,SAAU,SAAA3E,GAAC,OAAI3F,EAAST,EAASoG,EAAEI,OAAON,aAGlD,qBAAKlI,UAAU,OAAf,SACI,cAAC,gBAAD,CACIuC,KAAK,WACL2F,MAAO9F,EACP2K,SAAU,SAAA3E,GAAC,OAAI3F,EAASN,EAAYiG,EAAEI,OAAON,aAGrD,sBAAKlI,UAAWC,KAAEsO,oBAAlB,UACI,qBAAKvO,UAAS,UAAKC,KAAEuO,mBAAP,gCAAd,kDACA,cAAC,SAAD,CAAQ9N,KAAK,UAAUwD,KAAK,SAA5B,6E,oBCgFLuK,GAhHG,SAAC,GAA6C,IAAD,IAA1CC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,UAEzBvL,EAAWC,cACTzD,EAASC,cAATD,KAEAgP,EAA8CD,EAA9CC,UAAWlK,EAAmCiK,EAAnCjK,YAAanC,EAAsBoM,EAAtBpM,KAAMsM,EAAgBF,EAAhBE,OAAQrL,EAAQmL,EAARnL,IAEtCsL,EAAqBvP,GAAY,SAAAQ,GAAK,MAAK,CAC/C+O,iBAAkB/O,EAAM2E,YAAYA,gBADhCoK,iBAIFC,EAA2CjK,mBAAQ,WAKrD,OAJ0BJ,EAAYM,KAAI,SAACgK,GACvC,cAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAkBG,MAAK,SAACvL,GAAD,OAAuBA,EAAKF,MAAQwL,QAG7CE,QAAO,SAAAxL,GAAI,OAAIyL,QAAQzL,QACjD,CAACgB,EAAaoK,IAEXM,EAAatK,mBAAQ,WACvB,OAAOiK,EAAgBrD,QAAO,SAACC,EAAaC,GACxC,OAAIA,EACOD,EAAMC,EAAKtI,MAEXqI,EAAM,IAElB,KACJ,CAACoD,IAEEM,EAAsBvK,mBAAQ,WAIhC,MAAO,CAHYiK,EAAgBO,MAAM,EAAG,GAC1BP,EAAgBO,MAAM,MAGzC,CAACP,IAEEQ,EAAazK,mBAAQ,WACvB,GAAI6J,EACA,OAAOA,EAAUa,QACb,IAAK,UACD,MAAO,uCACX,IAAK,UACD,MAAO,8CACX,IAAK,OACD,MAAO,mDACX,QACI,MAAO,MAGpB,CAACb,IAMJ,OACI,cAAC,IAAD,CACItO,GAAI,CACAuD,SAAS,GAAD,OAAKR,EAASQ,SAAd,YAA0BJ,GAClCK,MAAO,CAAEC,WAAYV,IAEzBR,QAViB,WACrB8L,EAAaC,EAAWI,IAUpB/O,UAAWC,KAAEwP,8BANjB,SAQI,sBAAKzP,UAAS,UAAKC,KAAEyP,sBAAP,aAAd,UACI,sBAAK1P,UAAS,UAAKC,KAAE0P,aAAP,SAAd,UACI,oBAAG3P,UAAU,gCAAb,cAA+C6O,KAC/C,mBAAG7O,UAAU,sCAAb,SAAoD4O,OAExD,oBAAI5O,UAAU,kCAAd,SAAiDuC,IACvC,oBAAT3C,GACG,mBAAGI,UAAS,oCAAoD,SAArB2O,EAAUa,OAAoB,OAAS,IAAlF,SAAyFD,IAE7F,sBAAKvP,UAAS,UAAKC,KAAE2P,6BAAP,SAAd,UACI,sBAAK5P,UAAWC,KAAE4P,kCAAlB,UACKR,EAAoB,GAAGrK,KAAI,SAACtB,EAAM2F,GAAP,OACxB,qBACIrJ,UAAWC,KAAE6P,iCAEbrK,MAAO,CACHsK,UAAU,eAAD,OAAyB,GAAR1G,EAAjB,OACT2G,OAAQ,EAAI3G,GALpB,SAQI,qBAAKjF,IAAG,OAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAMH,MAAOc,IAAG,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAMnB,QAN7B8G,MASZgG,EAAoB,GAAG5D,OAAS,GAC7B,sBACIzL,UAAWC,KAAE6P,iCACbrK,MAAO,CACHsK,UAAU,oBACVC,OAAQ,GAJhB,UAOI,qBAAK5L,IAAG,UAAEiL,EAAoB,GAAG,UAAzB,aAAE,EAA2B9L,MAAOc,IAAG,UAAEgL,EAAoB,GAAG,UAAzB,aAAE,EAA2B9M,OAC5E,sBAAKvC,UAAS,UAAKC,KAAEgQ,wCAAP,gCAAd,cACMZ,EAAoB,GAAG5D,gBAKzC,sBAAKzL,UAAS,UAAKC,KAAEiQ,6BAArB,UACI,sBAAMlQ,UAAU,qCAAhB,SAAsDoP,IACtD,cAAC,eAAD,CAAc1O,KAAK,wBCzH9ByP,GAAuE,mCACvEC,GAAmE,iCACnEC,GAAqE,kCACrEC,GAAyD,4BACzDC,GAAmE,iCAEnEC,GAAyE,oCACzEC,GAAqE,kCACrEC,GAAuE,mCACvEC,GAA2D,6BAC3DC,GAAqE,kCCgFrEC,GAA8B,iBAA2C,CAClFnQ,KAAMkQ,K,oBClCKE,GAxCI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,qBAEZtO,EAAWhD,IACTuR,EAAezR,GAAY,SAAAQ,GAAK,MAAK,CACzCiR,WAAYjR,EAAMkR,SAASD,eADvBA,WAIRjD,qBAAU,WACNtL,EAASoO,QACV,IAEH,IAAMK,EAAiBpM,mBAAQ,WAC3B,GAAIkM,GAAcA,EAAWG,OACzB,OAAOH,EAAWG,OAAOnM,KAAI,SAACoM,GAC1B,GAAIA,GAASA,EAAM1M,YACf,OACI,cAAC,GAAD,CACIgK,aAAcqC,EACdpC,UAAWyC,GACNA,EAAM5N,UAMhC,CAACwN,EAAYD,IAEhB,OACI,qBAAK/Q,UAAS,UAAKC,KAAEoR,iBAAP,UAAd,SACI,qBAAKrR,UAAWC,KAAEqR,yBAAlB,SACKJ,O,oBCuDFK,GAtFE,SAAC,GAA8C,IAA5CR,EAA2C,EAA3CA,qBAEhB,EAAuDxR,GAAY,SAAAQ,GAAK,MAAK,CACzEyR,UAAWzR,EAAMkR,SAASO,UAC1BC,mBAAoB1R,EAAMkR,SAASQ,mBACnC/M,YAAa3E,EAAM2E,YAAYA,gBAH3B8M,EAAR,EAAQA,UAAW9M,EAAnB,EAAmBA,YAAa+M,EAAhC,EAAgCA,mBAM1BC,EAAsB,SAAClC,GACzB,IAAKgC,EACD,OAAO,KAGX,IAAMG,EAAwB,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAWL,OAAOjC,QAAO,SAACkC,GAAD,OAAmBA,EAAM5B,SAAWA,KAE9F,OAAImC,EAAUlG,OAAS,GACZkG,EAAUrC,MAAM,EAAG,IAEnBqC,GAITC,EAAmBF,EAAoB,WACvCG,EAAgBH,EAAoB,QAEpCI,EAAmBhN,mBAAQ,WAC7B,GAAI0M,GAAa9M,EACb,OAAO8M,EAAUL,OAAOnM,KAAI,SAACoM,GACzB,GAAIA,GAASA,EAAM1M,YACf,OACI,cAAC,GAAD,CACIiK,UAAWyC,EACX1C,aAAcqC,GACTK,EAAM5N,UAMhC,CAACgO,EAAWT,EAAsBrM,IAErC,OACI,sBAAK1E,UAAS,UAAKC,KAAE8C,UAAP,UAAd,UACI,oBAAI/C,UAAU,kCAAd,wFACEyR,GACE,mBAAGzR,UAAU,4CAAb,gHAEHwR,GAAa9M,GAAe+M,GACzB,sBAAKzR,UAAWC,KAAE8R,kBAAlB,UACI,qBAAK/R,UAAWC,KAAE+R,eAAlB,SACKF,IAEL,sBAAK9R,UAAWC,KAAEgS,gBAAlB,UACI,sBAAKjS,UAAS,UAAKC,KAAEiS,eAAP,UAAd,UACI,gCACI,oBAAIlS,UAAU,kCAAd,mDACA,qBAAKA,UAAWC,KAAEkS,qBAAlB,gBACKN,QADL,IACKA,OADL,EACKA,EAAe7M,KAAI,SAACoM,GAAD,OAChB,mBAAmBpR,UAAU,0CAA7B,SAAwEoR,EAAMvC,QAAtEuC,EAAM5N,aAI1B,gCACI,oBAAIxD,UAAU,kCAAd,0DACA,qBAAKA,UAAWC,KAAEkS,qBAAlB,gBACKP,QADL,IACKA,OADL,EACKA,EAAkB5M,KAAI,SAACoM,GAAD,OACnB,mBAAmBpR,UAAU,qCAA7B,SAAmEoR,EAAMvC,QAAjEuC,EAAM5N,gBAK9B,oBAAIxD,UAAU,6BAAd,oIACA,mBAAGA,UAAU,gDAAb,SAA8DwR,EAAUY,MAAMC,eAAe,WAC7F,oBAAIrS,UAAU,6BAAd,6HACA,mBAAGA,UAAU,0CAAb,SAAwDwR,EAAUc,WAAWD,eAAe,qBC1FvGE,GAA2E,qCAC3EC,GAAiE,gCAGjEC,GAAmD,yBACnDC,GAA2D,6BAC3DC,GAAmD,yBCyCnDC,GAAuB,SAAC3P,GAAD,MAA2D,CAC3FvC,KAAM+R,GACN3Q,QAASmB,IAEA4P,GAAsB,SAACzB,GAAD,MAAoD,CACnF1Q,KAAMiS,GACN7Q,QAASsP,I,oBCjBE0B,GAhCW,WAEtB,IAAMC,EAAoBxT,GAAY,SAAAQ,GAAK,OAAIA,EAAMiT,MAAMD,qBAE3D,OACI,gCACI,qBAAK/S,UAAS,UAAKC,KAAEsD,MAAP,SAAqBa,IAAG,OAAE2O,QAAF,IAAEA,OAAF,EAAEA,EAAmBxP,MAAOc,IAAG,OAAE0O,QAAF,IAAEA,OAAF,EAAEA,EAAmBxQ,OAC1F,mBAAGvC,UAAS,qCAAgCC,KAAEgT,SAAlC,SAAZ,gBACKF,QADL,IACKA,OADL,EACKA,EAAmBxQ,OAExB,sBAAKvC,UAAWC,KAAEiT,OAAlB,UACI,sBAAKlT,UAAWC,KAAEkT,YAAlB,UACI,sBAAMnT,UAAU,8BAAhB,iFACA,sBAAMA,UAAU,gCAAhB,gBAAiD+S,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAmBK,cAExE,sBAAKpT,UAAWC,KAAEkT,YAAlB,UACI,sBAAMnT,UAAU,8BAAhB,oDACA,sBAAMA,UAAU,gCAAhB,gBAAiD+S,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAmBM,cAExE,sBAAKrT,UAAWC,KAAEkT,YAAlB,UACI,sBAAMnT,UAAU,8BAAhB,8CACA,sBAAMA,UAAU,gCAAhB,gBAAiD+S,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAmBO,SAExE,sBAAKtT,UAAWC,KAAEkT,YAAlB,UACI,sBAAMnT,UAAU,8BAAhB,sEACA,sBAAMA,UAAU,gCAAhB,gBAAiD+S,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAmBQ,0B,oBCUzEC,GA7BY,WAEvB,IAAQC,EAAOC,cAAPD,GACFhR,EAAWhD,IAEjB,EAA2CF,GAAY,SAAAQ,GAAK,MAAK,CAC7D2E,YAAa3E,EAAM2E,YAAYA,YAC/BqO,kBAAmBhT,EAAMiT,MAAMD,sBAF3BrO,EAAR,EAAQA,YAAaqO,EAArB,EAAqBA,kBAcrB,OATAhF,qBAAU,WACN,GAAIrJ,EAAa,CACb,IAAMzB,EAAayB,EAAYuK,MAAK,SAACvL,GAAD,OAAuBA,EAAKF,MAAQiQ,KACpExQ,GACAR,EAASmQ,GAAqB3P,OAGvC,CAACyB,EAAa+O,EAAIhR,IAGjB,sBAAKzC,UAAWC,KAAE0T,mBAAlB,UACI,oBAAI3T,UAAS,UAAKC,KAAE2T,iBAAP,8BAAb,qHACCb,GACG,cAAC,GAAD,Q,oBCjCD,OAA0B,yCCA1B,OAA0B,mCC4B1Bc,GApBU,WAErB,IAAQJ,EAAOC,cAAPD,GAER,OACI,qBAAKzT,UAAWC,KAAE6T,cAAlB,SACI,sBAAK9T,UAAS,cAAd,UACI,mBAAGA,UAAS,UAAKC,KAAEiD,MAAP,qCAAZ,SAA8DuQ,IAC9D,oBAAIzT,UAAS,UAAKC,KAAE8T,YAAP,qCAAb,iIACA,sBAAK/T,UAAS,UAAKC,KAAE+T,cAAP,UAAd,UACI,qBAAKhU,UAAWC,KAAEwJ,OAAQrF,IAAKqF,GAAQpF,IAAI,WAC3C,qBAAKrE,UAAWC,KAAE6D,WAAYM,IAAKN,GAAYO,IAAI,kBAEvD,mBAAGrE,UAAS,UAAKC,KAAEgU,aAAP,qCAAZ,qJACA,mBAAGjU,UAAS,UAAKC,KAAEiU,aAAP,gCAAZ,kQ,oBCfVC,GAAY9M,SAAS+M,eAAe,cA0C3BC,GApCgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYzT,EAAe,EAAfA,SAEpC0T,EAAahV,GAAY,SAAAQ,GAAK,OAAIA,EAAMiT,MAAMuB,cAEpD,OAAKJ,GAIEK,IAASC,aAER,sBAAKzU,UAAWC,KAAEyU,cAAlB,UACI,sBAAK1U,UAAS,UAAKC,KAAE+S,MAAP,sCAAd,WACe,OAAVuB,QAAU,IAAVA,OAAA,EAAAA,EAAY9P,QAA6B,sBAApB8P,EAAW7T,MAC7B,oBAAIV,UAAS,oCAA+BC,KAAE0U,aAA9C,SAA8DJ,EAAW9P,SAElE,OAAV8P,QAAU,IAAVA,OAAA,EAAAA,EAAY9P,QAA6B,cAApB8P,EAAW7T,MAC7B,oBAAIV,UAAS,wCAAmCC,KAAE0U,aAAlD,SAAkEJ,EAAW9P,QAEjF,qBACIzE,UAAWC,KAAE2U,YACbhS,QAAS0R,EAFb,SAII,cAAC,YAAD,CAAW5T,KAAK,cAEnBG,KAEL,qBACI+B,QAAS0R,EACTtU,UAAWC,KAAE4U,mBAIzBV,IA3BO,M,oBCgBAW,GAzBM,WAEjB,MAAgCvV,GAAY,SAAAQ,GAAK,MAAK,CAClDqR,MAAOrR,EAAMqR,MAAMA,MACnB2D,aAAchV,EAAMqR,MAAM2D,iBAFtB3D,EAAR,EAAQA,MAKR,OALA,EAAe2D,aAMJ,cAAC,GAAD,IAIP,sBAAK/U,UAAS,cAAd,UACI,mBAAGA,UAAS,UAAKC,KAAEiD,MAAP,qCAAZ,gBAA8DkO,QAA9D,IAA8DA,OAA9D,EAA8DA,EAAOvC,SACrE,oBAAI7O,UAAS,UAAKC,KAAE8T,YAAP,qCAAb,iIACA,sBAAK/T,UAAS,UAAKC,KAAE+T,cAAP,UAAd,UACI,qBAAKhU,UAAWC,KAAEwJ,OAAQrF,IAAKqF,GAAQpF,IAAI,WAC3C,qBAAKrE,UAAWC,KAAE6D,WAAYM,IAAKN,GAAYO,IAAI,kBAEvD,mBAAGrE,UAAS,UAAKC,KAAEgU,aAAP,qCAAZ,qJACA,mBAAGjU,UAAS,UAAKC,KAAEiU,aAAP,gCAAZ,gQ,oBCyCGc,GA/DG,WAEd,IAAQC,EAAqB1V,GAAY,SAAAQ,GAAK,MAAK,CAC/CkV,iBAAkBlV,EAAMiT,MAAMiC,qBAD1BA,iBAIF1F,EAAazK,mBAAQ,WACvB,GAAImQ,EACA,OAAOA,EAAiB7D,MAAM5B,QAC1B,IAAK,UACD,MAAO,uCACX,IAAK,UACD,MAAO,8CACX,IAAK,OACD,MAAO,mDACX,QACI,MAAO,MAGpB,CAACyF,IAEE7F,EAAqBtK,mBAAQ,WAC/B,OAAImQ,EACOA,EAAiBhQ,eAAeyG,QAAO,SAACC,EAAaC,GACxD,OAAOD,EAAMC,EAAKtI,QACnB,GAEI,IAEZ,CAAC2R,IAEJ,OACI,qBAAKjV,UAAU,OAAf,SACKiV,GACG,qCACI,oBAAIjV,UAAU,kCAAd,SAAkDiV,EAAiB7D,MAAM7O,OACzE,mBAAGvC,UAAU,yCAAb,SAAwDuP,IACxD,mBAAGvP,UAAU,kCAAb,mDACA,qBAAKA,UAAS,UAAKC,KAAEiV,mBAAP,eAAd,SACKD,EAAiBhQ,eAAeD,KAAI,SAAC/B,EAAyBoG,GAA1B,OACjC,sBAAiBrJ,UAAS,UAAKC,KAAEkV,iBAAjC,UACI,qBAAKnV,UAAS,UAAKC,KAAEmV,gBAAP,SAAd,SACI,qBAAKpV,UAAWC,KAAEoV,iBAAkBjR,IAAKnB,EAAWM,MAAOc,IAAKpB,EAAWV,SAE/E,mBAAGvC,UAAS,UAAKC,KAAEqV,iBAAP,gCAAZ,SAAqErS,EAAWV,OAChF,mBAAGvC,UAAU,qCAAb,SAAoDiD,EAAWK,QAC/D,cAAC,eAAD,CAAc5C,KAAK,cANb2I,QAUlB,sBAAKrJ,UAAS,UAAKC,KAAEsV,mBAArB,UACI,mBAAGvV,UAAS,UAAKC,KAAEuV,gBAAP,0CAAZ,SACKP,EAAiB7D,MAAMxC,YAE5B,mBAAG5O,UAAU,qCAAb,SAAmDoP,IACnD,cAAC,eAAD,CAAc1O,KAAK,qB,sDCpD9B+U,GAA2C,SAAC,GAA2B,IAAzB5U,EAAwB,EAAxBA,SAAa6U,EAAW,mBACzEjT,EAAWhD,IACXK,EAAOP,GAAY,SAAAQ,GAAK,OAAIA,EAAMD,KAAKA,QAE7C,EAAsCgH,oBAAkB,GAAxD,mBAAO6O,EAAP,KAAqBC,EAArB,KAEMC,EAAI,yCAAG,uBAAAC,EAAA,sEACHrT,EAASb,KADN,OAETgU,GAAc,GAFL,2CAAH,qDASV,OAJA7H,qBAAU,WACN8H,MACD,IAEEF,EAKD,cAAC,IAAD,6BACQD,GADR,IAEIK,OAAQ,gBAAE3S,EAAF,EAAEA,SAAF,OAAgBtD,EACpBe,EAEI,cAAC,IAAD,CACIR,GAAI,CACAuD,SAAU,SACVC,MAAO,CAAE4I,KAAMrJ,UAZ5B,MC1BF4S,GAAyC,oBACzCC,GAAyC,oBACzCC,GAAuC,mBACvCC,GAA6B,cCiC7BC,GAAkB,iBAA+B,CAC5D1V,KAAMsV,KAMKK,GAAiB,iBAA8B,CAC1D3V,KAAMwV,K,oBCiBOI,GAlDO,WAClB,IAAMC,EAAS7C,cACP9T,EAASC,cAATD,KACF6C,EAAWhD,IACjB,EAAiEF,GAAY,SAAAQ,GAAK,MAAK,CACnF2E,YAAa3E,EAAM2E,YAAYA,YAC/B8M,UAAWzR,EAAMkR,SAASO,UAC1BR,WAAYjR,EAAMkR,SAASD,WAC3BiE,iBAAkBlV,EAAMiT,MAAMiC,qBAJ1BvQ,EAAR,EAAQA,YAAa8M,EAArB,EAAqBA,UAAWR,EAAhC,EAAgCA,WAAYiE,EAA5C,EAA4CA,iBAO5ClH,qBAAU,WACO,wBAATnO,GACA6C,EAASoO,QAEd,IAEH,IAAM2F,EAAuB,SAACC,GAC1B,IAAMC,EAAeD,EAAUtF,OAAOlC,MAAK,SAACmC,GAAD,OAAmBA,EAAM5N,MAAQ+S,EAAO9C,MAEnF,GAAIiD,EAAc,CACd,IAAMzR,EAAiByR,EAAahS,YAAYM,KAAI,SAACgK,GACjD,IAAM2H,EAAc,OAAGjS,QAAH,IAAGA,OAAH,EAAGA,EAAauK,MAAK,SAACvL,GAAD,OAAuBA,EAAKF,MAAQwL,KAE7E,GAAI2H,EACA,OAAOA,KAIflU,EAASoQ,GAAoB,CAAEzB,MAAOsF,EAAezR,sBAa7D,OATA8I,qBAAU,WACFrJ,GAAe8M,GAAsB,cAAT5R,GAC5B4W,EAAqBhF,GAErB9M,GAAesM,GAAuB,wBAATpR,GAC7B4W,EAAqBxF,KAE1B,CAACQ,EAAW9M,EAAasM,IAGxB,sBAAKhR,UAAWC,KAAE6T,cAAlB,UACKmB,GAAoB,qBAAIjV,UAAS,UAAKC,KAAEwE,MAAP,iCAAb,cAA4DwQ,EAAiB7D,MAAMvC,UACxG,cAAC,GAAD,QCsKG+H,GA9KH,WAEV,IAAMC,EAAc,WAClB,IAAMpU,EAAWhD,IACX0L,EAAUC,cACVhI,EAAWC,cAEbS,EACiB,SAAnBqH,EAAQ2L,QAAqB1T,EAASS,OAAST,EAASS,MAAMC,WAExDyQ,EAAehV,GAAY,SAAAQ,GAAK,MAAK,CAC3CwU,WAAYxU,EAAMiT,MAAMuB,eADlBA,WAIFwC,EACe,oBADfA,EAEU,eAFVA,EAGO,YAePhG,EAAuB,SAACK,EAAenM,GbrCX,IAAC+R,EasCjCvU,EAASoQ,GAAoB,CAAEzB,QAAOnM,oBACtCxC,GbvCiCuU,EauCD,IAAD,OAAK5F,EAAMvC,QbvC+C,CAC3FnO,KAAMgS,GACN5Q,QAASkV,MawCH1C,EAAa,WACjB7R,EFxC+C,CACnD/B,KAAMyV,KEwCFhL,EAAQ8L,UA6BV,OA1BAlJ,qBAAU,WACRtL,E7BlCqE,CACvE/B,KAAMkI,K6BmCAsO,aAAaC,QAAQ,iBACvB1U,EAASb,KAGXa,EjBvB8E,CAChF/B,KAAM6P,OiBuBH,CAAC9N,IAEJsL,qBAAU,WAER,IAAMqJ,EAAqB,SAAChP,GACV,WAAVA,EAAEiP,KACF/C,KAMR,OAFAjN,SAASiQ,iBAAiB,UAAWF,GAE9B,WACH/P,SAASkQ,oBAAoB,UAAWH,MAG3C,IAGG,qCACGtT,GACC,cAAC,IAAD,CAAOlE,KAAK,aAAZ,SACE,eAAC,GAAD,CAAO0U,WAAYA,EAAnB,WACa,OAAVC,QAAU,IAAVA,OAAA,EAAAA,EAAY7T,QAASqW,GAAuC,cAAC,GAAD,KAClD,OAAVxC,QAAU,IAAVA,OAAA,EAAAA,EAAY7T,QAASqW,GAAkC,cAAC,GAAD,KAC7C,OAAVxC,QAAU,IAAVA,OAAA,EAAAA,EAAY7T,QAASqW,GAA+B,cAAC,GAAD,SAI3D,eAAC,IAAD,CAAQ3T,SAAUU,GAAcV,EAAhC,UACE,cAAC,IAAD,CAAOxD,KAAK,IAAIU,OAAK,EAArB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,CACEuG,sBA/Dc,SAACnD,GAC7BjB,EAASmQ,GAAqBlP,IAC9BjB,EbjCwF,CAC1F/B,KAAM6R,Ma8FUrH,iBA3DS,SAACsM,GACxB/U,EblC4E,CAC9E/B,KAAM8R,KakCJrH,EAAQe,KAAK,CAAEtI,SAAU,sBAAuBC,MAAO,CAAEC,WAAY0T,KAErE/U,EAAS2T,aA4DD,cAAC,IAAD,CAAOxW,KAAK,mBAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,GAAD,CAAgBA,KAAK,sBAArB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,QAAQU,OAAK,EAAzB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,CAAUyQ,qBAAsBA,QAIpC,cAAC,GAAD,CAAgBnR,KAAK,WAAWU,OAAK,EAArC,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,UAKN,cAAC,GAAD,CAAgBV,KAAK,kBAArB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,CAAYmR,qBAAsBA,UAKxC,cAAC,IAAD,CAAOnR,KAAK,mBAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,QAIJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,EAAD,UACE,cAAC,GAAD,eAShB,OACE,eAAC,IAAD,WACE,cAACiX,EAAD,IACA,yDCzMSY,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sCCcDQ,GAAiC,CAC1CxT,YAAa,KACbyT,oBAAoB,EACpBC,kBAAkB,EAElBzT,uBAAwB,GACxBC,eAAgB,MCXb,IAAMsT,GAA4B,CACrCG,uBAAwB,KACxBtF,kBAAmB,KACnBkC,iBAAkB,KAClBV,WAAY,MCLT,IAAM2D,GAA4B,CACrC9G,MAAO,KACP2D,cAAc,EACduD,YAAY,GCMT,IAAMJ,GAAoC,CAC7CtK,iBAAkB,KAClB2K,kBAAkB,EAClBC,iBAAiB,EAEjBC,sBAAsB,EACtB5K,qBAAsB,KACtB6K,qBAAqB,EAErBvK,UAAW,ICVR,IAAM+J,GAA4B,CACrCS,aAAa,EACbC,YAAY,EACZ9Y,KAAM,KAENyC,KAAM,GACNN,MAAO,GACPG,SAAU,ICVP,IAAM8V,GAA+B,CACxCzG,oBAAoB,EACpBD,UAAW,KACXqH,qBAAqB,EACrB7H,WAAY,MCUT,IAAM8H,GAAqB,CAC9BC,OAAQxI,GACRyI,OAAQ7I,GACR8I,QAAS5I,GACT6I,QAAS9I,GACT+I,UAAW7I,IAIF8I,GAAsB,CAC/BL,OAAQnI,GACRoI,OAAQxI,GACRyI,QAASvI,GACTwI,QAASzI,GACT0I,UAAWxI,IAGF0I,GAAcC,aAAgB,CACvCtG,ML7BW,WAAiF,IAA3DnP,EAA0D,uDAAlDqU,GAAcpB,EAAoC,uCAC3F,OAAOA,EAAOpW,MACV,KAAK+R,GACD,OAAO,6BACA5O,GADP,IAEIkP,kBAAmB+D,EAAOhV,UAElC,KAAK6Q,GACD,OAAO,6BACA9O,GADP,IAEIoR,iBAAkB6B,EAAOhV,UAEjC,KAAKyQ,GACD,OAAO,6BACA1O,GADP,IAEI0Q,WAAY,CACR9P,MAAO,0GACP/D,KAAM,uBAGlB,KAAK8R,GACD,OAAO,6BACA3O,GADP,IAEI0Q,WAAY,CACR9P,MAAO,KACP/D,KAAM,kBAGlB,KAAKgS,GACD,OAAO,6BACA7O,GADP,IAEI0Q,WAAY,CACR9P,MAAOqS,EAAOhV,QACdpB,KAAM,eAGlB,QACI,OAAOmD,IKPfuN,MJ/BW,WAAiF,IAA3DvN,EAA0D,uDAAlDqU,GAAcpB,EAAoC,uCAC3F,OAAOA,EAAOpW,MACV,KAAKsV,GACD,OAAO,6BACAnS,GADP,IAEIkR,cAAc,IAEtB,KAAKkB,GACD,OAAO,6BACApS,GADP,IAEIkR,cAAc,EACd3D,MAAO0F,EAAOhV,UAEtB,KAAKoU,GACD,OAAO,6BACArS,GADP,IAEIkR,cAAc,EACduD,YAAY,IAEpB,KAAKnC,GACD,OAAO,6BACAtS,GADP,IAEIuN,MAAO,OAEf,QACI,OAAOvN,IIOfa,YNxBW,WAAkG,IAAtEb,EAAqE,uDAA7DqU,GAAcpB,EAA+C,uCAC5G,OAAOA,EAAOpW,MACV,KAAKkI,GACD,OAAO,6BACA/E,GADP,IAEIsU,oBAAoB,IAE5B,KAAKrP,GACD,OAAO,6BACAjF,GADP,IAEIuU,kBAAkB,EAClBD,oBAAoB,IAE5B,KAAKtP,GACD,OAAO,6BACAhF,GADP,IAEIa,YAAaoS,EAAOhV,QACpBsW,kBAAkB,EAClBD,oBAAoB,IAE5B,KAAKpP,GACD,OAAO,6BACAlF,GADP,IAEIc,uBAAuB,GAAD,oBAAMd,EAAMc,wBAAZ,CAAoCmS,EAAOhV,YAEzE,KAAKkH,GACD,OAAO,6BACAnF,GADP,IAEIc,uBAAwBd,EAAMc,uBAAuBuK,QAAO,SAAAxL,GAAI,OAAIA,EAAK2H,UAAYyL,EAAOhV,QAAQuJ,aAE5G,KAAKpC,GACD,OAAO,6BACApF,GADP,IAEIe,eAAgBkS,EAAOhV,UAE/B,KAAKoH,GACD,IAAMqQ,EAAG,aAAO1V,EAAMc,wBACzB6U,EAAWD,EAAIzC,EAAOhV,QAAQiI,WAC9B0P,EAAYF,EAAIzC,EAAOhV,QAAQkI,YAI5B,OAHTuP,EAAIzC,EAAOhV,QAAQkI,YAAcwP,EACjCD,EAAIzC,EAAOhV,QAAQiI,WAAa0P,EAEhB,6BACA5V,GADP,IAEIc,uBAAwB4U,IAEhC,KAAKpQ,GACD,OAAO,6BACAtF,GADP,IAEIc,uBAAwB,GACxBC,eAAgB,OAExB,QACI,OAAOf,IM5BfxB,cHnBW,WAA0G,IAA5EwB,EAA2E,uDAAnEqU,GAAcpB,EAAqD,uCACpH,OAAOA,EAAOpW,MACV,KAAK0M,GACD,OAAO,6BACAvJ,GADP,IAEI0U,kBAAkB,IAE1B,KAAKlL,GACD,OAAO,6BACAxJ,GADP,IAEI+J,iBAAkBkJ,EAAOhV,QACzByW,kBAAkB,EAClBC,iBAAiB,IAEzB,KAAKlL,GACD,OAAO,6BACAzJ,GADP,IAEI2U,iBAAiB,EACjBD,kBAAkB,IAE1B,KAAKhL,GACD,OAAO,6BACA1J,GADP,IAEI4U,sBAAsB,IAE9B,KAAKjL,GACD,OAAO,6BACA3J,GADP,IAEI4U,sBAAsB,EACtBC,qBAAqB,EACrB7K,qBAAsBiJ,EAAOhV,UAErC,KAAK2L,GACD,OAAO,6BACA5J,GADP,IAEI4U,sBAAsB,EACtBC,qBAAqB,IAE7B,KAAKhL,GACD,OAAO,6BACA7J,GADP,IAEIsK,UAAW2I,EAAOhV,UAE1B,KAAK6L,GACD,OAAO,6BACA9J,GADP,IAEIsK,UAAW,KAEnB,QACI,OAAOtK,IG7Bf/D,KFvBW,WAA8E,IAAzD+D,EAAwD,uDAAhDqU,GAAcpB,EAAkC,uCACxF,OAAOA,EAAOpW,MACV,KAAKQ,EACD,OAAO,6BACA2C,GADP,IAEI8U,aAAa,IAErB,KAAKxX,EACD,OAAO,6BACA0C,GADP,IAEI8U,aAAa,EACbC,YAAY,EACZ9Y,KAAMgX,EAAOhV,UAErB,KAAKV,EACD,OAAO,6BACAyC,GADP,IAEI8U,aAAa,EACbC,YAAY,EACZ9Y,KAAM,OAEd,KAAKuB,EACD,OAAO,6BACAwC,GADP,IAEI5B,MAAO6U,EAAOhV,UAEtB,KAAKR,EACD,OAAO,6BACAuC,GADP,IAEI5B,MAAO,KAEf,KAAKV,EACD,OAAO,6BACAsC,GADP,IAEIzB,SAAU0U,EAAOhV,UAEzB,KAAKN,EACD,OAAO,6BACAqC,GADP,IAEIzB,SAAU,KAElB,KAAKX,EACD,OAAO,6BACAoC,GADP,IAEItB,KAAMuU,EAAOhV,UAErB,KAAKJ,EACD,OAAO,6BACAmC,GADP,IAEItB,KAAM,KAEd,QACI,OAAOsB,IE5BfoN,SD9BW,WAAoF,IAAjEpN,EAAgE,uDAAxDqU,GAAcpB,EAA0C,uCAC9F,OAAQA,EAAOpW,MACX,KAAK6P,GAKL,KAAKK,GAKL,KAAKT,GACD,OAAO,6BACAtM,GADP,IAEI4N,oBAAoB,IAE5B,KAAKrB,GAKL,KAAKC,GACD,OAAO,6BACAxM,GADP,IAEI4N,oBAAoB,IAE5B,KAAKnB,GACD,OAAO,6BACAzM,GADP,IAEI2N,UAAWsF,EAAOhV,UAE1B,KAAK0O,GACD,OAAO,6BACA3M,GADP,IAEIgV,qBAAqB,IAE7B,KAAKpI,GAKL,KAAKC,GACD,OAAO,6BACA7M,GADP,IAEIgV,qBAAqB,IAE7B,KAAKlI,GACD,OAAO,6BACA9M,GADP,IAEImN,WAAY8F,EAAOhV,UAE3B,QACI,OAAO+B,MElFZ,SAAS6V,GAAUnX,EAAM2F,EAAOyR,GAEnC,IAAIC,GADJD,EAAQA,GAAS,IACDE,QAChB,GAAkB,iBAAPD,GAAmBA,EAAK,CAC/B,IAAME,EAAI,IAAIC,KACdD,EAAEE,QAAQF,EAAEG,UAAkB,IAANL,GACxBA,EAAMD,EAAME,QAAUC,EAEtBF,GAAOA,EAAIM,cACXP,EAAME,QAAUD,EAAIM,eAGxB,IAAIC,EAAgB5X,EAAO,KAD3B2F,EAAQkS,mBAAmBlS,IAE3B,IAAK,IAAMmS,KAAYV,EAAO,CAC1BQ,GAAiB,KAAOE,EACxB,IAAMC,EAAYX,EAAMU,IACN,IAAdC,IACAH,GAAiB,IAAMG,GAG/BjT,SAASkT,OAAT,UAAqBJ,EAArB,aAGG,SAASK,GAAUjY,GACtB,IAAMkY,EAAUpT,SAASkT,OAAOG,MAC5B,IAAIC,OAAO,WAAapY,EAAK0L,QAAQ,+BAAgC,QAAU,aAEnF,OAAOwM,EAAUG,mBAAmBH,EAAQ,SAAMI,E,mBCfzCC,GAAwB,SAACC,EAAsBC,GAyCxD,OAxCoD,SAACjb,GACjD,IAAIkb,EAA2B,KAE/B,OAAO,SAAAC,GAAI,OAAI,SAAApE,GACX,IAAQrU,EAAa1C,EAAb0C,SACA/B,EAASoW,EAATpW,KACAqY,EAAgDiC,EAAhDjC,OAAQC,EAAwCgC,EAAxChC,OAAQC,EAAgC+B,EAAhC/B,QAASC,EAAuB8B,EAAvB9B,QAASC,EAAc6B,EAAd7B,UAEtCzY,IAASqY,IAELkC,EADAF,EACS,IAAII,UAAJ,uDAA8DX,GAAU,iBAExE,IAAIW,UAAU,+CAG3BF,IACAA,EAAOG,OAAS,SAAAC,GACZ5Y,EAAS,CAAE/B,KAAMsY,EAAQlX,QAASuZ,KAGtCJ,EAAOK,QAAU,SAAAD,GACb5Y,EAAS,CAAE/B,KAAMwY,EAASpX,QAASuZ,KAGvCJ,EAAOM,UAAY,SAAAF,GACf,IAAQG,EAASH,EAATG,KACFC,EAAaC,KAAKC,MAAMH,GACVI,GAAmBH,EAA/BzN,QAAR,aAAuCyN,EAAvC,KAEAhZ,EAAS,CAAE/B,KAAMyY,EAAWrX,QAAS8Z,KAGzCX,EAAOY,QAAU,SAAAR,GACb5Y,EAAS,CAAE/B,KAAMuY,EAASnX,QAASuZ,MAG/CH,EAAKpE,O,QCjDAgF,GAAmD,wCCAnDC,GAAgB,SAACC,GAC1B,OAAOA,EAASC,GACVD,EAASE,OAAOtE,MAAK,SAAAoE,GACf,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAUhO,SACHgO,EAEAG,QAAQC,OAAOJ,MAGhCA,EAASE,OAAOtE,MAAK,SAACyE,GAAD,OAAWF,QAAQC,OAAOC,O,aCGxCC,I,aASQC,IAbnBC,GAAsB,WACxB,OAAOC,MAAM,GAAD,OAAIX,GAAJ,iBAA2BlE,KAAKmE,KAGzC,SAAUO,KAAV,wEAEkB,OAFlB,kBAEwBI,aAAKF,IAF7B,OAGC,OADMR,EAFP,gBAGOW,c1C6CwBjY,E0C7CEsX,EAASR,K1C6CiE,CAC9G9a,KAAMmI,GACN/G,QAAS4C,K0ClDN,8BAKC,OALD,mCAKOiY,a1C+C2D,CACrEjc,KAAMoI,K0CrDH,kC1CgD8B,IAACpE,I0ChD/B,iBASQ,SAAU6X,KAAV,kEACX,OADW,SACLK,aAAUhU,GAAyB0T,IAD9B,wC,iBCoEEO,I,aA0BAC,I,aAYAC,I,aA4BAC,I,aAkCAC,I,aAyBQC,IA7MlB,SAASC,GAAelb,EAAeG,GAC1C,OAAOqa,MAAM,GAAD,OAAIX,GAAJ,eAA0B,CAClCsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACjB,MAAStb,EACT,SAAYG,MAEjBwV,KAAKmE,IAGL,SAASyB,KACZ,OAAOf,MAAM,GAAD,OAAIX,GAAJ,gBAA2B,CACnCsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACjB,MAASrG,aAAaC,QAAQ,oBAEnCS,KAAKmE,IAGL,SAAS0B,KACZ,OAAOhB,MAAM,GAAD,OAAIX,GAAJ,cAAyB,CACjCsB,OAAQ,MACRC,QAAS,CACL,eAAgB,iCACfK,cAAe,UAAYlD,GAAU,kBAE3C5C,KAAKmE,IAGL,SAAS4B,KACZ,OAAOlB,MAAM,GAAD,OAAIX,GAAJ,eAA0B,CAClCsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACjBxC,MAAO7D,aAAaC,QAAQ,oBAEjCS,MAAK,SAACoE,GACL,OAAOA,EAASE,UACjB0B,OAAM,SAAAvB,GACLwB,QAAQC,IAAIzB,MAIb,SAAS0B,GAAoB9b,EAAeM,EAAcH,GAC7D,OAAOqa,MAAM,GAAD,OAAIX,GAAJ,cAAyB,CACjCsB,OAAQ,QACRC,QAAS,CACL,eAAgB,iCAChBK,cAAe,UAAYlD,GAAU,gBAEzC8C,KAAM5B,KAAK6B,UAAU,CACjBtb,QACAM,OACAH,eAELwV,KAAKmE,IAGL,SAASiC,GAAkBzb,EAAcN,EAAeG,GAC3D,OAAOqa,MAAM,GAAD,OAAIX,GAAJ,kBAA6B,CACrCsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACjBhb,OACAN,QACAG,eAELwV,KAAKmE,IAGL,SAAUc,KAAV,kFAE6B,OAF7B,kBAEmCoB,cAAO,SAACle,GAAD,MAAY,CACjDkC,MAAOlC,EAAMD,KAAKmC,MAClBG,SAAUrC,EAAMD,KAAKsC,aAJ1B,OAOkB,OAPlB,SAESH,EAFT,EAESA,MAAOG,EAFhB,EAEgBA,SAFhB,SAOwBsa,aAAKS,GAAgBlb,EAAOG,GAPpD,OASC,OAFM4Z,EAPP,iBASOW,aAAIuB,EAA+BlC,EAASlc,OATnD,QAUC,OAVD,UAUO6c,aAAIuB,KAVX,QAWC,OAXD,UAWOvB,aAAIuB,KAXX,QAaC,OAbD,UAaOvB,aAAIuB,EAAoBlC,EAASlc,KAAKyC,OAb7C,QAcC,OAdD,UAcOoa,aAAIuB,EAAqBlC,EAASlc,KAAKmC,QAd9C,QAgBOkc,EAAcnC,EAASmC,YAAYC,MAAM,WAAW,GACpDC,EAAerC,EAASqC,aAE9B3E,GAAU,cAAeyE,GACzBjH,aAAaoH,QAAQ,eAAgBD,GApBtC,wBAsBC,OAtBD,oCAsBO1B,arD8BgD,CAC1Djc,KDpIkD,sBsD+E/C,uDA0BA,SAAUoc,KAAV,kEAEkB,OAFlB,kBAEwBJ,aAAKc,IAF7B,OAMC,OAND,OAICtG,aAAaqH,WAAW,gBLxF5B7E,GKyFiB,cLzFD,KAAM,CAAEG,SAAU,IKoF/B,SAMO8C,aAAIuB,EAA+B,OAN1C,+BAQC,OARD,oCAQOvB,arDsCkD,CAC5Djc,KD5JoD,uBsD6GjD,uDAYA,SAAUqc,KAAV,8EAEkB,OAFlB,kBAEwBL,aAAKe,IAF7B,OAIC,OAFMzB,EAFP,gBAIOW,aAAIuB,EAA+BlC,EAASlc,OAJnD,OAKC,OALD,SAKO6c,aAAIuB,EAAoBlC,EAASlc,KAAKyC,OAL7C,OAMC,OAND,UAMOoa,aAAIuB,EAAqBlC,EAASlc,KAAKmC,QAN9C,6DAQwB,iBAAnB,uCAAOuc,SARZ,iBASkB,OATlB,UASwB9B,aAAKiB,IAT7B,qBASWnC,EATX,kBAWSA,OAXT,EAWSA,EAAMxN,SAXf,iBAkBS,OANMmQ,EAAc3C,EAAK2C,YAAYC,MAAM,WAAW,GAChDC,EAAe7C,EAAK6C,aAE1B3E,GAAU,cAAeyE,GACzBjH,aAAaoH,QAAQ,eAAgBD,GAhB9C,UAkBe1B,aAAIuB,KAlBnB,gCAoBS,OApBT,UAoBevB,aAAIuB,KApBnB,0CAwBC,OAxBD,UAwBOvB,aAAIuB,KAxBX,uDA4BA,SAAUlB,KAAV,sFAEmC,OAFnC,kBAEyCiB,cAAO,SAAAle,GAAK,MAAK,CACrDkC,MAAOlC,EAAMD,KAAKmC,MAClBM,KAAMxC,EAAMD,KAAKyC,KACjBH,SAAUrC,EAAMD,KAAKsC,aAL1B,OAQkB,OARlB,SAESH,EAFT,EAESA,MAAOM,EAFhB,EAEgBA,KAAMH,EAFtB,EAEsBA,SAFtB,SAQwBsa,aAAKqB,GAAqB9b,EAAOM,EAAMH,GAR/D,OAUC,OAFM4Z,EARP,iBAUOW,aAAIuB,EAA+BlC,EAASlc,OAVnD,QAWC,OAXD,UAWO6c,aAAIuB,EAAoBlC,EAASlc,KAAKyC,OAX7C,QAYC,OAZD,UAYOoa,aAAIuB,EAAqBlC,EAASlc,KAAKmC,QAZ9C,6DAcwB,iBAAnB,uCAAOuc,SAdZ,iBAekB,OAflB,UAewB9B,aAAKiB,IAf7B,qBAeWnC,EAfX,kBAiBSA,OAjBT,EAiBSA,EAAMxN,SAjBf,iBAwBS,OANMmQ,EAAc3C,EAAK2C,YAAYC,MAAM,WAAW,GAChDC,EAAe7C,EAAK6C,aAE1B3E,GAAU,cAAeyE,GACzBjH,aAAaoH,QAAQ,eAAgBD,GAtB9C,UAwBe1B,aAAIuB,KAxBnB,gCA0BS,OA1BT,UA0BevB,arD9BkD,CACpEjc,KD1I8D,4BsD6I3D,0CA8BC,OA9BD,UA8BOic,arDlC0D,CACpEjc,KD1I8D,4BsD6I3D,uDAkCA,SAAUuc,KAAV,oFAEmC,OAFnC,kBAEyCgB,cAAO,SAAAle,GAAK,MAAK,CACrDkC,MAAOlC,EAAMD,KAAKmC,MAClBM,KAAMxC,EAAMD,KAAKyC,KACjBH,SAAUrC,EAAMD,KAAKsC,aAL1B,OAQkB,OARlB,SAESH,EAFT,EAESA,MAAOM,EAFhB,EAEgBA,KAAMH,EAFtB,EAEsBA,SAFtB,SAQwBsa,aAAKsB,GAAmB/b,EAAOM,EAAMH,GAR7D,OAUC,OAFM4Z,EARP,iBAUOW,aAAIuB,EAA+BlC,EAASlc,OAVnD,QAWC,OAXD,UAWO6c,aAAIuB,KAXX,QAYC,OAZD,UAYOvB,aAAIuB,KAZX,QAaC,OAbD,UAaOvB,arDEoC,CAC9Cjc,KAAMgB,IqDhBH,QAeOyc,EAAcnC,EAASmC,YAAYC,MAAM,WAAW,GACpDC,EAAerC,EAASqC,aAE9B3E,GAAU,cAAeyE,GACzBjH,aAAaoH,QAAQ,eAAgBD,GAnBtC,wBAqBC,OArBD,oCAqBO1B,arD5BsD,CAChEjc,KDrLwD,yBsD2LrD,uDAyBQ,SAAUwc,KAAV,kEACX,OADW,SACLN,aAAU5b,EAAoB6b,IADzB,OAEX,OAFW,SAELD,aAAU7b,EAAqB+b,IAF1B,OAGX,OAHW,SAGLF,aAAU1b,EAAuB6b,IAH5B,OAIX,OAJW,SAILH,aAAU3b,EAA0B+b,IAJ/B,OAKX,OALW,UAKLJ,aAAU9b,EAAuBmc,IAL5B,yC,iBC7LEwB,I,aAkCQC,IA/ClB,SAASC,GAAeC,GAC3B,OAAOnC,MAAM,GAAD,OAAIX,GAAJ,WAAsB,CAC9BsB,OAAQ,OACRC,QAAS,CACP,eAAgB,iCAChB,cAAiB,UAAY7C,GAAU,gBAEzC8C,KAAM5B,KAAK6B,UAAU,CACnB,YAAeqB,MAElBhH,KAAKmE,IAGL,SAAU0C,KAAV,wFAEoD,OAFpD,kBAE0DR,cAAO,SAAAle,GAAK,MAAK,CACtE4E,uBAAwB5E,EAAM2E,YAAYC,uBAC1CC,eAAgB7E,EAAM2E,YAAYE,mBAJvC,OASkB,OATlB,SAESD,EAFT,EAESA,uBAAwBC,EAFjC,EAEiCA,eAI1Bia,EAAmBla,EAAuBK,KAAI,SAAC/B,GAAD,OAAqCA,EAAWO,OAC9Fsb,EAPP,uBAOiCD,GAPjC,CAOmDja,EAAepB,IAAKoB,EAAepB,MAPtF,UASwBkZ,aAAKiC,GAAgBG,GAT7C,QAWC,OAFM9C,EATP,iBAWOW,cjBGkBvL,EiBHE4K,EAAS5K,MjBGgC,CACzE1Q,KAAMuV,GACNnU,QAASsP,KiBhBJ,QAYC,OAZD,UAYOuL,a5C8CmD,CAC7Djc,KAAMyI,K4C3DH,6DAewB,iBAAnB,uCAAOqV,SAfZ,iBAgBkB,OAhBlB,UAgBwB9B,aAAKiB,IAhB7B,qBAgBWnC,EAhBX,kBAiBSA,OAjBT,EAiBSA,EAAMxN,SAjBf,iBAwBS,OANMmQ,EAAc3C,EAAK2C,YAAYC,MAAM,WAAW,GAChDC,EAAe7C,EAAK6C,aAE1B3E,GAAU,cAAeyE,GACzBjH,aAAaoH,QAAQ,eAAgBD,GAtB9C,UAwBe1B,aAAIvG,MAxBnB,gCA0BS,OA1BT,UA0BeuG,aAAItG,MA1BnB,0CA8BC,OA9BD,UA8BOsG,aAAItG,MA9BX,kCjBcwB,IAACjF,IiBdzB,kBAkCQ,SAAUsN,KAAV,kEACX,OADW,SACL9B,aAAU5G,GAAmByI,IADxB,wC,iBCxBEM,I,aAYAC,I,aAiBQC,IAtDnBC,GAAiB,SAACjd,GACpB,OAAOwa,MAAM,GAAD,OAAIX,GAAJ,mBAA8B,CACtCsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACnBtb,YAEH2V,KAAKmE,KAGNoD,GAAyB,SAACC,EAAqBjR,GACjD,OAAOsO,MAAM,GAAD,OAAIX,GAAJ,yBAAoC,CAC5CsB,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAM5B,KAAK6B,UAAU,CACjBnb,SAAUgd,EACVrE,MAAO5M,MAEZyJ,KAAKmE,KAGL,SAAUgD,KAAV,0EAEe,OAFf,kBAEqBd,cAAO,SAAAle,GAAK,OAAIA,EAAMD,KAAKmC,SAFhD,OAGkB,OADXA,EAFP,gBAGwBya,aAAKwC,GAAgBjd,GAH7C,OAKC,OAFM+Z,EAHP,gBAKOW,aAAI/O,GAAiBoO,IAL5B,OAMC,OAND,UAMOW,aAAIza,KANX,gCAQC,OARD,oCAQOya,avCqBgD,CAC1Djc,KAAM4M,KuC9BH,uDAYA,SAAU0R,KAAV,8EAEiC,OAFjC,kBAEuCf,cAAO,SAAAle,GAAK,MAAK,CACnDqC,SAAUrC,EAAMD,KAAKsC,SACrB+L,UAAWpO,EAAMsC,cAAc8L,cAJpC,OAOkB,OAPlB,SAESA,EAFT,EAESA,UAAW/L,EAFpB,EAEoBA,SAFpB,SAOwBsa,aAAKyC,GAAwB/c,EAAU+L,GAP/D,OASC,OAFM6N,EAPP,iBASOW,aAAI9O,GAAqBmO,IAThC,QAUC,OAVD,UAUOW,avCwB8C,CACxDjc,KAAMiN,KuCnCH,QAWC,OAXD,UAWOgP,aAAIta,KAXX,gCAaC,OAbD,oCAaOsa,avCcwD,CAClEjc,KAAM+M,KuC5BH,uDAiBQ,SAAUwR,KAAV,kEACX,OADW,SACLrC,aAAUrP,GAAwByR,IAD7B,OAEX,OAFW,SAELpC,aAAUxP,GAAoB2R,IAFzB,wC,iBC1DEM,IAAV,SAAUA,KAAV,wEAGH,OAFMC,EAAQ,CAAC/C,GAAiBW,GAAU+B,GAAmBP,IAD1D,SAGGa,aAAID,EAAMta,KAAI,SAAAwa,GAAI,OAAIC,aAAMD,OAH/B,wCCUP,IAAME,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAiBC,eAEVC,GAAWN,GAAiBO,aACrCC,KACAJ,GACAhF,GAAsB,KAAMhC,IAC5BgC,GAAsB,QAAS1B,MAGtBrZ,GAAQogB,aAAY9G,GAAa2G,IAE9CF,GAAeM,IAAIf,ICpBnB7K,IAASuB,OACP,cAAC,IAAMsK,WAAP,UACE,cAAC,IAAD,CAAUtgB,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJsH,SAAS+M,eAAe,SAM1BqD,M,mBCpBApY,EAAOC,QAAU,CAAC,8BAAgC,kDAAkD,sBAAwB,0CAA0C,4BAA8B,gDAAgD,6BAA+B,iDAAiD,kCAAoC,sDAAsD,iCAAmC,qDAAqD,wCAA0C,4DAA4D,aAAe,mC,mBCA3mBD,EAAOC,QAAU,CAAC,cAAgB,0CAA0C,MAAQ,kCAAkC,YAAc,wCAAwC,aAAe,yCAAyC,aAAe,yCAAyC,cAAgB,0CAA0C,OAAS,mCAAmC,WAAa,yC,mBCA/YD,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,OAAS,4BAA4B,oBAAsB,2C,mBCA1ID,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,aAAe,iCAAiC,KAAO,yBAAyB,WAAa,+BAA+B,UAAY,gC,mBCA9MD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,kBAAoB,qCAAqC,eAAiB,kCAAkC,eAAiB,kCAAkC,qBAAuB,0C,mBCAjPD,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,MAAQ,kCAAkC,SAAW,qCAAqC,OAAS,mCAAmC,YAAc,0C,mBCAhND,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,YAAc,mCAAmC,aAAe,oCAAoC,aAAe,oCAAoC,cAAgB,qCAAqC,OAAS,8BAA8B,WAAa,oC,mBCAvTD,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,gBAAkB,oCAAoC,gBAAkB,uFAAuF,iBAAmB,qCAAqC,kBAAoB,sCAAsC,gBAAkB,sC,mBCAjXD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,cAAgB,6BAA6B,YAAc,2BAA2B,YAAc,2BAA2B,cAAgB,+B,mBCA9LD,EAAOC,QAAU,CAAC,WAAa,4CAA4C,mBAAqB,oDAAoD,eAAiB,gDAAgD,yBAA2B,0DAA0D,gBAAkB,mD,mBCA5TD,EAAOC,QAAU,CAAC,kBAAoB,8CAA8C,YAAc,wCAAwC,oBAAsB,gDAAgD,0BAA4B,wD,mBCA5OD,EAAOC,QAAU,CAAC,kBAAoB,8CAA8C,KAAO,iCAAiC,cAAgB,0CAA0C,mBAAqB,+CAA+C,cAAgB,0CAA0C,eAAiB,6C,mBCArUD,EAAOC,QAAU,CAAC,eAAiB,sCAAsC,aAAe,oCAAoC,KAAO,4BAA4B,WAAa,kCAAkC,UAAY,mC,mBCA1ND,EAAOC,QAAU,CAAC,eAAiB,6CAA6C,aAAe,2CAA2C,KAAO,mCAAmC,WAAa,yCAAyC,UAAY,0C,mBCAtPD,EAAOC,QAAU,CAAC,eAAiB,4CAA4C,aAAe,0CAA0C,KAAO,kCAAkC,WAAa,wCAAwC,UAAY,yC,mBCAlPD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,oBAAsB,0CAA0C,mBAAqB,2C,mBCAzJD,EAAOC,QAAU,CAAC,iBAAmB,kDAAkD,OAAS,0C,mBCAhGD,EAAOC,QAAU,CAAC,yBAA2B,4D,mBCA7CD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,iBAAmB,sCAAsC,yBAA2B,gD,mBCAjJD,EAAOC,QAAU,CAAC,mBAAqB,iDAAiD,iBAAmB,+CAA+C,MAAQ,oCAAoC,MAAQ,oCAAoC,SAAW,uCAAuC,OAAS,qCAAqC,YAAc,4C,mBCAhWD,EAAOC,QAAU,CAAC,cAAgB,uCAAuC,MAAQ,kC","file":"static/js/main.70a1f41b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"with-profile-nav_container__2VPpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__29N7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_wrapper\":\"constructor-page_table_wrapper__1upOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__c8dt3\",\"header_container\":\"app-header_header_container__rufEh\",\"header_left_wrapper\":\"app-header_header_left_wrapper__2dGPo\",\"header_item\":\"app-header_header_item__2F-FA\",\"active\":\"app-header_active__WNEL9\"};","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from '../services/types';\r\n  \r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n  \r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","\r\nimport { Logo, ListIcon, BurgerIcon, ProfileIcon  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, useRouteMatch, Link } from 'react-router-dom';\r\nimport { useSelector } from \"../../hooks/hooks\";\r\n\r\nimport s from './app-header.module.sass';\r\n\r\nconst AppHeader = () => {\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    const user = useSelector(store => store.user.user)\r\n\r\n    return (\r\n        <header>\r\n            <nav className={`${s.header} pt-4 pb-4`}>\r\n                <div className={s.header_container}>\r\n                    <ul className={s.header_left_wrapper}>\r\n                        <NavLink \r\n                            to=\"/\"\r\n                            exact \r\n                            className={`${s.header_item} pl-5 pr-5 pt-4 pb-4 mr-2`}\r\n                            activeClassName={s.active}\r\n                        >\r\n                            <div className=\"mr-2\">\r\n                                <BurgerIcon type={path === '/' ? 'primary' : 'secondary'}/>\r\n                            </div>\r\n                            <span className=\"text text_type_main-default\">Конструктор</span>\r\n                        </NavLink>\r\n                        <NavLink \r\n                            className={`${s.header_item} pl-5 pr-5 pt-4 pb-4`}\r\n                            to=\"/feed\"\r\n                            exact\r\n                            activeClassName={s.active}\r\n                        >\r\n                            <div className=\"mr-2\">\r\n                                <ListIcon type={path === '/feed' ? 'primary' : 'secondary'}/>\r\n                            </div>\r\n                            <span className=\"text text_type_main-default\">Лента заказа</span>\r\n                        </NavLink>\r\n                    </ul>\r\n                    <Link to=\"/\" className={s.header_logo}>\r\n                        <Logo/>\r\n                    </Link>\r\n                    {!user && (\r\n                        <NavLink \r\n                            to=\"/login\" \r\n                            className={`${s.header_item} pl-5 pr-5 pt-4 pb-4`}\r\n                            activeClassName={s.active}\r\n                        >\r\n                            <div className=\"mr-2\">\r\n                                <ProfileIcon  type={path === '/login' ? 'primary' : 'secondary'}/>\r\n                            </div>\r\n                            <span className=\"text text_type_main-default\">Войти</span>\r\n                        </NavLink>\r\n                    )}\r\n                    {user && (\r\n                        <NavLink \r\n                            to=\"/profile\" \r\n                            className={`${s.header_item} pl-5 pr-5 pt-4 pb-4`}\r\n                            activeClassName={s.active}\r\n                        >\r\n                            <div className=\"mr-2\">\r\n                                <ProfileIcon type={(path === '/profile' || path === '/profile/orders') ? 'primary' : 'secondary'}/>\r\n                            </div>\r\n                            <span className=\"text text_type_main-default\">Личный кабинет</span>\r\n                        </NavLink>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n        ","import React, { FC } from 'react';\r\nimport AppHeader from '../../components/app-header/app-header';\r\n\r\nconst WithAppHeader: FC = ({ children }) => {\r\n    return (\r\n        <>\r\n            <AppHeader/>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WithAppHeader;","export const USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\" = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\" = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAILED: \"USER_REGISTER_FAILED\" = \"USER_REGISTER_FAILED\";\r\n\r\nexport const USER_LOGOUT_REQUEST: \"USER_LOGOUT_REQUEST\" = \"USER_LOGOUT_REQUEST\";\r\nexport const USER_LOGOUT_SUCCESS: \"USER_LOGOUT_SUCCESS\" = \"USER_LOGOUT_SUCCESS\";\r\nexport const USER_LOGOUT_FAILED: \"USER_LOGOUT_FAILED\" = \"USER_LOGOUT_FAILED\";\r\n\r\nexport const USER_LOGIN_REQUEST: \"USER_LOGIN_REQUEST\" = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS: \"USER_LOGIN_SUCCESS\" = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAILED: \"USER_LOGIN_FAILED\" = \"USER_LOGIN_FAILED\";\r\n\r\nexport const UPDATE_USER_INFO_REQUEST: \"UPDATE_USER_INFO_REQUEST\" = \"UPDATE_USER_INFO_REQUEST\";\r\nexport const UPDATE_USER_INFO_SUCCESS: \"UPDATE_USER_INFO_SUCCESS\" = \"UPDATE_USER_INFO_SUCCESS\";\r\nexport const UPDATE_USER_INFO_FAILED: \"UPDATE_USER_INFO_FAILED\" = \"UPDATE_USER_INFO_FAILED\";\r\n\r\nexport const GET_USER_INFO_REQUEST: \"GET_USER_INFO_REQUEST\" = \"GET_USER_INFO_REQUEST\";\r\nexport const GET_USER_INFO_SUCCESS: \"GET_USER_INFO_SUCCESS\" = \"GET_USER_INFO_SUCCESS\"\r\nexport const GET_USER_INFO_FAILED: \"GET_USER_INFO_FAILED\" = \"GET_USER_INFO_FAILED\";\r\n\r\nexport const SET_EMAIL: \"SET_EMAIL\" = \"SET_EMAIL\";\r\nexport const RESET_EMAIL: \"RESET_EMAIL\" = \"RESET_EMAIL\";\r\n\r\nexport const SET_PASSWORD: \"SET_PASSWORD\" = \"SET_PASSWORD\";\r\nexport const RESET_PASSWORD: \"RESET_PASSWORD\" = \"RESET_PASSWORD\";\r\n\r\nexport const SET_NAME: \"SET_NAME\" = \"SET_NAME\";\r\nexport const RESET_NAME: \"RESET_NAME\" = \"RESET_NAME\";","// import { setCookie, getCookie, deleteCookie } from \"../../utils/cookies\";\r\nimport {\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAILED,\r\n\r\n    USER_LOGOUT_REQUEST,\r\n    USER_LOGOUT_SUCCESS,\r\n    USER_LOGOUT_FAILED,\r\n\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAILED,\r\n\r\n    UPDATE_USER_INFO_REQUEST,\r\n    UPDATE_USER_INFO_FAILED,\r\n    UPDATE_USER_INFO_SUCCESS,\r\n\r\n    GET_USER_INFO_REQUEST,\r\n    GET_USER_INFO_SUCCESS,\r\n    GET_USER_INFO_FAILED,\r\n\r\n    SET_EMAIL,\r\n    RESET_EMAIL,\r\n    SET_PASSWORD,\r\n    RESET_PASSWORD,\r\n    SET_NAME,\r\n    RESET_NAME\r\n} from '../../constants/user';\r\n\r\n// import { AppDispatch, AppThunk } from \"../types\";\r\nimport { TUser } from \"../../types/data\";\r\n\r\nexport interface IUserLoginRequestAction {\r\n    readonly type: typeof USER_LOGIN_REQUEST\r\n}\r\nexport interface IUserLoginSuccessAction {\r\n    readonly type: typeof USER_LOGIN_SUCCESS\r\n}\r\nexport interface IUserLoginFailedAction {\r\n    readonly type: typeof USER_LOGIN_FAILED\r\n}\r\n\r\nexport interface IUserLogoutRequestAction {\r\n    readonly type: typeof USER_LOGOUT_REQUEST\r\n}\r\nexport interface IUserLogoutSuccessAction {\r\n    readonly type: typeof USER_LOGOUT_SUCCESS\r\n}\r\nexport interface IUserLogoutFailedAction {\r\n    readonly type: typeof USER_LOGOUT_FAILED\r\n}\r\n\r\nexport interface IUpdateUserInfoRequestAction {\r\n    readonly type: typeof UPDATE_USER_INFO_REQUEST\r\n}\r\nexport interface IUpdateUserInfoSuccessAction {\r\n    readonly type: typeof UPDATE_USER_INFO_SUCCESS\r\n}\r\nexport interface IUpdateUserInfoFailedAction {\r\n    readonly type: typeof UPDATE_USER_INFO_FAILED\r\n}\r\n\r\nexport interface IUserRegisterRequestAction {\r\n    readonly type: typeof USER_REGISTER_REQUEST\r\n}\r\nexport interface IUserRegisterSuccessAction {\r\n    readonly type: typeof USER_REGISTER_SUCCESS\r\n}\r\nexport interface IUserRegisterFailedAction {\r\n    readonly type: typeof USER_REGISTER_FAILED\r\n}\r\n\r\nexport interface IGetUserInfoRequestAction {\r\n    readonly type: typeof GET_USER_INFO_REQUEST\r\n}\r\nexport interface IGetUserInfoSuccessAction {\r\n    readonly type: typeof GET_USER_INFO_SUCCESS;\r\n    payload: null | TUser\r\n}\r\nexport interface IGetUserInfoFailedAction {\r\n    readonly type: typeof GET_USER_INFO_FAILED;\r\n}\r\n\r\nexport interface ISetEmailAction {\r\n    readonly type: typeof SET_EMAIL;\r\n    payload: string\r\n}\r\nexport interface IResetEmailAction {\r\n    readonly type: typeof RESET_EMAIL;\r\n}\r\nexport interface ISetPasswordAction {\r\n    readonly type: typeof SET_PASSWORD;\r\n    payload: string\r\n}\r\nexport interface IResetPasswordAction {\r\n    readonly type: typeof RESET_PASSWORD;\r\n}\r\nexport interface ISetNameAction {\r\n    readonly type: typeof SET_NAME;\r\n    payload: string\r\n}\r\nexport interface IResetNameAction {\r\n    readonly type: typeof RESET_NAME;\r\n}\r\n\r\nexport type TUserActions = \r\n    | ISetEmailAction\r\n    | IResetEmailAction\r\n    | ISetPasswordAction\r\n    | IResetPasswordAction\r\n    | ISetNameAction\r\n    | IResetNameAction\r\n\r\n    | IUserLoginRequestAction\r\n    | IUserLoginFailedAction\r\n    | IUserLoginSuccessAction    \r\n\r\n    | IUpdateUserInfoRequestAction\r\n    | IUpdateUserInfoSuccessAction\r\n    | IUpdateUserInfoFailedAction\r\n\r\n    | IUserLogoutRequestAction\r\n    | IUserLogoutSuccessAction\r\n    | IUserLogoutFailedAction\r\n\r\n    | IGetUserInfoRequestAction\r\n    | IGetUserInfoSuccessAction\r\n    | IGetUserInfoFailedAction\r\n\r\n    | IUserRegisterRequestAction\r\n    | IUserRegisterFailedAction\r\n    | IUserRegisterSuccessAction\r\n;\r\n\r\nexport const userLoginRequest = (): IUserLoginRequestAction => ({\r\n    type: USER_LOGIN_REQUEST\r\n})\r\nexport const userLoginSuccess = (): IUserLoginSuccessAction => ({\r\n    type: USER_LOGIN_SUCCESS\r\n})\r\nexport const userLoginFailed = (): IUserLoginFailedAction => ({\r\n    type: USER_LOGIN_FAILED\r\n})\r\n\r\nexport const updateUserInfoRequest = (): IUpdateUserInfoRequestAction => ({\r\n    type: UPDATE_USER_INFO_REQUEST\r\n})\r\nexport const updateUserInfoSuccess = (): IUpdateUserInfoSuccessAction => ({\r\n    type: UPDATE_USER_INFO_SUCCESS\r\n})\r\nexport const updateUserInfoFailed = (): IUpdateUserInfoFailedAction => ({\r\n    type: UPDATE_USER_INFO_FAILED\r\n})\r\n\r\nexport const userLogoutRequest = (): IUserLogoutRequestAction => ({\r\n    type: USER_LOGOUT_REQUEST\r\n})\r\nexport const userLogoutSuccess = (): IUserLogoutSuccessAction => ({\r\n    type: USER_LOGOUT_SUCCESS\r\n})\r\nexport const userLogoutFailed = (): IUserLogoutFailedAction => ({\r\n    type: USER_LOGOUT_FAILED\r\n})\r\n\r\nexport const getUserInfoRequest = (): IGetUserInfoRequestAction => ({\r\n    type: GET_USER_INFO_REQUEST\r\n})\r\nexport const getUserInfoSuccess = (user: null | TUser): IGetUserInfoSuccessAction => ({\r\n    type: GET_USER_INFO_SUCCESS,\r\n    payload: user\r\n})\r\nexport const getUserInfoFailed = (): IGetUserInfoFailedAction => ({\r\n    type: GET_USER_INFO_FAILED\r\n})\r\n\r\nexport const userRegisterRequest = (): IUserRegisterRequestAction => ({\r\n    type: USER_REGISTER_REQUEST\r\n})\r\nexport const userRegisterSuccess = (): IUserRegisterSuccessAction => ({\r\n    type: USER_REGISTER_SUCCESS\r\n})\r\nexport const userRegisterFailed = (): IUserRegisterFailedAction => ({\r\n    type: USER_REGISTER_FAILED\r\n})\r\n\r\nexport const setEmail = (email: string): ISetEmailAction => ({\r\n    type: SET_EMAIL,\r\n    payload: email\r\n})\r\nexport const resetEmail = (): IResetEmailAction => ({\r\n    type: RESET_EMAIL\r\n})\r\nexport const setPassword = (password: string): ISetPasswordAction => ({\r\n    type: SET_PASSWORD,\r\n    payload: password\r\n})\r\nexport const resetPassword = (): IResetPasswordAction => ({\r\n    type: RESET_PASSWORD\r\n})\r\nexport const setName = (name: string): ISetNameAction => ({\r\n    type: SET_NAME,\r\n    payload: name\r\n})\r\nexport const resetName = (): IResetNameAction => ({\r\n    type: RESET_NAME\r\n})\r\n\r\n// function updateAccessToken() {\r\n//     return fetch(`${_apiUrl}/auth/token`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json;charset=utf-8'\r\n//         },\r\n//         body: JSON.stringify({\r\n//             token: localStorage.getItem('refreshToken')\r\n//         })\r\n//     }).then(response => {\r\n//         return response.json();\r\n//     })\r\n// }\r\n\r\n// function userInfoFetch() {\r\n//     return fetch(`${_apiUrl}/auth/user`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//             'Content-Type': 'application/json;charset=utf-8',\r\n//              Authorization: 'Bearer ' + getCookie('accessToken')\r\n//         }\r\n//     }).then(response => {\r\n//         return response.json()\r\n//     })\r\n// }\r\n\r\n// function updateUserInfoFetch(userObj: TUser & { password: string }) {\r\n//     return fetch(`${_apiUrl}/auth/user`, {\r\n//         method: 'PATCH',\r\n//         headers: {\r\n//             'Content-Type': 'application/json;charset=utf-8',\r\n//             Authorization: 'Bearer ' + getCookie('accessToken')\r\n//         },\r\n//         body: JSON.stringify(userObj)\r\n//     }).then(response => {\r\n//         return response.json()\r\n//     })\r\n// }\r\n\r\n// export const getUserInfo: AppThunk = () => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(setUserRequest());\r\n//         userInfoFetch().then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(getUserInfoSuccess(response.user))\r\n//                 dispatch(setName(response.user.name))\r\n//                 dispatch(setEmail(response.user.email))\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//                 if (response.message === 'jwt expired') {\r\n//                     updateAccessToken().then(data => {\r\n//                         if (data.success) {\r\n//                             const accessToken = data.accessToken.split('Bearer ')[1];\r\n//                             const refreshToken = data.refreshToken;\r\n\r\n//                             setCookie('accessToken', accessToken);\r\n//                             localStorage.setItem('refreshToken', refreshToken)\r\n\r\n//                             userInfoFetch().then(response => {\r\n//                                 dispatch(getUserInfoSuccess(response.user))\r\n//                                 dispatch(setName(response.user.name))\r\n//                                 dispatch(setEmail(response.user.email))\r\n//                             }).catch(err => {\r\n//                                 console.log(err);\r\n//                             })\r\n//                         }\r\n//                     })\r\n//                 }\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const updateUserInfo: AppThunk = (userObj: TUser & { password: string }) => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(getUserInfoRequest());\r\n//         updateUserInfoFetch(userObj).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(getUserInfoSuccess(response.user))\r\n//                 dispatch(setName(response.user.name))\r\n//                 dispatch(setEmail(response.user.email))\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//                 if (response.message === 'jwt expired') {\r\n//                     updateAccessToken().then(data => {\r\n//                         if (data.success) {\r\n//                             const accessToken = data.accessToken.split('Bearer ')[1];\r\n//                             const refreshToken = data.refreshToken;\r\n\r\n//                             setCookie('accessToken', accessToken);\r\n//                             localStorage.setItem('refreshToken', refreshToken)\r\n\r\n//                             updateUserInfoFetch(userObj).then(response => {\r\n//                                 dispatch(getUserInfoSuccess(response.user))\r\n//                                 dispatch(setName(response.user.name))\r\n//                                 dispatch(setEmail(response.user.email))\r\n//                             }).catch(err => {\r\n//                                 console.log(err);\r\n//                             })\r\n//                         }\r\n//                     })\r\n//                 }\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const userRegister: AppThunk = (name: string, email: string, password: string) => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(getUserInfoRequest());\r\n//         fetch(`${_apiUrl}/auth/register`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 \"name\": name,\r\n//                 \"email\": email,\r\n//                 \"password\": password\r\n//             })\r\n//         }).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(getUserInfoSuccess(response.user))\r\n//                 dispatch(resetEmail())\r\n//                 dispatch(resetPassword())\r\n//                 dispatch(resetName())\r\n\r\n//                 const accessToken = response.accessToken.split('Bearer ')[1];\r\n//                 const refreshToken = response.refreshToken;\r\n\r\n//                 setCookie('accessToken', accessToken);\r\n//                 localStorage.setItem('refreshToken', refreshToken)\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const userLogin: AppThunk = (email: string, password: string) => {\r\n//     return function(dispatch: any) {\r\n//         dispatch(setUserRequest());\r\n//         fetch(`${_apiUrl}/auth/login`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 \"email\": email,\r\n//                 \"password\": password\r\n//             })\r\n//         }).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(getUserInfoSuccess(response.user))\r\n//                 dispatch(resetEmail())\r\n//                 dispatch(resetPassword())\r\n\r\n//                 dispatch(setName(response.user.name))\r\n//                 dispatch(setEmail(response.user.email))\r\n\r\n//                 const accessToken = response.accessToken.split('Bearer ')[1];\r\n//                 const refreshToken = response.refreshToken;\r\n\r\n//                 setCookie('accessToken', accessToken);\r\n//                 localStorage.setItem('refreshToken', refreshToken)\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const userLogout: AppThunk = (token: string) => {\r\n//     return function(dispatch: AppThunk) {\r\n//         dispatch(setUserRequest());\r\n//         fetch(`${_apiUrl}/auth/logout`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 \"token\": token\r\n//             })\r\n//         }).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(getUserInfoSuccess(null))\r\n//                 localStorage.removeItem('refreshToken')\r\n//                 deleteCookie('accessToken')\r\n//             } else {\r\n//                 dispatch(getUserInfoFailed())\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n","import { useDispatch } from '../../hooks/hooks';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { userLogoutRequest } from '../../services/actions/user/user';\r\n\r\nimport s from './profile-nav.module.sass';\r\n\r\nconst ProfileNav = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfProfile = () => {\r\n        dispatch(userLogoutRequest())\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.container_nav} pt-30`}>\r\n            <NavLink \r\n                to=\"/profile\" \r\n                className={`${s.container_nav_item} text text_type_main-medium`}\r\n                activeClassName={s.active}\r\n                exact\r\n            >Профиль</NavLink>\r\n            <NavLink \r\n                to='/profile/orders'\r\n                className={`${s.container_nav_item} text text_type_main-medium`}\r\n                activeClassName={s.active}\r\n            >История заказов</NavLink>\r\n            <div \r\n                className={`${s.container_nav_item} text text_type_main-medium`}\r\n                onClick={logoutOfProfile}\r\n            >Выход</div>\r\n\r\n            <p className={`${s.container_nav_descr} text text_type_main-default mt-20`}>В этом разделе вы можете изменить свои персональные данные</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileNav;","import React, { FC } from 'react';\r\nimport ProfileNav from '../../components/profile-nav/profile-nav';\r\n\r\nimport s from './with-profile-nav.module.sass';\r\n\r\nconst WithProfileNav: FC = ({ children }) => {\r\n    return (\r\n        <div className={`${s.container}`} >\r\n            <ProfileNav />\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WithProfileNav;","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, AppThunk, RootState } from './index';\r\n  \r\n  // Хук «знает» структуру хранилища\r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n  \r\n  // Хук не даст отправить экшен, который ему не знаком\r\n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","import { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport s from './burger-ingredients-item.module.sass';\r\n\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\ninterface IBurgerIngredientsItemProps {\r\n    ingredient: TIngredient;\r\n    count: number;\r\n    onIngredientClick: (\r\n        ingredient: TIngredient\r\n    ) => void\r\n}\r\n\r\nconst BurgerIngredientsItem = ({ ingredient, count, onIngredientClick }: IBurgerIngredientsItemProps) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const { name, price, image, _id } = ingredient;\r\n\r\n    const [, ingredientRef] = useDrag({\r\n        type: 'constructor',\r\n        item: ingredient,\r\n        // collect: monitor => ({\r\n        //     isDrag: monitor.isDragging()\r\n        // })\r\n    })\r\n\r\n\r\n    return (\r\n        <Link \r\n            to={{\r\n                pathname: `/ingredients/${_id}`,\r\n                state: { background: location }\r\n            }}\r\n            onClick={() => onIngredientClick(ingredient)} \r\n            className={`${s.ingredient}`}\r\n            ref={ingredientRef}\r\n            data-test=\"ingredient\"\r\n        >\r\n            <div className=\"pl-4 pb-1 pr-4\">\r\n                {count && (\r\n                    <div className={s.ingredient_counter}>\r\n                        <Counter count={count} size=\"default\" />\r\n                    </div>\r\n                )}\r\n                <img className={`${s.ingredient_img} mb-1`} src={image} alt={name} />\r\n                <div className={`${s.ingredient_price_wrapper} mb-1`}>\r\n                    <span className=\"text text_type_digits-default\">{price}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n            <h3 className={`${s.ingredient_name} text text_type_main-default`}>{name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredientsItem;","import { useMemo } from 'react';\r\nimport { useSelector } from '../../hooks/hooks';\r\n\r\nimport BurgerIngredientsItem from '../burger-ingredients-item/burger-ingredients-item';\r\n\r\nimport s from './burger-ingredients-list.module.sass';\r\nimport { TIngredient, TIngredientsCategoryTitle, TIngredientsCategoryType } from '../../services/types/data';\r\n\r\ninterface IBurgerIngredientsListProps {\r\n    title: TIngredientsCategoryTitle;\r\n    type: TIngredientsCategoryType;\r\n    onIngredientClick: (\r\n        item: TIngredient\r\n    ) => void\r\n}\r\n\r\ninterface ICounters {\r\n    [name: string]: number; \r\n}\r\n\r\nconst BurgerIngredientsList = ({ title, type, onIngredientClick }: IBurgerIngredientsListProps) => {\r\n\r\n    const { ingredients, constructorIngredients, constructorBun } = useSelector(store => ({\r\n        ingredients: store.ingredients.ingredients,\r\n        constructorIngredients: store.ingredients.constructorIngredients,\r\n        constructorBun: store.ingredients.constructorBun\r\n    }));\r\n\r\n    const counters = useMemo(() => {\r\n\t\tconst counter: ICounters = {};\r\n\r\n\t\tconstructorIngredients.map((ingredient: TIngredient): void => {\r\n\t\t\tif (!counter[ingredient._id]) {\r\n                counter[ingredient._id] = 0;\r\n            }\r\n\t\t\tcounter[ingredient._id]++;\r\n\t\t});\r\n\r\n\t\tif (constructorBun) {\r\n            counter[constructorBun._id] = 2;\r\n        }\r\n\t\treturn counter;\r\n\t}, [constructorIngredients, constructorBun]);\r\n\r\n    const ingredientsArr = ingredients?.map((ingredient: TIngredient) => {\r\n        if (ingredient.type === type) {\r\n            return (\r\n                <BurgerIngredientsItem \r\n                    key={ingredient._id} \r\n                    ingredient={ingredient} \r\n                    count={counters[ingredient._id]}\r\n                    onIngredientClick={onIngredientClick}\r\n                />\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div data-scroll-id={type} className={`${s.type_wrapper} pt-10`}>\r\n            <h3 className=\"text text_type_main-medium mb-6\">{title}</h3>\r\n            <div className={s.ingredients_type_wrapper}>\r\n                {ingredientsArr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredientsList;","import s from './loader.module.sass';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <svg \r\n                xmlns=\"http://www.w3.org/2000/svg\" \r\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\" \r\n                style={{background: 'none', display: 'block', shapeRendering: 'auto'}} \r\n                width=\"60px\" \r\n                height=\"60px\" \r\n                viewBox=\"0 0 100 100\" \r\n                preserveAspectRatio=\"xMidYMid\"\r\n            >\r\n                <circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#0051a2\">\r\n                    <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"0.25s\" calcMode=\"spline\" keyTimes=\"0;1\" values=\"10;0\" keySplines=\"0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n                    <animate attributeName=\"fill\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"discrete\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"#0051a2;#89bff8;#408ee0;#1b75be;#0051a2\" begin=\"0s\"></animate>\r\n                </circle><circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#0051a2\">\r\n                <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n                <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n                </circle><circle cx=\"50\" cy=\"50\" r=\"10\" fill=\"#1b75be\">\r\n                <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.25s\"></animate>\r\n                <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.25s\"></animate>\r\n                </circle><circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#408ee0\">\r\n                <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.5s\"></animate>\r\n                <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.5s\"></animate>\r\n                </circle><circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#89bff8\">\r\n                <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.75s\"></animate>\r\n                <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.75s\"></animate>\r\n                </circle>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import { useState, useRef } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector } from '../../services/types/hooks';\r\n\r\nimport BurgerIngredientsList from '../burger-ingredients-list/burger-ingredients-list';\r\nimport Loader from '../loader/loader';\r\n\r\nimport s from './burger-ingredients.module.sass';\r\nimport { TIngredient, TIngredientsCategoryTitle, TIngredientsCategoryType } from '../../services/types/data';\r\n\r\ninterface IBurgerIngredientsProps {\r\n    handleIngredientClick: (\r\n        item: TIngredient\r\n    ) => void\r\n}\r\n\r\nconst BurgerIngredients = ({ handleIngredientClick }: IBurgerIngredientsProps) => {\r\n\r\n    const [currentTab, setCurrentTab] = useState<TIngredientsCategoryType>('bun');\r\n    const boxRef = useRef<HTMLDivElement>(null);\r\n    const { ingredients } = useSelector(store => ({\r\n        ingredients: store.ingredients.ingredients,\r\n    }));\r\n\r\n    const switchCurrentTab = (type: TIngredientsCategoryType): void => {\r\n        const element = document.querySelector(`[data-scroll-id=\"${type}\"]`)\r\n        if (element && element instanceof HTMLElement) {\r\n            const offset = element.offsetTop\r\n            boxRef.current?.scroll({\r\n                left: 0,\r\n                top: offset - 247,\r\n                behavior: 'smooth'\r\n            })\r\n        }\r\n    }\r\n\r\n    const switchCurrentTabOnScroll = (e: any): void => {\r\n        const bunContainer = document.querySelector<HTMLElement>(`[data-scroll-id=\"bun\"]`);\r\n        const sauceContainer = document.querySelector<HTMLElement>(`[data-scroll-id=\"sauce\"]`);\r\n        const mainContainer = document.querySelector<HTMLElement>(`[data-scroll-id=\"main\"]`);\r\n\r\n        if ((e.target.scrollTop + 248) > bunContainer!.offsetTop && (e.target.scrollTop + 248) < sauceContainer!.offsetTop && currentTab !== 'bun') {\r\n            setCurrentTab('bun')\r\n            return\r\n        }\r\n        if ((e.target.scrollTop + 248) > sauceContainer!.offsetTop && (e.target.scrollTop + 248) < mainContainer!.offsetTop && currentTab !== 'sauce') {\r\n            setCurrentTab('sauce')\r\n            return\r\n        }\r\n        if ((e.target.scrollTop + 248) > mainContainer!.offsetTop && currentTab !== 'main') {\r\n            setCurrentTab('main')\r\n            return\r\n        }\r\n        return\r\n    }\r\n\r\n    const ingredientCategoryList: Array<{title: TIngredientsCategoryTitle; type: TIngredientsCategoryType;}> = [\r\n        {title: 'Булки', type: 'bun'},\r\n        {title: 'Соусы', type: 'sauce'},\r\n        {title: 'Начинки', type: 'main'},\r\n    ]\r\n\r\n    return (\r\n        <section className={`${s.section_container} pt-10`}>\r\n            <h1 className={`${s.title} text text_type_main-large mb-5`}>Соберите бургер</h1>\r\n                <div className={s.ingredients_wrapper}>\r\n                    {!ingredients && <Loader />}\r\n                    {ingredients && (\r\n                        <>\r\n                            <div className={`${s.tab_wrapper}`}>\r\n                                <Tab \r\n                                    active={currentTab === 'bun'}\r\n                                    onClick={() => switchCurrentTab('bun')}\r\n                                    value=\"Начинки\"\r\n                                >Булки</Tab>\r\n                                <Tab \r\n                                    active={currentTab === 'sauce'}\r\n                                    onClick={() => switchCurrentTab('sauce')}\r\n                                    value=\"Начинки\"\r\n                                >Соусы</Tab>\r\n                                <Tab \r\n                                    active={currentTab === 'main'}\r\n                                    onClick={() => switchCurrentTab('main')}\r\n                                    value=\"Начинки\"\r\n                                >Начинки</Tab>\r\n                            </div>\r\n                            <div \r\n                                onScroll={switchCurrentTabOnScroll}\r\n                                ref={boxRef} \r\n                                className={`${s.ingredients_items_wrapper} pl-4 pb-10`}\r\n                            >\r\n                                {ingredientCategoryList.map((category) => (\r\n                                    <BurgerIngredientsList \r\n                                        key={category.type}\r\n                                        onIngredientClick={handleIngredientClick} \r\n                                        title={category.title} \r\n                                        type={category.type}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredients;","export const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" = \"GET_INGREDIENTS_REQUEST\";\r\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" = \"GET_INGREDIENTS_SUCCESS\";\r\nexport const GET_INGREDIENTS_FAILED: \"GET_INGREDIENTS_FAILED\" = \"GET_INGREDIENTS_FAILED\";\r\nexport const ADD_INGREDIENT_TO_CONSTRUCTOR: \"ADD_INGREDIENT_TO_CONSTRUCTOR\" = \"ADD_INGREDIENT_TO_CONSTRUCTOR\";\r\nexport const DELETE_INGREDIENT_FROM_CONSTRUCTOR: \"DELETE_INGREDIENT_FROM_CONSTRUCTOR\" = \"DELETE_INGREDIENT_FROM_CONSTRUCTOR\";\r\nexport const ADD_BUN_TO_CONSTRUCTOR: \"ADD_BUN_TO_CONSTRUCTOR\" = \"ADD_BUN_TO_CONSTRUCTOR\";\r\nexport const MOVE_INGREDIENT_IN_CONSTRUCTOR: \"MOVE_INGREDIENT_IN_CONSTRUCTOR\" = \"MOVE_INGREDIENT_IN_CONSTRUCTOR\";\r\nexport const RESET_CONSTRUCTOR: \"RESET_CONSTRUCTOR\" = \"RESET_CONSTRUCTOR\";","import { useRef } from 'react';\r\nimport { useDispatch } from '../../hooks/hooks';\r\nimport {  ConstructorElement, DragIcon  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { deleteIngredientFromConstructor, moveIngredientInConstructor } from '../../services/actions/ingredients/ingredients';\r\n\r\nimport s from './burger-constructor-item.module.sass';\r\n\r\nimport { TIngredientConstructor } from '../../services/types/data';\r\n\r\ninterface IBurgerConstructorItemProps {\r\n    ingredient: TIngredientConstructor;\r\n    index: number;\r\n}\r\n\r\nconst BurgerConstructorItem = ({ ingredient, index }: IBurgerConstructorItemProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const deleteIngredient = (ingredient: TIngredientConstructor): void => {\r\n        dispatch(deleteIngredientFromConstructor(ingredient))\r\n    }\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'ingredient',\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver()\r\n        }),\r\n        hover(item: { index: number }, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            if (clientOffset) {\r\n                const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n                if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                    return;\r\n                }\r\n                if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                    return;\r\n                }\r\n                dispatch(moveIngredientInConstructor({hoverIndex, dragIndex}))\r\n                item.index = hoverIndex;\r\n            }\r\n        },\r\n    });\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'ingredient',\r\n        item: () => {\r\n            return { index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div \r\n            ref={ref} \r\n            className={`${s.constructor_item} ${isDragging ? s.active : ''} show_item`} \r\n            data-test=\"constructor-ingredient\"\r\n        >\r\n            <div className={s.drag_icon}>\r\n                <DragIcon type=\"secondary\" />\r\n            </div>\r\n            <ConstructorElement \r\n                text={ingredient.name}\r\n                price={ingredient.price}\r\n                thumbnail={ingredient.image}\r\n                handleClose={() => deleteIngredient(ingredient)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BurgerConstructorItem;","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS, \r\n    GET_INGREDIENTS_FAILED,\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    DELETE_INGREDIENT_FROM_CONSTRUCTOR,\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n    RESET_CONSTRUCTOR\r\n} from '../../constants/ingredients';\r\n// import { AppDispatch, AppThunk } from '../types';\r\n\r\nimport { TIngredient, TIngredientConstructor, TMovingIngredient } from '../../types/data';\r\n\r\nconst _apiUrl = 'https://norma.nomoreparties.space/api';\r\n\r\nexport interface IGetIngredientsRequestAction {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\nexport interface IGetIngredientsSuccessAction {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n    readonly payload: ReadonlyArray<TIngredient>\r\n}\r\nexport interface IGetIngredientsFailedAction {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\nexport interface IAddIngredienToConstructorAction {\r\n    readonly type: typeof ADD_INGREDIENT_TO_CONSTRUCTOR;\r\n    payload: TIngredientConstructor\r\n}\r\nexport interface IDeleteIngredientFromConstructorAction {\r\n    readonly type: typeof DELETE_INGREDIENT_FROM_CONSTRUCTOR;\r\n    payload: TIngredientConstructor\r\n}\r\nexport interface IAddBunToConstructorAction {\r\n    readonly type: typeof ADD_BUN_TO_CONSTRUCTOR;\r\n    payload: TIngredient\r\n}\r\nexport interface IMoveIngredientInConstructorAction {\r\n    readonly type: typeof MOVE_INGREDIENT_IN_CONSTRUCTOR;\r\n    payload: TMovingIngredient;\r\n}\r\nexport interface IResetConstructorAction {\r\n    readonly type: typeof RESET_CONSTRUCTOR;\r\n};\r\n\r\nexport type TIngredientsActions = \r\n    | IGetIngredientsRequestAction\r\n    | IGetIngredientsSuccessAction\r\n    | IGetIngredientsFailedAction\r\n    | IAddIngredienToConstructorAction\r\n    | IDeleteIngredientFromConstructorAction\r\n    | IAddBunToConstructorAction\r\n    | IMoveIngredientInConstructorAction\r\n    | IResetConstructorAction\r\n;\r\n\r\nexport const getIngredientsRequest = (): IGetIngredientsRequestAction  => ({\r\n    type: GET_INGREDIENTS_REQUEST\r\n})\r\nexport const getIngredientsSuccess = (ingredients: ReadonlyArray<TIngredient>): IGetIngredientsSuccessAction  => ({\r\n    type: GET_INGREDIENTS_SUCCESS,\r\n    payload: ingredients\r\n})\r\nexport const getIngredientsFailed = (): IGetIngredientsFailedAction  => ({\r\n    type: GET_INGREDIENTS_FAILED\r\n})\r\nexport const addIngredientToConstructor = (ingredient: TIngredientConstructor): IAddIngredienToConstructorAction  => ({\r\n    type: ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    payload: ingredient\r\n})\r\nexport const deleteIngredientFromConstructor = (ingredient: TIngredientConstructor): IDeleteIngredientFromConstructorAction  => ({\r\n    type: DELETE_INGREDIENT_FROM_CONSTRUCTOR,\r\n    payload: ingredient\r\n})\r\nexport const addBunToConstructor = (bun: TIngredient): IAddBunToConstructorAction  => ({\r\n    type: ADD_BUN_TO_CONSTRUCTOR,\r\n    payload: bun\r\n})\r\nexport const moveIngredientInConstructor = (dragObj: TMovingIngredient): IMoveIngredientInConstructorAction  => ({\r\n    type: MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n    payload: dragObj\r\n})\r\nexport const resetConstructor = (): IResetConstructorAction  => ({\r\n    type: RESET_CONSTRUCTOR\r\n})\r\n\r\n// export const getIngredients: AppThunk = () => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(getIngredientsRequest());\r\n//         fetch(`${_apiUrl}/ingredients`).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(getIngredientsFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             dispatch(getIngredientsSuccess(response.data))\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }","import { useMemo } from 'react';\r\nimport { CurrencyIcon, ConstructorElement, Button  } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../../hooks/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport BurgerConstructorItem from '../burger-constructor-item/burger-constructor-item';\r\nimport { addBunToConstructor, addIngredientToConstructor } from '../../services/actions/ingredients/ingredients';\r\n\r\nimport { TIngredient, TIngredientConstructor } from '../../services/types/data';\r\n\r\nimport s from './burger-constructor.module.sass';\r\n\r\ninterface IBurgerConstructorProps {\r\n    handleOrderClick: (\r\n        location: object\r\n    ) => void\r\n}\r\n\r\nconst BurgerConstructor = ({ handleOrderClick }: IBurgerConstructorProps) => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation()\r\n\r\n    const { constructorIngredients, constructorBun, user } = useSelector(store => ({\r\n        constructorIngredients: store.ingredients.constructorIngredients,\r\n        constructorBun: store.ingredients.constructorBun,\r\n        user: store.user.user\r\n    }));\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const makeOrder = (): void => {\r\n        if (!user) {\r\n            history.push({ pathname: '/login' })\r\n            return\r\n        }\r\n\r\n        if (constructorBun && constructorIngredients.length > 0) {\r\n            handleOrderClick(location)\r\n        }\r\n    }\r\n\r\n    const [, dropContainer] = useDrop({\r\n        accept: \"constructor\",\r\n        drop(item: TIngredient) {\r\n            if (item.type === 'bun') {\r\n                dispatch(addBunToConstructor(item))\r\n                return\r\n            }\r\n            dispatch(addIngredientToConstructor({...item, drag_id: uuidv4()}))\r\n        }\r\n    })\r\n\r\n    const totalPrice: number = useMemo(() => {\r\n        if (constructorBun || constructorIngredients.length > 0) {\r\n            const totalPrice = constructorIngredients.reduce((acc: number, curr: TIngredientConstructor): number => {\r\n                return acc + curr.price\r\n            }, 0)\r\n    \r\n            return (totalPrice + (constructorBun ? constructorBun.price : 0) * 2)\r\n        } else {\r\n            return 0\r\n        }\r\n    }, [constructorIngredients, constructorBun])\r\n\r\n    return (\r\n        <section className={`${s.section_container} pt-25`}>\r\n                <div \r\n                    className={`pt-4 pr-4`}\r\n                    ref={dropContainer}\r\n                    data-test=\"constructor\"\r\n                >\r\n                    {!constructorBun && constructorIngredients.length === 0 && (\r\n                        <p className={`${s.no_ingredients} text text_type_main-default`}>Перетащите сюда булочку и ингредиенты</p>\r\n                    )}\r\n                    {constructorBun && (\r\n                        <div className={`pl-8 mb-4 show_item`}>\r\n                            <ConstructorElement \r\n                                    type=\"top\"\r\n                                    isLocked={true}\r\n                                    text={`${constructorBun.name} (верх)`}\r\n                                    price={constructorBun.price}\r\n                                    thumbnail={constructorBun.image}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {constructorIngredients.length > 0 && (\r\n                        <div className={`${s.wrapper_inner} mb-4`}>\r\n                            {constructorIngredients.map((ingredient: TIngredientConstructor, index: number) => (\r\n                                    <BurgerConstructorItem\r\n                                        index={index}\r\n                                        ingredient={ingredient}\r\n                                        key={ingredient.drag_id}\r\n                                    />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                    {constructorBun && (\r\n                        <div className={`pl-8 pr-4 show_item`}>\r\n                            <ConstructorElement \r\n                                    type=\"bottom\"\r\n                                    isLocked={true}\r\n                                    text={`${constructorBun.name} (низ)`}\r\n                                    price={constructorBun.price}\r\n                                    thumbnail={constructorBun.image}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n           <div className={`${s.constructor_footer}`}>\r\n                <div className={`${s.total_wrapper} mr-10`}>\r\n                    <span className=\"text text_type_digits-medium\">{totalPrice}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <div onClick={makeOrder}>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Оформить заказ\r\n                    </Button>\r\n                </div>\r\n           </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BurgerConstructor;","import React from 'react';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\n\r\nimport s from './constructor-page.module.sass';\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\ninterface IConstructorPageProps {\r\n    handleIngredientClick: (\r\n        item: TIngredient\r\n    ) => void;\r\n    handleOrderClick: (\r\n        propLocation: object\r\n    ) => void;\r\n}\r\n\r\nconst ConstructorPage = ({ handleIngredientClick, handleOrderClick }: IConstructorPageProps) => {\r\n\r\n    return (\r\n        <>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <section className={s.table_wrapper}>\r\n                    <BurgerIngredients handleIngredientClick={handleIngredientClick} />\r\n                    <BurgerConstructor handleOrderClick={handleOrderClick} />\r\n                </section>\r\n            </DndProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConstructorPage;","import React, { FormEvent } from 'react';\r\nimport { Logo, EmailInput, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport { setEmail, setPassword, userLoginRequest } from '../../services/actions/user/user';\r\n\r\nimport s from './login-page.module.sass';\r\n\r\nconst LoginPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { state } = useLocation<any>()\r\n\r\n    const { email, password, user } = useSelector(store => ({\r\n        email: store.user.email,\r\n        password: store.user.password,\r\n        user: store.user.user\r\n    }))\r\n\r\n    const onFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        dispatch(userLoginRequest())\r\n    }\r\n\r\n    if (user) {\r\n        return <Redirect to={ state?.from || '/' } />\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.form_container} pt-30`} >\r\n            <div className={s.form_wrapper}>\r\n                <div className=\"mb-20\">\r\n                    <Logo/>\r\n                </div>\r\n                <form onSubmit={onFormSubmit} className={`${s.form} mb-20`}>\r\n                    <h3 className=\"text text_type_main-medium mb-6\">Вход</h3>\r\n                    <div className=\"mb-6\">\r\n                        <EmailInput \r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => dispatch(setEmail(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <PasswordInput \r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => dispatch(setPassword(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <Button>Войти</Button>\r\n                </form>\r\n                <p className={`${s.form_descr} text text_type_main-default mb-4`}>\r\n                    Вы - новый пользователь? <Link to={{ pathname: \"/register\", state: 'fromLogin' }} className={s.form_link}>Зарегестрироваться</Link>\r\n                </p>\r\n                <p className={`${s.form_descr} text text_type_main-default`}>\r\n                    Забыли пароль? <Link to={{ pathname: \"/forgot-password\", state: 'fromLogin' }} className={s.form_link}>Восстановить пароль</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage;","import { FormEvent } from 'react';\r\nimport { Logo, EmailInput, PasswordInput, Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport { setEmail, setName, setPassword, userRegisterRequest } from '../../services/actions/user/user';\r\n\r\nimport s from './register-page.module.sass';\r\n\r\nconst RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    const { name, email, password, user } = useSelector(store => ({\r\n        email: store.user.email,\r\n        password: store.user.password,\r\n        name: store.user.name,\r\n        user: store.user.user\r\n    }))\r\n\r\n    const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(userRegisterRequest())\r\n    }\r\n\r\n    if (user) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (location.state !== 'fromLogin') {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.form_container} pt-30`} >\r\n            <div className={s.form_wrapper}>\r\n                <div className=\"mb-20\">\r\n                    <Logo/>\r\n                </div>\r\n                <form onSubmit={onFormSubmit} className={`${s.form} mb-20`}>\r\n                    <h3 className=\"text text_type_main-medium mb-6\">Регистрация</h3>\r\n                    <div className=\"mb-6\">\r\n                        <Input \r\n                            type=\"text\"\r\n                            placeholder=\"Имя\"\r\n                            value={name}\r\n                            onChange={e => dispatch(setName(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <EmailInput\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => dispatch(setEmail(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <PasswordInput \r\n                            name=\"email\"\r\n                            value={password}\r\n                            onChange={e => dispatch(setPassword(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <Button>Зарегистрироваться</Button>\r\n                </form>\r\n                <p className={`${s.form_descr} text text_type_main-default mb-4`}>\r\n                    Уже зарегистрированы? <Link to=\"/login\" className={s.form_link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","\r\nexport const SEND_EMAIL_REQUEST: \"SEND_EMAIL_REQUEST\" = \"SEND_EMAIL_REQUEST\";\r\nexport const SEND_EMAIL_SUCCESS: \"SEND_EMAIL_SUCCESS\" = \"SEND_EMAIL_SUCCESS\";\r\nexport const SEND_EMAIL_FAILED: \"SEND_EMAIL_FAILED\" = \"SEND_EMAIL_FAILED\";\r\n\r\nexport const RESET_PASSWORD_REQUEST: \"RESET_PASSWORD_REQUEST\" = \"RESET_PASSWORD_REQUEST\";\r\nexport const RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\" = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_FAILED: \"RESET_PASSWORD_FAILED\" = \"RESET_PASSWORD_FAILED\";\r\n\r\nexport const SET_EMAILCODE: \"SET_EMAILCODE\" = \"SET_EMAILCODE\";\r\nexport const RESET_EMAILCODE: \"RESET_EMAILCODE\" = \"RESET_EMAILCODE\";\r\n\r\nexport const SET_USER_REQUEST: \"SET_USER_REQUEST\" = \"SET_USER_REQUEST\";\r\nexport const SET_USER_SUCCESS: \"SET_USER_SUCCESS\" = \"SET_USER_SUCCESS\";\r\nexport const SET_USER_FAILED: \"SET_USER_FAILED\" = \"SET_USER_FAILED\";\r\n\r\nexport const SET_EMAIL: \"SET_EMAIL\" = \"SET_EMAIL\";\r\nexport const RESET_EMAIL: \"RESET_EMAIL\" = \"RESET_EMAIL\";","import { resetPassword as resetPasswordAction, resetEmail } from '../user/user';\r\n\r\nimport {\r\n    SEND_EMAIL_REQUEST,\r\n    SEND_EMAIL_SUCCESS,\r\n    SEND_EMAIL_FAILED,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILED ,\r\n    SET_EMAILCODE,\r\n    RESET_EMAILCODE\r\n} from '../../constants/reset-password';\r\n\r\nimport { AppDispatch, AppThunk } from '../../types';\r\nimport { TMessageResetEmail, TMessageResetPassword } from '../../types/data';\r\n\r\nconst _apiUrl = 'https://norma.nomoreparties.space/api';\r\n\r\nexport interface ISendEmailRequestAction {\r\n    readonly type: typeof SEND_EMAIL_REQUEST;\r\n}\r\nexport interface ISendEmailSuccessAction {\r\n    readonly type: typeof SEND_EMAIL_SUCCESS;\r\n    payload: TMessageResetEmail\r\n}\r\nexport interface ISendEmailFailedAction {\r\n    readonly type: typeof SEND_EMAIL_FAILED;\r\n}\r\nexport interface IResetPasswordRequestAction {\r\n    readonly type: typeof RESET_PASSWORD_REQUEST;\r\n}\r\nexport interface IResetPasswordSuccessAction {\r\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n    payload: TMessageResetPassword\r\n}\r\nexport interface IResetPasswordFailedAction {\r\n    readonly type: typeof RESET_PASSWORD_FAILED;\r\n}\r\nexport interface ISetEmailCodeAction {\r\n    readonly type: typeof SET_EMAILCODE;\r\n    payload: string\r\n}\r\nexport interface IResetEmailCodeAction {\r\n    readonly type: typeof RESET_EMAILCODE;\r\n}\r\n\r\nexport type TResetPasswordActions = \r\n    | ISendEmailRequestAction\r\n    | ISendEmailSuccessAction\r\n    | ISendEmailFailedAction\r\n    | IResetPasswordRequestAction\r\n    | IResetPasswordSuccessAction\r\n    | IResetPasswordFailedAction\r\n    | ISetEmailCodeAction\r\n    | IResetEmailCodeAction\r\n;\r\n\r\nexport const sendEmailRequest = (): ISendEmailRequestAction => ({\r\n    type: SEND_EMAIL_REQUEST\r\n})\r\nexport const sendEmailSuccess = (email: TMessageResetEmail): ISendEmailSuccessAction => ({\r\n    type: SEND_EMAIL_SUCCESS,\r\n    payload: email\r\n})\r\nexport const sendEmailFailed = (): ISendEmailFailedAction => ({\r\n    type: SEND_EMAIL_FAILED\r\n})\r\nexport const resetPasswordRequest = (): IResetPasswordRequestAction => ({\r\n    type: RESET_PASSWORD_REQUEST\r\n})\r\nexport const resetPasswordSuccess = (password: TMessageResetPassword): IResetPasswordSuccessAction => ({\r\n    type: RESET_PASSWORD_SUCCESS,\r\n    payload: password\r\n})\r\nexport const resetPasswordFailed = (): IResetPasswordFailedAction => ({\r\n    type: RESET_PASSWORD_FAILED\r\n})\r\nexport const setEmailCode = (code: string): ISetEmailCodeAction => ({\r\n    type: SET_EMAILCODE,\r\n    payload: code\r\n})\r\nexport const resetEmailCode = (): IResetEmailCodeAction => ({\r\n    type: RESET_EMAILCODE\r\n})\r\n\r\n// export const sendEmailForResetPass: AppThunk = (email: string) => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(sendEmailRequest());\r\n//         fetch(`${_apiUrl}/password-reset`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8'\r\n//             },\r\n//             body: JSON.stringify({\r\n//               \"email\": email\r\n//             })\r\n//         }).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(sendEmailFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(sendEmailSuccess(response))\r\n//                 dispatch(resetEmail())\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }\r\n\r\n// export const  resetPassword: AppThunk = (newPassword: string, emailCode: string) => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(resetPasswordRequest())\r\n//         fetch(`${_apiUrl}/password-reset/reset`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 \"password\": newPassword,\r\n//                 \"token\": emailCode\r\n//             })\r\n//         }).then(response => {\r\n//             if (response.ok) {\r\n//                 return response.json()\r\n//             } else {\r\n//                 dispatch(resetPasswordFailed())\r\n//             }\r\n//         }).then(response => {\r\n//             if (response.success) {\r\n//                 dispatch(resetPasswordSuccess(response))\r\n//                 dispatch(resetEmailCode())\r\n//                 dispatch(resetPasswordAction())\r\n//             }\r\n//         }).catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// }","import { useEffect } from 'react';\r\nimport { FormEvent } from 'react';\r\nimport { Logo, Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { Redirect, useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport { setEmail } from '../../services/actions/user/user';\r\nimport { sendEmailRequest } from '../../services/actions/reset-password/reset-password'; \r\n\r\nimport s from './forgot-password-page.module.sass';\r\n\r\nconst ForgotPasswordPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { email, user, sendEmailSuccess } = useSelector(store => ({\r\n        email: store.user.email,\r\n        user: store.user.user,\r\n        sendEmailSuccess: store.resetPassword.sendEmailSuccess\r\n    }))\r\n\r\n    const onFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(sendEmailRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sendEmailSuccess && sendEmailSuccess.success) {\r\n            history.replace({ pathname: '/reset-password', state: 'fromForgotPassword' });\r\n        }\r\n    }, [sendEmailSuccess, history, dispatch])\r\n\r\n    if (user) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (location.state !== 'fromLogin') {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.form_container} pt-30`} >\r\n            <div className={s.form_wrapper}>\r\n                <div className=\"mb-20\">\r\n                    <Logo/>\r\n                </div>\r\n                <form \r\n                    className={`${s.form} mb-20`}\r\n                    onSubmit={onFormSubmit}\r\n                >\r\n                    <h3 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h3>\r\n                    <div className=\"mb-6\">\r\n                        <Input \r\n                            type=\"text\"\r\n                            placeholder=\"Укажите e-mail\"\r\n                            value={email}\r\n                            onChange={e => dispatch(setEmail(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <Button>Восстановить</Button>\r\n                </form>\r\n                <p className={`${s.form_descr} text text_type_main-default mb-4`}>\r\n                    Вспомнили пароль? <Link to=\"/login\" className={s.form_link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;","import { FormEvent, useEffect } from 'react';\r\nimport { Logo, Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\nimport { Redirect, useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport { resetPasswordRequest, setEmailCode } from '../../services/actions/reset-password/reset-password';\r\nimport { setPassword } from '../../services/actions/user/user';\r\n\r\nimport s from './reset-password-page.module.sass';\r\n\r\nconst ResetPasswordPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory()\r\n\r\n    const { password, emailCode, user, resetPasswordSuccess } = useSelector(store => ({\r\n        password: store.user.password,\r\n        emailCode: store.resetPassword.emailCode,\r\n        user: store.user.user,\r\n        resetPasswordSuccess: store.resetPassword.resetPasswordSuccess\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (resetPasswordSuccess && resetPasswordSuccess.success) {\r\n            history.replace({ pathname: '/login' })\r\n        }\r\n    }, [history, resetPasswordSuccess])\r\n\r\n    const onFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\r\n        e.preventDefault();\r\n        dispatch(resetPasswordRequest())\r\n    }\r\n\r\n    if (user) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    if (location.state !== 'fromForgotPassword') {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.form_container} pt-30`} >\r\n            <div className={s.form_wrapper}>\r\n                <div className=\"mb-20\">\r\n                    <Logo/>\r\n                </div>\r\n                <form \r\n                    className={`${s.form} mb-20`}\r\n                    onSubmit={onFormSubmit}\r\n                >\r\n                    <h3 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h3>\r\n                    <div className=\"mb-6\">\r\n                        <PasswordInput \r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => dispatch(setPassword(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <Input \r\n                            type=\"text\"\r\n                            placeholder=\"Введите код из письма\"\r\n                            value={emailCode}\r\n                            onChange={e => dispatch(setEmailCode(e.target.value))}\r\n                        />\r\n                    </div>\r\n                    <Button>Сохранить</Button>\r\n                </form>\r\n                <p className={`${s.form_descr} text text_type_main-default mb-4`}>\r\n                    Вспомнили пароль? <Link to=\"/login\" className={s.form_link}>Войти</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordPage;","import { FormEvent } from 'react';\r\nimport { Input, EmailInput, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport { setName, setEmail, setPassword, updateUserInfoRequest } from '../../services/actions/user/user';\r\n\r\nimport s from './profile-page.module.sass';\r\n\r\nconst ProfilePage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { email, name, password } = useSelector(store => ({\r\n        email: store.user.email,\r\n        name: store.user.name,\r\n        password: store.user.password\r\n    }))\r\n\r\n    const updateUserInfoClick = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(updateUserInfoRequest())\r\n    }\r\n\r\n    return (\r\n        <div className={`${s.container_form} pt-30`}>\r\n            <form  onSubmit={updateUserInfoClick} className={s.form_wrapper}>\r\n                <div className=\"mb-6\">\r\n                    <Input \r\n                        type=\"text\"\r\n                        placeholder=\"Имя\"\r\n                        value={name}\r\n                        onChange={e => dispatch(setName(e.target.value))}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <EmailInput\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={e => dispatch(setEmail(e.target.value))}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput \r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={e => dispatch(setPassword(e.target.value))}\r\n                    />\r\n                </div>\r\n                <div className={s.profile_btn_wrapper}>\r\n                    <div className={`${s.profile_btn_cancel} text text_type_main-default`}>Отмена</div>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import { useMemo } from 'react';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { useSelector } from '../../hooks/hooks';\r\n\r\nimport s from './order-item.module.sass';\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\ninterface TOrderItem {\r\n    onOrderClick: (\r\n        orderInfo: TOrder,\r\n        ingredientsFull: Array<TIngredient>\r\n        // ingredientsFull: any\r\n    ) => void;\r\n    orderInfo: TOrder\r\n}\r\n\r\nconst OrderItem = ({ onOrderClick, orderInfo }: TOrderItem) => {\r\n\r\n    const location = useLocation();\r\n    const { path } = useRouteMatch();\r\n\r\n    const { createdAt, ingredients, name, number, _id } = orderInfo;\r\n\r\n    const { ingredientsStore } = useSelector(store => ({\r\n        ingredientsStore: store.ingredients.ingredients\r\n    }))\r\n\r\n    const ingredientsFull: Array<TIngredient> | [] = useMemo(() => {\r\n        const newIngredientsArr = ingredients.map((ingredientId: string) => {\r\n            return ingredientsStore?.find((item: TIngredient) => item._id === ingredientId)\r\n        })\r\n\r\n        return newIngredientsArr.filter(item => Boolean(item)) as TIngredient[] \r\n    }, [ingredients, ingredientsStore])\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return ingredientsFull.reduce((acc: number, curr: TIngredient): number => {\r\n            if (curr) {\r\n                return acc + curr.price\r\n            } else {\r\n                return acc + 0\r\n            }\r\n        }, 0)\r\n    }, [ingredientsFull]);\r\n\r\n    const ingredientsImageArr = useMemo(() => {\r\n        const visibleArr = ingredientsFull.slice(0, 5);\r\n        const hiddenArr = ingredientsFull.slice(5);\r\n\r\n        return [visibleArr, hiddenArr]\r\n    }, [ingredientsFull])\r\n\r\n    const statusText = useMemo(() => {\r\n        if (orderInfo) {\r\n            switch(orderInfo.status) {\r\n                case 'created':\r\n                    return \"Создан\"\r\n                case 'pending':\r\n                    return \"В работе\"\r\n                case 'done':\r\n                    return 'Выполнен'\r\n                default:\r\n                    return ''\r\n            }\r\n        }\r\n    }, [orderInfo])\r\n\r\n    const onOrderCardClick = () => {\r\n        onOrderClick(orderInfo, ingredientsFull)\r\n    }\r\n\r\n    return (\r\n        <Link\r\n            to={{\r\n                pathname: `${location.pathname}/${_id}`,\r\n                state: { background: location }\r\n            }}\r\n            onClick={onOrderCardClick}\r\n            className={s.container_orders_item_wrapper}\r\n        >\r\n            <div className={`${s.container_orders_item} mb-6 p-6`}>\r\n                <div className={`${s.order_header} mb-6`}>\r\n                    <p className=\"text text_type_digits-default\">#{number}</p>\r\n                    <p className=\"text text_type_main-small dark_gray\">{createdAt}</p>\r\n                </div>\r\n                <h4 className=\"text text_type_main-medium mb-2\">{name}</h4>\r\n                {path === \"/profile/orders\" && (\r\n                    <p className={`text text_type_main-small ${orderInfo.status === 'done' ? 'blue' : ''}`}>{statusText}</p>\r\n                )}\r\n                <div className={`${s.container_orders_item_footer} mt-6`}>\r\n                    <div className={s.container_orders_item_ingredients}>\r\n                        {ingredientsImageArr[0].map((item, index) => (\r\n                            <div \r\n                                className={s.container_orders_item_ingredient}\r\n                                key={index}\r\n                                style={{ \r\n                                    transform: `translateX(-${index * 15}px)`,\r\n                                    zIndex: 6 - index\r\n                                }}\r\n                            >\r\n                                <img src={item?.image} alt={item?.name} />\r\n                            </div>\r\n                        ))}\r\n                        {ingredientsImageArr[1].length > 0 && (\r\n                            <div \r\n                                className={s.container_orders_item_ingredient}\r\n                                style={{ \r\n                                    transform: `translateX(-75px)`,\r\n                                    zIndex: 1\r\n                                }}\r\n                            >\r\n                                <img src={ingredientsImageArr[0][0]?.image} alt={ingredientsImageArr[0][0]?.name} />\r\n                                <div className={`${s.container_orders_item_ingredient_length} text text_type_main-default`}>\r\n                                    +{ingredientsImageArr[1].length}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className={`${s.container_orders_item_total}`}>\r\n                        <span className=\"text text_type_digits-default mr-2\">{orderPrice}</span>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default OrderItem;","export const WS_ALL_ORDERS_CONNECTION_SUCCESS: \"WS_ALL_ORDERS_CONNECTION_SUCCESS\" = 'WS_ALL_ORDERS_CONNECTION_SUCCESS';\r\nexport const WS_ALL_ORDERS_CONNECTION_ERROR: \"WS_ALL_ORDERS_CONNECTION_ERROR\" = 'WS_ALL_ORDERS_CONNECTION_ERROR';\r\nexport const WS_ALL_ORDERS_CONNECTION_CLOSED: \"WS_ALL_ORDERS_CONNECTION_CLOSED\" = 'WS_ALL_ORDERS_CONNECTION_CLOSED';\r\nexport const WS_ALL_ORDERS_GET_MESSAGE: \"WS_ALL_ORDERS_GET_MESSAGE\" = 'WS_ALL_ORDERS_GET_MESSAGE';\r\nexport const WS_ALL_ORDERS_CONNECTION_START: \"WS_ALL_ORDERS_CONNECTION_START\" = 'WS_ALL_ORDERS_CONNECTION_START';\r\n\r\nexport const WS_USER_ORDERS_CONNECTION_SUCCESS: \"WS_USER_ORDERS_CONNECTION_SUCCESS\" = 'WS_USER_ORDERS_CONNECTION_SUCCESS';\r\nexport const WS_USER_ORDERS_CONNECTION_ERROR: \"WS_USER_ORDERS_CONNECTION_ERROR\" = 'WS_USER_ORDERS_CONNECTION_ERROR';\r\nexport const WS_USER_ORDERS_CONNECTION_CLOSED: \"WS_USER_ORDERS_CONNECTION_CLOSED\" = 'WS_USER_ORDERS_CONNECTION_CLOSED';\r\nexport const WS_USER_ORDERS_GET_MESSAGE: \"WS_USER_ORDERS_GET_MESSAGE\" = 'WS_USER_ORDERS_GET_MESSAGE';\r\nexport const WS_USER_ORDERS_CONNECTION_START: \"WS_USER_ORDERS_CONNECTION_START\" = 'WS_USER_ORDERS_CONNECTION_START';","import {\r\n    WS_ALL_ORDERS_CONNECTION_SUCCESS,\r\n    WS_ALL_ORDERS_CONNECTION_ERROR,\r\n    WS_ALL_ORDERS_CONNECTION_CLOSED ,\r\n    WS_ALL_ORDERS_GET_MESSAGE,\r\n    WS_ALL_ORDERS_CONNECTION_START,\r\n    WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n    WS_USER_ORDERS_CONNECTION_ERROR,\r\n    WS_USER_ORDERS_CONNECTION_CLOSED,\r\n    WS_USER_ORDERS_GET_MESSAGE,\r\n    WS_USER_ORDERS_CONNECTION_START\r\n} from '../../constants/wsOrders';\r\n\r\nimport { TWsOrders } from '../../types/data';\r\n\r\nexport interface IWsAllOrdersConnectionSuccessAction {\r\n    readonly type: typeof WS_ALL_ORDERS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsAllOrdersConnectionErrorAction {\r\n    readonly type: typeof WS_ALL_ORDERS_CONNECTION_ERROR;\r\n}\r\nexport interface IWsAllOrdersConnectionClosedAction {\r\n    readonly type: typeof WS_ALL_ORDERS_CONNECTION_CLOSED;\r\n}\r\nexport interface IWsAllOrdersGetMessageAction {\r\n    readonly type: typeof WS_ALL_ORDERS_GET_MESSAGE;\r\n    payload: TWsOrders\r\n}\r\nexport interface IWsAllOrdersConnectionStartAction {\r\n    readonly type: typeof WS_ALL_ORDERS_CONNECTION_START;\r\n}\r\nexport interface IWsUserOrdersConnectionSuccessAction {\r\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsUserOrdersConnectionErrorAction {\r\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_ERROR;\r\n}\r\nexport interface IWsUserOrdersConnectionClosedAction {\r\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_CLOSED;\r\n}\r\nexport interface IWsUserOrdersGetMessageAction {\r\n    readonly type: typeof WS_USER_ORDERS_GET_MESSAGE;\r\n    payload: TWsOrders\r\n}\r\nexport interface IWsUserOrdersConnectionStartAction {\r\n    readonly type: typeof WS_USER_ORDERS_CONNECTION_START;\r\n}\r\n\r\nexport type TWsOrdersActions = \r\n    | IWsAllOrdersConnectionSuccessAction\r\n    | IWsAllOrdersConnectionErrorAction\r\n    | IWsAllOrdersConnectionClosedAction\r\n    | IWsAllOrdersGetMessageAction\r\n    | IWsAllOrdersConnectionStartAction\r\n    | IWsUserOrdersConnectionSuccessAction\r\n    | IWsUserOrdersConnectionErrorAction\r\n    | IWsUserOrdersConnectionClosedAction\r\n    | IWsUserOrdersGetMessageAction\r\n    | IWsUserOrdersConnectionStartAction\r\n;\r\n\r\nexport const wsAllOrdersConnectionSuccess = (): IWsAllOrdersConnectionSuccessAction => ({\r\n    type: WS_ALL_ORDERS_CONNECTION_SUCCESS\r\n})\r\nexport const wsAllOrdersConnectionError = (): IWsAllOrdersConnectionErrorAction => ({\r\n    type: WS_ALL_ORDERS_CONNECTION_ERROR\r\n})\r\nexport const wsAllOrdersConnectionClosed = (): IWsAllOrdersConnectionClosedAction => ({\r\n    type: WS_ALL_ORDERS_CONNECTION_CLOSED\r\n})\r\nexport const wsAllOrdersGetMessage = (orders: TWsOrders): IWsAllOrdersGetMessageAction => ({\r\n    type: WS_ALL_ORDERS_GET_MESSAGE,\r\n    payload: orders\r\n})\r\nexport const wsAllOrdersConnectionStart = (): IWsAllOrdersConnectionStartAction => ({\r\n    type: WS_ALL_ORDERS_CONNECTION_START\r\n})\r\nexport const wsUserOrdersConnectionSuccess = (): IWsUserOrdersConnectionSuccessAction => ({\r\n    type: WS_USER_ORDERS_CONNECTION_SUCCESS\r\n})\r\nexport const wsUserOrdersConnectionError = (): IWsUserOrdersConnectionErrorAction => ({\r\n    type: WS_USER_ORDERS_CONNECTION_ERROR\r\n})\r\nexport const wsUserOrdersConnectionClosed = (): IWsUserOrdersConnectionClosedAction => ({\r\n    type: WS_USER_ORDERS_CONNECTION_CLOSED\r\n})\r\nexport const wsUserOrdersGetMessage = (orders: TWsOrders): IWsUserOrdersGetMessageAction => ({\r\n    type: WS_USER_ORDERS_GET_MESSAGE,\r\n    payload: orders\r\n})\r\nexport const wsUserOrdersConnectionStart = (): IWsUserOrdersConnectionStartAction => ({\r\n    type: WS_USER_ORDERS_CONNECTION_START\r\n})","import React, { useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport OrderItem from '../../components/order-item/order-item';\r\nimport { wsUserOrdersConnectionStart } from '../../services/actions/wsOrders/wsOrders';\r\n\r\nimport s from './orders-page.module.sass';\r\nimport { TOrder, TIngredient } from '../../services/types/data';\r\n\r\ninterface IOrdersPageProps {\r\n    handleOrderInfoClick: (\r\n        order: TOrder, \r\n        ingredientsArr: ReadonlyArray<TIngredient>\r\n    ) => void\r\n}\r\n\r\nconst OrdersPage = ({ handleOrderInfoClick }: IOrdersPageProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { userOrders } = useSelector(store => ({\r\n        userOrders: store.wsOrders.userOrders,\r\n    }))\r\n  \r\n    useEffect(() => {\r\n        dispatch(wsUserOrdersConnectionStart());\r\n    }, [])\r\n\r\n    const ordersContetnt = useMemo(() => {\r\n        if (userOrders && userOrders.orders) {\r\n            return userOrders.orders.map((order: TOrder) => {\r\n                if (order && order.ingredients) {\r\n                    return (\r\n                        <OrderItem \r\n                            onOrderClick={handleOrderInfoClick} \r\n                            orderInfo={order}\r\n                            key={order._id}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }, [userOrders, handleOrderInfoClick])\r\n\r\n    return (\r\n        <div className={`${s.container_orders} pt-12`}> \r\n            <div className={s.container_orders_wrapper}>\r\n                {ordersContetnt}\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nOrdersPage.propTypes = {\r\n    handleOrderInfoClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default OrdersPage;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from '../../hooks/hooks';\r\n\r\nimport OrderItem from '../../components/order-item/order-item';\r\n\r\nimport s from './feed-page.module.sass';\r\nimport { TOrder, TIngredient } from '../../services/types/data';\r\n\r\ninterface IFeedPageProps {\r\n    handleOrderInfoClick: (\r\n        order: TOrder, \r\n        ingredientsArr: ReadonlyArray<TIngredient>\r\n    ) => void\r\n}\r\n\r\nconst FeedPage = ({ handleOrderInfoClick }: IFeedPageProps) => {\r\n\r\n    const { allOrders, ingredients, wsAllOrdersConnect } = useSelector(store => ({\r\n        allOrders: store.wsOrders.allOrders,\r\n        wsAllOrdersConnect: store.wsOrders.wsAllOrdersConnect,\r\n        ingredients: store.ingredients.ingredients\r\n    }))\r\n    \r\n    const formOrdersStatusArr = (status: 'done' | 'created' | 'pending'):  Array<TOrder> | null => {\r\n        if (!allOrders) {\r\n            return null\r\n        }\r\n\r\n        const filterArr: Array<TOrder> = allOrders?.orders.filter((order: TOrder) => order.status === status);\r\n\r\n        if (filterArr.length > 10) {\r\n            return filterArr.slice(0, 10)\r\n        } else {\r\n            return filterArr\r\n        }\r\n    }\r\n\r\n    const pendingOrdersArr = formOrdersStatusArr('pending')\r\n    const doneOrdersArr = formOrdersStatusArr('done')\r\n\r\n    const allOrdersContent = useMemo(() => {\r\n        if (allOrders && ingredients) {\r\n            return allOrders.orders.map((order: TOrder) => {\r\n                if (order && order.ingredients) {\r\n                    return (\r\n                        <OrderItem \r\n                            orderInfo={order} \r\n                            onOrderClick={handleOrderInfoClick} \r\n                            key={order._id}\r\n                        />\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }, [allOrders, handleOrderInfoClick, ingredients])\r\n\r\n    return (\r\n        <div className={`${s.container} pt-10`} >\r\n            <h2 className=\"text text_type_main-large mb-10\">Лента заказов</h2>\r\n            {!wsAllOrdersConnect && (\r\n                <p className=\"text text_type_main-large mb-10 dark_gray\">Что-то пошло не так! :(</p>\r\n            )}\r\n            {allOrders && ingredients && wsAllOrdersConnect && (\r\n                <div className={s.container_wrapper}>\r\n                    <div className={s.orders_wrapper}>\r\n                        {allOrdersContent}\r\n                    </div>\r\n                    <div className={s.details_wrapper}>\r\n                        <div className={`${s.details_column} mb-15`}>\r\n                            <div>\r\n                                <h4 className=\"text text_type_main-medium mb-6\">Готовы:</h4>\r\n                                <div className={s.orders_status_column}>\r\n                                    {doneOrdersArr?.map((order: TOrder) => (\r\n                                        <p key={order._id} className=\"text text_type_digits-default mb-2 blue\">{order.number}</p>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <h4 className=\"text text_type_main-medium mb-6\">В работе:</h4>\r\n                                <div className={s.orders_status_column}>\r\n                                    {pendingOrdersArr?.map((order: TOrder) => (\r\n                                        <p key={order._id} className=\"text text_type_digits-default mb-2\">{order.number}</p>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <h3 className=\"text text_type_main-medium\">Выполнено за все время:</h3>\r\n                        <p className=\"text text_type_digits-large mb-15 text_shadow\">{allOrders.total.toLocaleString('ru-RU')}</p>\r\n                        <h3 className=\"text text_type_main-medium\">Выполнено за сегодня:</h3>\r\n                        <p className=\"text text_type_digits-large text_shadow\">{allOrders.totalToday.toLocaleString('ru-RU')}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedPage.propTypes = {\r\n    handleOrderInfoClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedPage;","export const SET_MODAL_INNER_INGREDIENT_DETAILS: \"SET_MODAL_INNER_INGREDIENT_DETAILS\" = \"SET_MODAL_INNER_INGREDIENT_DETAILS\";\r\nexport const SET_MODAL_INNER_ORDER_DETAILS: \"SET_MODAL_INNER_ORDER_DETAILS\" = \"SET_MODAL_INNER_ORDER_DETAILS\";\r\n// export const SET_MODAL_OPEN: \"SET_MODAL_OPEN\" = \"SET_MODAL_OPEN\";\r\n// export const SET_MODAL_CLOSE: \"SET_MODAL_CLOSE\" = \"SET_MODAL_CLOSE\";\r\nexport const SET_CURRENT_INGREDIENT: \"SET_CURRENT_INGREDIENT\" = \"SET_CURRENT_INGREDIENT\";\r\nexport const SET_MODAL_INNER_ORDER_INFO: \"SET_MODAL_INNER_ORDER_INFO\" = \"SET_MODAL_INNER_ORDER_INFO\";\r\nexport const SET_CURRENT_ORDER_INFO: \"SET_CURRENT_ORDER_INFO\" = \"SET_CURRENT_ORDER_INFO\";","import {\r\n    SET_MODAL_INNER_INGREDIENT_DETAILS,\r\n    SET_MODAL_INNER_ORDER_DETAILS,\r\n    SET_CURRENT_INGREDIENT,\r\n    SET_MODAL_INNER_ORDER_INFO,\r\n    SET_CURRENT_ORDER_INFO\r\n} from '../../constants/modal';\r\n\r\nimport { TIngredient, TOrderInfo } from '../../types/data';\r\n\r\nexport interface ISetModalInnerIngredientsDetailsAction {\r\n    readonly type: typeof SET_MODAL_INNER_INGREDIENT_DETAILS;\r\n}\r\nexport interface ISetModalInnerOrderDetailsAction {\r\n    readonly type: typeof SET_MODAL_INNER_ORDER_DETAILS;\r\n}\r\nexport interface ISetCurrentIngredientAction {\r\n    readonly type: typeof SET_CURRENT_INGREDIENT;\r\n    payload: TIngredient\r\n}\r\nexport interface ISetModalInnerOrderInfoAction {\r\n    readonly type: typeof SET_MODAL_INNER_ORDER_INFO;\r\n    payload: string;\r\n}\r\nexport interface ISetCurrentOrderInfoAction {\r\n    readonly type: typeof SET_CURRENT_ORDER_INFO;\r\n    payload: TOrderInfo\r\n}\r\n\r\nexport type TModalActions = \r\n    | ISetModalInnerIngredientsDetailsAction\r\n    | ISetModalInnerOrderDetailsAction\r\n    | ISetCurrentIngredientAction\r\n    | ISetModalInnerOrderInfoAction\r\n    | ISetCurrentOrderInfoAction\r\n;\r\n\r\nexport const setModalInnerIngredientsDetails = (): ISetModalInnerIngredientsDetailsAction => ({\r\n    type: SET_MODAL_INNER_INGREDIENT_DETAILS\r\n})\r\nexport const setModalInnerOrderDetails = (): ISetModalInnerOrderDetailsAction => ({\r\n    type: SET_MODAL_INNER_ORDER_DETAILS\r\n})\r\nexport const setModalInnerOrderInfo = (orderNumber: string): ISetModalInnerOrderInfoAction => ({\r\n    type: SET_MODAL_INNER_ORDER_INFO,\r\n    payload: orderNumber\r\n})\r\nexport const setCurrentIngredient = (ingredient: TIngredient): ISetCurrentIngredientAction => ({\r\n    type: SET_CURRENT_INGREDIENT,\r\n    payload: ingredient\r\n})\r\nexport const setCurrentOrderInfo = (order: TOrderInfo): ISetCurrentOrderInfoAction => ({\r\n    type: SET_CURRENT_ORDER_INFO,\r\n    payload: order\r\n})\r\n\r\n\r\n","import { useSelector } from '../../hooks/hooks';\r\n\r\nimport s from './ingredient-details.module.sass';\r\n\r\nconst IngredientDetails = () => {\r\n\r\n    const currentIngredient = useSelector(store => store.modal.currentIngredient)\r\n\r\n    return (\r\n        <div>\r\n            <img className={`${s.image} mb-4`} src={currentIngredient?.image} alt={currentIngredient?.name} />\r\n            <p className={`text text_type_main-medium ${s.subtitle} mb-8`}>\r\n                {currentIngredient?.name}\r\n            </p>\r\n            <div className={s.footer}>\r\n                <div className={s.footer_item}>\r\n                    <span className=\"text text_type_main-default\">Калории,ккал</span>\r\n                    <span className=\"text text_type_digits-default\">{currentIngredient?.calories}</span>\r\n                </div>\r\n                <div className={s.footer_item}>\r\n                    <span className=\"text text_type_main-default\">Белки, г</span>\r\n                    <span className=\"text text_type_digits-default\">{currentIngredient?.proteins}</span>\r\n                </div>\r\n                <div className={s.footer_item}>\r\n                    <span className=\"text text_type_main-default\">Жиры, г</span>\r\n                    <span className=\"text text_type_digits-default\">{currentIngredient?.fat}</span>\r\n                </div>\r\n                <div className={s.footer_item}>\r\n                    <span className=\"text text_type_main-default\">Углеводы, г</span>\r\n                    <span className=\"text text_type_digits-default\">{currentIngredient?.carbohydrates}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientDetails;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport { setCurrentIngredient } from '../../services/actions/modal/modal';\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\n\r\nimport s from './ingredient-item-page.module.sass';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nconst IngredientItemPage = () => {\r\n\r\n    const { id } = useParams<{id: string}>();\r\n    const dispatch = useDispatch();\r\n\r\n    const { ingredients, currentIngredient } = useSelector(store => ({\r\n        ingredients: store.ingredients.ingredients,\r\n        currentIngredient: store.modal.currentIngredient\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (ingredients) {\r\n            const ingredient = ingredients.find((item: TIngredient) => item._id === id)\r\n            if (ingredient) {\r\n                dispatch(setCurrentIngredient(ingredient));\r\n            }\r\n        }\r\n    }, [ingredients, id, dispatch])\r\n\r\n    return (\r\n        <div className={s.ingredient_wrapper}>\r\n            <h3 className={`${s.ingredient_title} text text_type_main-large`}>Детали ингредиента</h3>\r\n            {currentIngredient && (\r\n                <IngredientDetails />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientItemPage;","export default __webpack_public_path__ + \"static/media/order-detail.9f47fe93.svg\";","export default __webpack_public_path__ + \"static/media/stroke.bd47ec5e.svg\";","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport s from './order-details-page.module.sass';\r\n\r\nimport background from '../../images/order-detail.svg';\r\nimport accept from '../../images/stroke.svg';\r\n\r\nconst OrderDetailsPage = () => {\r\n\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    return (\r\n        <div className={s.order_wrapper}>\r\n            <div className={`pt-20 pb-20`}>\r\n                <p className={`${s.count} text text_type_digits-large mb-8`}>{id}</p>\r\n                <h4 className={`${s.count_descr} text text_type_main-medium mb-15`}>идентификатор заказа</h4>\r\n                <div className={`${s.image_wrapper} mb-15`}>\r\n                    <img className={s.accept} src={accept} alt=\"accept\" /> \r\n                    <img className={s.background} src={background} alt=\"background\" />\r\n                </div>\r\n                <p className={`${s.footer_title} text text_type_main-default mb-2`}>Ваш заказ начали готовить</p>\r\n                <p className={`${s.footer_descr} text text_type_main-default`}>Дождитесь готовности на орбитальной станции</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetailsPage;","import { FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector } from '../../hooks/hooks';\r\n\r\nimport s from './modal.module.sass';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\ninterface IModalProps {\r\n    closeModal: () => void\r\n}\r\n\r\nconst Modal: FC<IModalProps> = ({ closeModal, children }) => {\r\n\r\n    const modalInner = useSelector(store => store.modal.modalInner)\r\n\r\n    if (!modalRoot) {\r\n        return null\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <div className={s.modal_wrapper}>\r\n                <div className={`${s.modal} pt-10 pl-10 pr-10 pb-10 show_item`} >\r\n                    {modalInner?.title && modalInner.type === 'ingredientDetails' && (\r\n                        <h3 className={`text text_type_main-large ${s.modal_title}`}>{modalInner.title}</h3>\r\n                    )}\r\n                    {modalInner?.title && modalInner.type === 'orderInfo' && (\r\n                        <h3 className={`text text_type_digits-default ${s.modal_title}`}>{modalInner.title}</h3>\r\n                    )}\r\n                    <div \r\n                        className={s.modal_close}\r\n                        onClick={closeModal}\r\n                    >\r\n                        <CloseIcon type=\"primary\" />\r\n                    </div>\r\n                    {children}\r\n                </div>\r\n                <div \r\n                    onClick={closeModal}\r\n                    className={s.modal_overlay}\r\n                ></div>\r\n            </div>\r\n        ),\r\n        modalRoot\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import { useSelector } from '../../hooks/hooks';\r\n\r\nimport Loader from '../loader/loader';\r\n\r\nimport s from './order-details.module.sass';\r\n\r\nimport background from '../../images/order-detail.svg';\r\nimport accept from '../../images/stroke.svg';\r\n\r\nconst OrderDetails = () => {\r\n\r\n    const { order, orderRequest } = useSelector(store => ({\r\n        order: store.order.order,\r\n        orderRequest: store.order.orderRequest\r\n    }));\r\n\r\n    if (orderRequest) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <div className={`pt-20 pb-20`}>\r\n            <p className={`${s.count} text text_type_digits-large mb-8`}>{order?.number}</p>\r\n            <h4 className={`${s.count_descr} text text_type_main-medium mb-15`}>идентификатор заказа</h4>\r\n            <div className={`${s.image_wrapper} mb-15`}>\r\n                <img className={s.accept} src={accept} alt=\"accept\" /> \r\n                <img className={s.background} src={background} alt=\"background\" />\r\n            </div>\r\n            <p className={`${s.footer_title} text text_type_main-default mb-2`}>Ваш заказ начали готовить</p>\r\n            <p className={`${s.footer_descr} text text_type_main-default`}>Дождитесь готовности на орбитальной станции</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;","import { useMemo } from 'react';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector } from '../../hooks/hooks';\r\n\r\nimport s from './order-info.module.sass';\r\nimport { TIngredient } from '../../services/types/data';\r\n\r\nconst OrderInfo = () => {\r\n\r\n    const { currentOrderInfo } = useSelector(store => ({\r\n        currentOrderInfo: store.modal.currentOrderInfo\r\n    }))\r\n\r\n    const statusText = useMemo(() => {\r\n        if (currentOrderInfo) {\r\n            switch(currentOrderInfo.order.status) {\r\n                case 'created':\r\n                    return \"Создан\"\r\n                case 'pending':\r\n                    return \"В работе\"\r\n                case 'done':\r\n                    return 'Выполнен'\r\n                default:\r\n                    return ''\r\n            }\r\n        }\r\n    }, [currentOrderInfo])\r\n\r\n    const orderPrice: number = useMemo(() => {\r\n        if (currentOrderInfo) {\r\n            return currentOrderInfo.ingredientsArr.reduce((acc: number, curr: TIngredient): number => {\r\n                return acc + curr.price\r\n            }, 0)\r\n        } else {\r\n            return 0\r\n        }\r\n    }, [currentOrderInfo]);\r\n\r\n    return (\r\n        <div className='mt-4'>\r\n            {currentOrderInfo && (\r\n                <>\r\n                    <h4 className=\"text text_type_main-medium mb-4\" >{currentOrderInfo.order.name}</h4>\r\n                    <p className=\"text text_type_main-default mb-15 blue\" >{statusText}</p>\r\n                    <p className=\"text text_type_main-medium mb-6\" >Состав:</p>\r\n                    <div className={`${s.order_info_wrapper} pr-6 mb-15`}>\r\n                        {currentOrderInfo.ingredientsArr.map((ingredient: TIngredient, index: number) => (\r\n                            <div key={index} className={`${s.order_info_item}`}>\r\n                                <div className={`${s.order_info_icon} mr-4`}>\r\n                                    <img className={s.order_info_image} src={ingredient.image} alt={ingredient.name} />\r\n                                </div>\r\n                                <p className={`${s.order_info_title} text text_type_main-default`} >{ingredient.name}</p>\r\n                                <p className=\"text text_type_digits-default mr-2\" >{ingredient.price}</p>\r\n                                <CurrencyIcon type=\"primary\" />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={`${s.order_info_footer}`}>\r\n                        <p className={`${s.order_info_time} text text_type_main-default dark_gray`}>\r\n                            {currentOrderInfo.order.createdAt}\r\n                        </p>\r\n                        <p className=\"text text_type_digits-default mr-2\">{orderPrice}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderInfo;","import { useEffect, useState, FC } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUserInfoRequest } from '../../services/actions/user/user';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\ninterface IProtectedRouteProps {\r\n    path: string;\r\n    exact?: boolean\r\n}\r\n\r\nexport const ProtectedRoute: FC<IProtectedRouteProps> = ({ children, ...rest }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(store => store.user.user)\r\n\r\n    const [isUserLoaded, setUserLoaded] = useState<boolean>(false);\r\n\r\n    const init = async () => {\r\n        await dispatch(getUserInfoRequest());\r\n        setUserLoaded(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    if (!isUserLoaded) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) => user ? (\r\n                children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{ \r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n  );\r\n} ","export const GET_ORDER_REQUEST: \"GET_ORDER_REQUEST\" = \"GET_ORDER_REQUEST\";\r\nexport const GET_ORDER_SUCCESS: \"GET_ORDER_SUCCESS\" = \"GET_ORDER_SUCCESS\";\r\nexport const GET_ORDER_FAILED: \"GET_ORDER_FAILED\" = \"GET_ORDER_FAILED\";\r\nexport const ORDER_RESET: \"ORDER_RESET\" = \"ORDER_RESET\";\r\n\r\n// export const GET_ALL_ORDERS_SUCCESS: \"GET_ALL_ORDERS_SUCCESS\" = \"GET_ALL_ORDERS_SUCCESS\";\r\n// export const GET_ALL_ORDERS_FAILED: \"GET_ALL_ORDERS_FAILED\" = \"GET_ALL_ORDERS_FAILED\";","import { getCookie } from '../../../utils/cookies';\r\nimport { resetConstructor } from '../ingredients/ingredients'\r\n\r\nimport {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAILED,\r\n  ORDER_RESET\r\n} from '../../constants/order';\r\n\r\nimport { AppDispatch, AppThunk } from '../../types';\r\nimport { TOrder } from '../../types/data';\r\n\r\nconst _apiUrl = 'https://norma.nomoreparties.space/api';\r\n\r\nexport interface IGetOrderRequestAction {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface IGetOrderSuccessAction {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  payload: TOrder\r\n}\r\nexport interface IGetOrderFailedAction {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\nexport interface IIOrderResetAction {\r\n  readonly type: typeof ORDER_RESET;\r\n}\r\n\r\nexport type TOrderActions = \r\n  | IGetOrderRequestAction\r\n  | IGetOrderSuccessAction\r\n  | IGetOrderFailedAction\r\n  | IIOrderResetAction\r\n;\r\n\r\nexport const getOrderRequest = (): IGetOrderRequestAction => ({\r\n  type: GET_ORDER_REQUEST\r\n})\r\nexport const getOrderSuccess = (order: TOrder): IGetOrderSuccessAction => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  payload: order\r\n})\r\nexport const getOrderFailed = (): IGetOrderFailedAction => ({\r\n  type: GET_ORDER_FAILED\r\n})\r\nexport const orderReset = (): IIOrderResetAction => ({\r\n  type: ORDER_RESET\r\n})\r\n\r\n// export const makeOrder: AppThunk = (ingredientsIdArr: ReadonlyArray<string>) => {\r\n//     return function(dispatch: AppDispatch) {\r\n//         dispatch(getOrderRequest())\r\n//         fetch(`${_apiUrl}/orders`, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json;charset=utf-8',\r\n//               'Authorization': 'Bearer ' + getCookie('accessToken')\r\n//             },\r\n//             body: JSON.stringify({\r\n//               \"ingredients\": ingredientsIdArr\r\n//             })\r\n//         }).then(response => {\r\n//           if (response.ok) {\r\n//             return response.json()\r\n//           } else {\r\n//             dispatch(getOrderFailed())\r\n//           }\r\n//         }).then(response => {\r\n//           dispatch(getOrderSuccess(response.order))\r\n//           dispatch(resetConstructor())\r\n//           }).catch(err => {\r\n//             console.log(err);\r\n//           })\r\n//     }\r\n// }","import React, { useEffect } from 'react';\r\nimport { useParams, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport OrderInfo from '../../components/order-info/order-info';\r\nimport { wsUserOrdersConnectionStart } from '../../services/actions/wsOrders/wsOrders';\r\nimport { setCurrentOrderInfo } from '../../services/actions/modal/modal';\r\n\r\nimport s from './order-info-page.module.sass';\r\nimport { TIngredient, TOrder, TWsOrders } from '../../services/types/data';\r\n\r\nconst OrderInfoPage = () => {\r\n    const params = useParams<{id: string}>();\r\n    const { path } = useRouteMatch();\r\n    const dispatch = useDispatch();\r\n    const { ingredients, allOrders, userOrders, currentOrderInfo } = useSelector(store => ({\r\n        ingredients: store.ingredients.ingredients,\r\n        allOrders: store.wsOrders.allOrders,\r\n        userOrders: store.wsOrders.userOrders,\r\n        currentOrderInfo: store.modal.currentOrderInfo\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if (path === '/profile/orders/:id') {\r\n            dispatch(wsUserOrdersConnectionStart())\r\n        }\r\n    }, [])\r\n\r\n    const dispatchCurrentOrder = (ordersArr: any): void => {\r\n        const currentOrder = ordersArr.orders.find((order: TOrder) => order._id === params.id);\r\n\r\n        if (currentOrder) {\r\n            const ingredientsArr = currentOrder.ingredients.map((ingredientId: string) => {\r\n                const ingredientItem = ingredients?.find((item: TIngredient) => item._id === ingredientId)\r\n\r\n                if (ingredientItem) {\r\n                    return ingredientItem\r\n                }\r\n            })\r\n\r\n            dispatch(setCurrentOrderInfo({ order: currentOrder,  ingredientsArr}));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ingredients && allOrders && path === '/feed/:id') {\r\n            dispatchCurrentOrder(allOrders)\r\n        }\r\n        if (ingredients && userOrders && path === '/profile/orders/:id') {\r\n            dispatchCurrentOrder(userOrders)\r\n        }\r\n    }, [allOrders, ingredients, userOrders])\r\n    \r\n    return (\r\n        <div className={s.order_wrapper}>\r\n            {currentOrderInfo && <h3 className={`${s.title} text text_type_digits-medium`}>#{currentOrderInfo.order.number}</h3>}\r\n            <OrderInfo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderInfoPage;","import { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../hooks/hooks';\r\n\r\nimport WithAppHeader from '../../layouts/with-app-header/with-app-header';\r\nimport WithProfileNav from '../../layouts/with-profile-nav/with-profile-nav';\r\nimport ConstructorPage from '../../pages/constructor-page/constructor-page';\r\nimport LoginPage from '../../pages/login-page/login-page';\r\nimport RegisterPage from '../../pages/register-page/register-page';\r\nimport ForgotPasswordPage from '../../pages/forgot-password-page/forgot-password-page';\r\nimport ResetPasswordPage from '../../pages/reset-password-page/reset-password-page';\r\nimport ProfilePage from '../../pages/profile-page/profile-page';\r\nimport OrdersPage from '../../pages/orders-page/orders-page';\r\nimport FeedPage from '../../pages/feed-page/feed-page';\r\nimport IngredientItemPage from '../../pages/ingredient-item-page/ingredient-item-page';\r\nimport OrderDetailsPage from '../../pages/order-details-page/order-details-page';\r\nimport Modal from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport OrderInfo from '../order-info/order-info';\r\nimport { ProtectedRoute } from '../../layouts/protected-route/protected-route';\r\n\r\nimport { wsAllOrdersConnectionStart } from '../../services/actions/wsOrders/wsOrders';\r\n\r\nimport { getOrderRequest, orderReset} from '../../services/actions/order/order';\r\nimport { getUserInfoRequest } from '../../services/actions/user/user';\r\nimport { TIngredient, TOrder } from '../../services/types/data';\r\n\r\nimport { \r\n  setCurrentIngredient, \r\n  setModalInnerIngredientsDetails, \r\n  setModalInnerOrderDetails, \r\n  setModalInnerOrderInfo, \r\n  setCurrentOrderInfo \r\n} from '../../services/actions/modal/modal';\r\nimport OrderInfoPage from '../../pages/order-info-page/order-info-page';\r\nimport { getIngredientsRequest } from '../../services/actions/ingredients/ingredients';\r\n\r\nexport interface IAppLocation {\r\n  background?: {\r\n      key: string,\r\n      pathname: string,\r\n      search: string,\r\n      hash: string\r\n      state: IAppLocation\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n\r\n  const ModalSwitch = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation<IAppLocation>();\r\n\r\n    let background = \r\n      history.action === \"PUSH\" && location.state && location.state.background;\r\n\r\n    const { modalInner } = useSelector(store => ({\r\n      modalInner: store.modal.modalInner\r\n    }));\r\n\r\n    const modalInnerDetails = {\r\n      ingredientDetails: 'ingredientDetails',\r\n      orderDetails: 'orderDetails',\r\n      orderInfo: 'orderInfo'\r\n    }\r\n\r\n    const handleIngredientClick = (item: TIngredient): void => {\r\n      dispatch(setCurrentIngredient(item));\r\n      dispatch(setModalInnerIngredientsDetails())\r\n    }\r\n\r\n    const handleOrderClick = (propLocation: object): void => {\r\n      dispatch(setModalInnerOrderDetails())\r\n      history.push({ pathname: '/order-details/4321', state: { background: propLocation }  })\r\n\r\n      dispatch(getOrderRequest())\r\n    }\r\n\r\n    const handleOrderInfoClick = (order: TOrder, ingredientsArr: ReadonlyArray<TIngredient>): void => {\r\n      dispatch(setCurrentOrderInfo({ order, ingredientsArr}));\r\n      dispatch(setModalInnerOrderInfo(`#${order.number}`));\r\n    }\r\n\r\n    const closeModal = (): void => {\r\n      dispatch(orderReset());\r\n      history.goBack()\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch(getIngredientsRequest())\r\n\r\n      if (localStorage.getItem('refreshToken')) {\r\n        dispatch(getUserInfoRequest());\r\n      }\r\n\r\n      dispatch(wsAllOrdersConnectionStart());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n\r\n      const closeModalByEscape = (e: KeyboardEvent ): void => {\r\n          if (e.key === \"Escape\") {\r\n              closeModal();\r\n          }\r\n      }\r\n\r\n      document.addEventListener('keydown', closeModalByEscape)\r\n\r\n      return () => {\r\n          document.removeEventListener('keydown', closeModalByEscape)\r\n      }\r\n      \r\n    }, [])\r\n    \r\n    return (\r\n          <>\r\n            {background && (\r\n              <Route path=\"/:type/:id\" >\r\n                <Modal closeModal={closeModal}>\r\n                  {modalInner?.type === modalInnerDetails.ingredientDetails && <IngredientDetails/>}\r\n                  {modalInner?.type === modalInnerDetails.orderDetails && <OrderDetails/>}\r\n                  {modalInner?.type === modalInnerDetails.orderInfo && <OrderInfo/>}\r\n                </Modal>\r\n              </Route>\r\n            )}\r\n            <Switch location={background || location} >\r\n              <Route path=\"/\" exact >\r\n                <WithAppHeader>\r\n                  <ConstructorPage\r\n                    handleIngredientClick={handleIngredientClick}\r\n                    handleOrderClick={handleOrderClick}\r\n                  />\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/ingredients/:id\" >\r\n                <WithAppHeader>\r\n                  <IngredientItemPage />\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/feed/:id\" >\r\n                <WithAppHeader>\r\n                  <OrderInfoPage />\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/order-details/:id\" >\r\n                <WithAppHeader>\r\n                  <OrderDetailsPage/>\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <ProtectedRoute path=\"/profile/orders/:id\">\r\n                <WithAppHeader>\r\n                  <OrderInfoPage />\r\n                </WithAppHeader>\r\n              </ProtectedRoute>\r\n\r\n              <Route path=\"/login\" >\r\n                <WithAppHeader>\r\n                  <LoginPage/>\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/register\" >\r\n                <WithAppHeader>\r\n                  <RegisterPage/>\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/feed\" exact >\r\n                <WithAppHeader>\r\n                  <FeedPage handleOrderInfoClick={handleOrderInfoClick} />\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <ProtectedRoute path=\"/profile\" exact>\r\n                <WithAppHeader>\r\n                  <WithProfileNav>\r\n                    <ProfilePage/>\r\n                  </WithProfileNav>\r\n                </WithAppHeader>\r\n              </ProtectedRoute>\r\n\r\n              <ProtectedRoute path=\"/profile/orders\">\r\n                <WithAppHeader>\r\n                  <WithProfileNav>\r\n                    <OrdersPage handleOrderInfoClick={handleOrderInfoClick} />\r\n                  </WithProfileNav>\r\n                </WithAppHeader>\r\n              </ProtectedRoute>\r\n\r\n              <Route path=\"/forgot-password\" >\r\n                <WithAppHeader>\r\n                  <ForgotPasswordPage/>\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n              <Route path=\"/reset-password\" >\r\n                <WithAppHeader>\r\n                  <ResetPasswordPage/>\r\n                </WithAppHeader>\r\n              </Route>\r\n\r\n            </Switch>\r\n          </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <ModalSwitch />\r\n      <div>\r\n        Хуй\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { TIngredient, TIngredientConstructor } from '../../types/data';\r\nimport { TIngredientsActions } from '../../actions/ingredients/ingredients';\r\n\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS, \r\n    GET_INGREDIENTS_FAILED,\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    DELETE_INGREDIENT_FROM_CONSTRUCTOR,\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n    RESET_CONSTRUCTOR\r\n} from '../../constants/ingredients';\r\n\r\ntype TIngredientState = {\r\n    ingredients: null | ReadonlyArray<TIngredient>;\r\n    ingredientsRequest: boolean;\r\n    ingredientsFiled: boolean;\r\n\r\n    constructorIngredients: Array<TIngredientConstructor>,\r\n    constructorBun: null | TIngredient\r\n}\r\n\r\nexport const initialState: TIngredientState = {\r\n    ingredients: null,\r\n    ingredientsRequest: false,\r\n    ingredientsFiled: false,\r\n\r\n    constructorIngredients: [],\r\n    constructorBun: null\r\n}\r\n\r\nexport default function ingredientsReducer(state = initialState, action: TIngredientsActions): TIngredientState {\r\n    switch(action.type) {\r\n        case GET_INGREDIENTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true\r\n            }\r\n        case GET_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                ingredientsFiled: true,\r\n                ingredientsRequest: false\r\n            }\r\n        case GET_INGREDIENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ingredients: action.payload,\r\n                ingredientsFiled: false,\r\n                ingredientsRequest: false\r\n            }\r\n        case ADD_INGREDIENT_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                constructorIngredients: [...state.constructorIngredients, action.payload]\r\n            }\r\n        case DELETE_INGREDIENT_FROM_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                constructorIngredients: state.constructorIngredients.filter(item => item.drag_id !== action.payload.drag_id)\r\n            }\r\n        case ADD_BUN_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                constructorBun: action.payload\r\n            }\r\n        case MOVE_INGREDIENT_IN_CONSTRUCTOR:\r\n            const arr = [...state.constructorIngredients];\r\n\t\t\tconst dragItem = arr[action.payload.dragIndex];\r\n\t\t\tconst hoverItem = arr[action.payload.hoverIndex];\r\n\t\t\tarr[action.payload.hoverIndex] = dragItem;\r\n\t\t\tarr[action.payload.dragIndex] = hoverItem;\r\n            \r\n            return {\r\n                ...state,\r\n                constructorIngredients: arr\r\n            }\r\n        case RESET_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                constructorIngredients: [],\r\n                constructorBun: null\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n            \r\n    }\r\n}","import { \r\n    SET_MODAL_INNER_INGREDIENT_DETAILS,\r\n    SET_MODAL_INNER_ORDER_DETAILS,\r\n    SET_MODAL_INNER_ORDER_INFO,\r\n    SET_CURRENT_INGREDIENT,\r\n    SET_CURRENT_ORDER_INFO\r\n} from '../../constants/modal';\r\n\r\nimport { TIngredientConstructor, TIngredient, TModalInner, TOrderInfo } from '../../types/data'\r\nimport { TModalActions } from '../../actions/modal/modal';\r\n\r\ntype TModalState = {\r\n    ingredientsConstructor: null | Array<TIngredientConstructor>,\r\n    currentIngredient: null | TIngredient,\r\n    currentOrderInfo: null | TOrderInfo,\r\n    modalInner: null | TModalInner\r\n}\r\n\r\nexport const initialState: TModalState = {\r\n    ingredientsConstructor: null,\r\n    currentIngredient: null,\r\n    currentOrderInfo: null,\r\n    modalInner: null\r\n}\r\n\r\nexport default function modalReducer(state = initialState, action: TModalActions): TModalState {\r\n    switch(action.type) {\r\n        case SET_CURRENT_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                currentIngredient: action.payload\r\n            }\r\n        case SET_CURRENT_ORDER_INFO:\r\n            return {\r\n                ...state,\r\n                currentOrderInfo: action.payload\r\n            }\r\n        case SET_MODAL_INNER_INGREDIENT_DETAILS:\r\n            return {\r\n                ...state,\r\n                modalInner: {\r\n                    title: 'Детали ингредиента',\r\n                    type: \"ingredientDetails\"\r\n                }\r\n            }\r\n        case SET_MODAL_INNER_ORDER_DETAILS:\r\n            return {\r\n                ...state,\r\n                modalInner: {\r\n                    title: null,\r\n                    type: 'orderDetails'\r\n                }\r\n            }\r\n        case SET_MODAL_INNER_ORDER_INFO:\r\n            return {\r\n                ...state,\r\n                modalInner: {\r\n                    title: action.payload,\r\n                    type: 'orderInfo'\r\n                }\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n            \r\n    }\r\n}","import { \r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    ORDER_RESET\r\n} from '../../constants/order';\r\n\r\nimport { TOrderActions } from '../../actions/order/order';\r\nimport { TOrder } from '../../types/data';\r\n\r\ntype TOrderState = {\r\n    order: null | TOrder;\r\n    orderRequest: boolean;\r\n    orderFiled: boolean;\r\n    // orderInfo: null | TOrder\r\n}\r\n\r\nexport const initialState: TOrderState = {\r\n    order: null,\r\n    orderRequest: false,\r\n    orderFiled: false,\r\n    // orderInfo: null\r\n}\r\n\r\nexport default function orderReducer(state = initialState, action: TOrderActions): TOrderState {\r\n    switch(action.type) {\r\n        case GET_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            }\r\n        case GET_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                order: action.payload\r\n            }\r\n        case GET_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderFiled: true\r\n            }\r\n        case ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                order: null\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n            \r\n    }\r\n}","import {\r\n    SEND_EMAIL_REQUEST,\r\n    SEND_EMAIL_SUCCESS,\r\n    SEND_EMAIL_FAILED,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILED,\r\n    SET_EMAILCODE,\r\n    RESET_EMAILCODE\r\n} from '../../constants/reset-password';\r\n\r\nimport { TResetPasswordActions } from '../../actions/reset-password/reset-password';\r\nimport { TMessageResetEmail, TMessageResetPassword } from '../../types/data';\r\n\r\ntype TResetPasswordState = {\r\n    sendEmailSuccess: null | TMessageResetEmail;\r\n    sendEmailRequest: boolean;\r\n    sendEmailFailed: boolean;\r\n\r\n    resetPasswordRequest: boolean;\r\n    resetPasswordSuccess: null | TMessageResetPassword;\r\n    resetPasswordFailed: boolean;\r\n    \r\n    emailCode: string\r\n}\r\n\r\nexport const initialState: TResetPasswordState = {\r\n    sendEmailSuccess: null,\r\n    sendEmailRequest: false,\r\n    sendEmailFailed: false,\r\n\r\n    resetPasswordRequest: false,\r\n    resetPasswordSuccess: null,\r\n    resetPasswordFailed: false,\r\n    \r\n    emailCode: ''\r\n}\r\n\r\nexport default function resetPasswordReducer(state = initialState, action: TResetPasswordActions ): TResetPasswordState {\r\n    switch(action.type) {\r\n        case SEND_EMAIL_REQUEST:\r\n            return {\r\n                ...state,\r\n                sendEmailRequest: true\r\n            }\r\n        case SEND_EMAIL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                sendEmailSuccess: action.payload,\r\n                sendEmailRequest: false,\r\n                sendEmailFailed: false\r\n            }\r\n        case SEND_EMAIL_FAILED:\r\n            return {\r\n                ...state,\r\n                sendEmailFailed: true,\r\n                sendEmailRequest: false\r\n            }\r\n        case RESET_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true\r\n            }\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordFailed: false,\r\n                resetPasswordSuccess: action.payload\r\n            }\r\n        case RESET_PASSWORD_FAILED:\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                resetPasswordFailed: true\r\n            }\r\n        case SET_EMAILCODE:\r\n            return {\r\n                ...state,\r\n                emailCode: action.payload\r\n            }\r\n        case RESET_EMAILCODE:\r\n            return {\r\n                ...state,\r\n                emailCode: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_USER_INFO_REQUEST,\r\n    GET_USER_INFO_SUCCESS,\r\n    GET_USER_INFO_FAILED,\r\n    SET_EMAIL,\r\n    RESET_EMAIL,\r\n    SET_PASSWORD,\r\n    RESET_PASSWORD,\r\n    SET_NAME,\r\n    RESET_NAME,\r\n} from '../../constants/user';\r\n\r\nimport { TUserActions } from '../../actions/user/user';\r\nimport { TUser } from '../../types/data';\r\n\r\ntype TUserState = {\r\n    userReguest: boolean;\r\n    userFailed: boolean;\r\n    user: null | TUser\r\n\r\n    name: string;\r\n    email: string;\r\n    password: string\r\n}\r\n\r\nexport const initialState : TUserState = {\r\n    userReguest: false,\r\n    userFailed: false,\r\n    user: null,\r\n\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\nexport default function userReducer(state = initialState, action: TUserActions): TUserState {\r\n    switch(action.type) {\r\n        case GET_USER_INFO_REQUEST:\r\n            return {\r\n                ...state,\r\n                userReguest: true\r\n            }\r\n        case GET_USER_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userReguest: false,\r\n                userFailed: false,\r\n                user: action.payload\r\n            }\r\n        case GET_USER_INFO_FAILED:\r\n            return {\r\n                ...state,\r\n                userReguest: false,\r\n                userFailed: true,\r\n                user: null,\r\n            }\r\n        case SET_EMAIL:\r\n            return {\r\n                ...state,\r\n                email: action.payload\r\n            }\r\n        case RESET_EMAIL:\r\n            return {\r\n                ...state,\r\n                email: ''\r\n            }\r\n        case SET_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password: action.payload\r\n            }\r\n        case RESET_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password: ''\r\n            }\r\n        case SET_NAME: \r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n        case RESET_NAME:\r\n            return {\r\n                ...state,\r\n                name: ''\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import {\r\n    WS_ALL_ORDERS_CONNECTION_SUCCESS, \r\n    WS_ALL_ORDERS_CONNECTION_ERROR,\r\n    WS_ALL_ORDERS_CONNECTION_CLOSED,\r\n    WS_ALL_ORDERS_GET_MESSAGE,\r\n    WS_USER_ORDERS_CONNECTION_SUCCESS, \r\n    WS_USER_ORDERS_CONNECTION_ERROR,\r\n    WS_USER_ORDERS_CONNECTION_CLOSED,\r\n    WS_USER_ORDERS_GET_MESSAGE,\r\n    WS_ALL_ORDERS_CONNECTION_START,\r\n    WS_USER_ORDERS_CONNECTION_START\r\n} from '../../constants/wsOrders';\r\nimport { TWsOrdersActions } from '../../actions/wsOrders/wsOrders';\r\nimport { TWsOrders } from '../../types/data';\r\n\r\ntype TWsOrdersState = {\r\n    wsAllOrdersConnect: boolean,\r\n    allOrders: TWsOrders | null,\r\n    wsUserOrdersConnect: boolean,\r\n    userOrders: TWsOrders | null\r\n};\r\n\r\nexport const initialState: TWsOrdersState = {\r\n    wsAllOrdersConnect: false,\r\n    allOrders: null,\r\n    wsUserOrdersConnect: false,\r\n    userOrders: null\r\n};\r\n  \r\nexport default function wsReducer(state = initialState, action: TWsOrdersActions): TWsOrdersState {\r\n    switch (action.type) {\r\n        case WS_ALL_ORDERS_CONNECTION_START:\r\n            return {\r\n                ...state,\r\n                wsAllOrdersConnect: true\r\n            };\r\n        case WS_USER_ORDERS_CONNECTION_START:\r\n            return {\r\n                ...state,\r\n                wsAllOrdersConnect: true\r\n            };\r\n        case WS_ALL_ORDERS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsAllOrdersConnect: true\r\n            };\r\n        case WS_ALL_ORDERS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsAllOrdersConnect: false\r\n            };\r\n        case WS_ALL_ORDERS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsAllOrdersConnect: false\r\n            };\r\n        case WS_ALL_ORDERS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                allOrders: action.payload\r\n            };\r\n        case WS_USER_ORDERS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsUserOrdersConnect: true\r\n            };\r\n        case WS_USER_ORDERS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsUserOrdersConnect: false\r\n            };\r\n        case WS_USER_ORDERS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsUserOrdersConnect: false\r\n            };\r\n        case WS_USER_ORDERS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                userOrders: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n  ","import { combineReducers } from 'redux';\r\n\r\nimport ingredientsReducer from './ingredients/ingredients';\r\nimport modalReducer from './modal/modal';\r\nimport orderReducer from './order/order';\r\nimport resetPasswordReducer from './reset-password/reset-password';\r\nimport userReducer from './user/user';\r\nimport wsReducer from './wsOrders/wsOrders';\r\n\r\n// import {\r\n//     wsAllOrdersConnectionSuccess, \r\n//     wsAllOrdersConnectionError,\r\n//     wsAllOrdersConnectionClosed,\r\n//     wsAllOrdersGetMessage,\r\n//     wsAllOrdersConnectionStart,\r\n//     wsUserOrdersConnectionSuccess, \r\n//     wsUserOrdersConnectionError,\r\n//     wsUserOrdersConnectionClosed,\r\n//     wsUserOrdersGetMessage,\r\n//     wsUserOrdersConnectionStart\r\n// } from '../actions/wsOrders';\r\n\r\nimport {\r\n    WS_ALL_ORDERS_CONNECTION_SUCCESS,\r\n    WS_ALL_ORDERS_CONNECTION_ERROR,\r\n    WS_ALL_ORDERS_CONNECTION_CLOSED ,\r\n    WS_ALL_ORDERS_GET_MESSAGE,\r\n    WS_ALL_ORDERS_CONNECTION_START,\r\n    WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n    WS_USER_ORDERS_CONNECTION_ERROR,\r\n    WS_USER_ORDERS_CONNECTION_CLOSED,\r\n    WS_USER_ORDERS_GET_MESSAGE,\r\n    WS_USER_ORDERS_CONNECTION_START\r\n} from '../constants/wsOrders';\r\n\r\n/// Все заказы\r\nexport const wsAllOrdersActions = {\r\n    wsInit: WS_ALL_ORDERS_CONNECTION_START,\r\n    onOpen: WS_ALL_ORDERS_CONNECTION_SUCCESS,\r\n    onClose: WS_ALL_ORDERS_CONNECTION_CLOSED,\r\n    onError: WS_ALL_ORDERS_CONNECTION_ERROR,\r\n    onMessage: WS_ALL_ORDERS_GET_MESSAGE\r\n};\r\n\r\n/// Заказы юзера\r\nexport const wsUserOrdersActions = {\r\n    wsInit: WS_USER_ORDERS_CONNECTION_START,\r\n    onOpen: WS_USER_ORDERS_CONNECTION_SUCCESS,\r\n    onClose: WS_USER_ORDERS_CONNECTION_CLOSED,\r\n    onError: WS_USER_ORDERS_CONNECTION_ERROR,\r\n    onMessage: WS_USER_ORDERS_GET_MESSAGE\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    modal: modalReducer,\r\n    order: orderReducer,\r\n    ingredients: ingredientsReducer,\r\n    resetPassword: resetPasswordReducer,\r\n    user: userReducer,\r\n    wsOrders: wsReducer\r\n})\r\n","export function setCookie(name, value, props) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = `${updatedCookie}; path=/;`;\r\n} \r\n\r\nexport function getCookie(name) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function deleteCookie(name) {\r\n    setCookie(name, null, { expires: -1 });\r\n} \r\n","import { getCookie } from \"../../utils/cookies\";\r\nimport { RootState } from \"../types\";\r\nimport { Middleware } from \"redux\";\r\n\r\nexport type WsActions = {\r\n    wsInit: string\r\n    onOpen: string\r\n    onClose: string\r\n    onError: string\r\n    onMessage: string\r\n}\r\n\r\nexport const createSocketMiddlware = (token: string | null, wsActions: WsActions ): Middleware<{}, RootState> => {\r\n    const socketMiddleware: Middleware<{}, RootState> = (store) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => action => {\r\n            const { dispatch } = store;\r\n            const { type } = action;\r\n            const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\r\n            \r\n            if (type === wsInit) {\r\n                if (token) {\r\n                    socket = new WebSocket(`wss://norma.nomoreparties.space/orders?token=${getCookie('accessToken')}`);\r\n                } else {\r\n                    socket = new WebSocket(\"wss://norma.nomoreparties.space/orders/all\");\r\n                }\r\n            }\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({ type: onError, payload: event });\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    const { success, ...restParsedData } = parsedData;\r\n\r\n                    dispatch({ type: onMessage, payload: restParsedData });\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n            }\r\n        next(action);\r\n        };\r\n    };\r\n\r\n    return socketMiddleware;\r\n}","export const _apiUrl: 'https://norma.nomoreparties.space/api' = 'https://norma.nomoreparties.space/api';\r\n\r\nexport const SET_PASSWORD: \"SET_PASSWORD\" = \"SET_PASSWORD\";\r\nexport const RESET_PASSWORD: \"RESET_PASSWORD\" = \"RESET_PASSWORD\";\r\n\r\nexport const SET_NAME: \"SET_NAME\" = \"SET_NAME\";\r\nexport const RESET_NAME: \"RESET_NAME\" = \"RESET_NAME\"\r\n\r\nexport const USER_INFO: \"USER_INFO\" = \"USER_INFO\";\r\n\r\nexport const GET_USER_ORDERS_SUCCESS: \"GET_ALL_ORDERS_SUCCESS\" = \"GET_ALL_ORDERS_SUCCESS\";\r\nexport const GET_USER_ORDERS_FAILED: \"GET_ALL_ORDERS_FAILED\" = \"GET_ALL_ORDERS_FAILED\";","export const checkResponse = (response) => {\r\n    return response.ok \r\n        ? response.json().then(response => {\r\n                if (response?.success) {\r\n                    return response;\r\n                } else {\r\n                    return Promise.reject(response);\r\n                }\r\n            }) \r\n        : response.json().then((error) => Promise.reject(error));\r\n}","import { call, takeEvery, put } from 'redux-saga/effects';\r\nimport { SagaIterator } from \"@redux-saga/types\";\r\n\r\nimport { GET_INGREDIENTS_REQUEST } from '../constants/ingredients';\r\nimport { getIngredientsFailed, getIngredientsSuccess } from '../actions/ingredients/ingredients';\r\nimport { _apiUrl } from '../constants';\r\nimport { checkResponse } from '../../utils/apiHelper';\r\n\r\nconst getIngredientsFetch = () => {\r\n    return fetch(`${_apiUrl}/ingredients`).then(checkResponse)\r\n}\r\n\r\nexport function* getIngredients(): SagaIterator {\r\n    try {\r\n        const response = yield call(getIngredientsFetch);\r\n        yield put(getIngredientsSuccess(response.data));\r\n    } catch (e) {\r\n        yield put(getIngredientsFailed());\r\n    }\r\n}\r\n\r\nexport default function* ingredientsSaga() {\r\n    yield takeEvery(GET_INGREDIENTS_REQUEST, getIngredients)\r\n}","import { call, select, takeEvery, put } from \"redux-saga/effects\";\r\nimport { SagaIterator } from \"@redux-saga/types\";\r\n\r\nimport * as userActions from '../actions/user/user';\r\nimport { setCookie, deleteCookie, getCookie } from \"../../utils/cookies\";\r\nimport { _apiUrl } from \"../constants\";\r\nimport { GET_USER_INFO_REQUEST, UPDATE_USER_INFO_REQUEST, USER_LOGIN_REQUEST, USER_LOGOUT_REQUEST, USER_REGISTER_REQUEST } from \"../constants/user\";\r\nimport { checkResponse } from \"../../utils/apiHelper\";\r\n\r\nexport function userLoginFetch(email: string, password: string) {\r\n    return fetch(`${_apiUrl}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function userLogoutFetch() {\r\n    return fetch(`${_apiUrl}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            \"token\": localStorage.getItem('refreshToken')\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function getUserInfoFetch() {\r\n    return fetch(`${_apiUrl}/auth/user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n             Authorization: 'Bearer ' + getCookie('accessToken')\r\n        }\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function updateAccessTokenFetch() {\r\n    return fetch(`${_apiUrl}/auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem('refreshToken')\r\n        })\r\n    }).then((response) => {\r\n        return response.json();\r\n    }).catch(error => {\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nexport function updateUserInfoFetch(email: string, name: string, password: string) {\r\n    return fetch(`${_apiUrl}/auth/user`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8',\r\n            Authorization: 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            name,\r\n            password\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function userRegisterFetch(name: string, email: string, password: string) {\r\n    return fetch(`${_apiUrl}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            name,\r\n            email,\r\n            password\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function* userLogin(): SagaIterator {\r\n    try {\r\n        const { email, password } = yield select((store) => ({\r\n            email: store.user.email,\r\n            password: store.user.password,\r\n        }));\r\n\r\n        const response = yield call(userLoginFetch, email, password);\r\n\r\n        yield put(userActions.getUserInfoSuccess(response.user))\r\n        yield put(userActions.resetEmail())\r\n        yield put(userActions.resetPassword())\r\n\r\n        yield put(userActions.setName(response.user.name))\r\n        yield put(userActions.setEmail(response.user.email))\r\n\r\n        const accessToken = response.accessToken.split('Bearer ')[1];\r\n        const refreshToken = response.refreshToken;\r\n\r\n        setCookie('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n    } catch(error) {\r\n        yield put(userActions.userLoginFailed())\r\n    }\r\n}\r\n\r\nexport function* userLogout(): SagaIterator {\r\n    try {\r\n        const response = yield call(userLogoutFetch);\r\n        \r\n        localStorage.removeItem('refreshToken')\r\n        deleteCookie('accessToken')\r\n        yield put(userActions.getUserInfoSuccess(null));\r\n    } catch(error) {\r\n        yield put(userActions.userLogoutFailed())\r\n    }\r\n}\r\n\r\nexport function* getUserInfo(): SagaIterator {\r\n    try {\r\n        const response = yield call(getUserInfoFetch);\r\n\r\n        yield put(userActions.getUserInfoSuccess(response.user))\r\n        yield put(userActions.setName(response.user.name))\r\n        yield put(userActions.setEmail(response.user.email))\r\n    } catch(error: any) {\r\n        if (error?.message === 'jwt expired') {\r\n            const data = yield call(updateAccessTokenFetch);\r\n            \r\n            if (data?.success) {\r\n                const accessToken = data.accessToken.split('Bearer ')[1];\r\n                const refreshToken = data.refreshToken;\r\n                \r\n                setCookie('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken)\r\n                \r\n                yield put(userActions.getUserInfoRequest())\r\n            } else {\r\n                yield put(userActions.getUserInfoFailed())\r\n            }\r\n            return\r\n        }\r\n        yield put(userActions.getUserInfoFailed())\r\n    }\r\n}\r\n\r\nexport function* updateUserInfo(): SagaIterator {\r\n    try {\r\n        const { email, name, password } = yield select(store => ({\r\n            email: store.user.email,\r\n            name: store.user.name,\r\n            password: store.user.password\r\n        }))\r\n\r\n        const response = yield call(updateUserInfoFetch, email, name, password)\r\n\r\n        yield put(userActions.getUserInfoSuccess(response.user))\r\n        yield put(userActions.setName(response.user.name))\r\n        yield put(userActions.setEmail(response.user.email))\r\n    } catch(error: any) {\r\n        if (error?.message === 'jwt expired') {\r\n            const data = yield call(updateAccessTokenFetch);\r\n            \r\n            if (data?.success) {\r\n                const accessToken = data.accessToken.split('Bearer ')[1];\r\n                const refreshToken = data.refreshToken;\r\n                \r\n                setCookie('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken)\r\n                \r\n                yield put(userActions.updateUserInfoRequest())\r\n            } else {\r\n                yield put(userActions.updateUserInfoFailed())\r\n            }\r\n            return\r\n        }\r\n        yield put(userActions.updateUserInfoFailed())\r\n    }\r\n}\r\n\r\nexport function* userRegister(): SagaIterator {\r\n    try {\r\n        const { email, name, password } = yield select(store => ({\r\n            email: store.user.email,\r\n            name: store.user.name,\r\n            password: store.user.password\r\n        }))\r\n\r\n        const response = yield call(userRegisterFetch, email, name, password)\r\n\r\n        yield put(userActions.getUserInfoSuccess(response.user))\r\n        yield put(userActions.resetEmail())\r\n        yield put(userActions.resetPassword())\r\n        yield put(userActions.resetName())\r\n\r\n        const accessToken = response.accessToken.split('Bearer ')[1];\r\n        const refreshToken = response.refreshToken;\r\n\r\n        setCookie('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', refreshToken)\r\n    } catch(error) {\r\n        yield put(userActions.userRegisterFailed())\r\n    }\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield takeEvery(USER_LOGIN_REQUEST, userLogin);\r\n    yield takeEvery(USER_LOGOUT_REQUEST, userLogout);\r\n    yield takeEvery(GET_USER_INFO_REQUEST, getUserInfo);\r\n    yield takeEvery(UPDATE_USER_INFO_REQUEST, updateUserInfo);\r\n    yield takeEvery(USER_REGISTER_REQUEST, userRegister);\r\n}","import { select, takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { SagaIterator } from \"@redux-saga/types\";\r\n\r\nimport { checkResponse } from \"../../utils/apiHelper\";\r\nimport { GET_ORDER_REQUEST } from \"../constants/order\";\r\nimport { TIngredient } from \"../types/data\";\r\nimport { getCookie, setCookie } from \"../../utils/cookies\";\r\nimport { _apiUrl } from \"../constants\";\r\nimport { getOrderFailed, getOrderRequest, getOrderSuccess } from \"../actions/order/order\";\r\nimport { resetConstructor } from \"../actions/ingredients/ingredients\";\r\nimport { updateAccessTokenFetch } from \"./user\";\r\n\r\nexport function makeOrderFetch(ingredientsIdArr: Array<string>) {\r\n    return fetch(`${_apiUrl}/orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n          'Authorization': 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        body: JSON.stringify({\r\n          \"ingredients\": ingredientsIdArr\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function* makeOrder(): SagaIterator {\r\n    try {\r\n        const { constructorIngredients, constructorBun } = yield select(store => ({\r\n            constructorIngredients: store.ingredients.constructorIngredients,\r\n            constructorBun: store.ingredients.constructorBun,\r\n        }));\r\n        const finalIngredients = constructorIngredients.map((ingredient: TIngredient): string => ingredient._id)\r\n        const finalIngredientsArg = [...finalIngredients, constructorBun._id, constructorBun._id];\r\n\r\n        const response = yield call(makeOrderFetch, finalIngredientsArg);\r\n\r\n        yield put(getOrderSuccess(response.order));\r\n        yield put(resetConstructor());\r\n\r\n    } catch(error: any) {\r\n        if (error?.message === 'jwt expired') {\r\n            const data = yield call(updateAccessTokenFetch);\r\n            if (data?.success) {\r\n                const accessToken = data.accessToken.split('Bearer ')[1];\r\n                const refreshToken = data.refreshToken;\r\n                \r\n                setCookie('accessToken', accessToken);\r\n                localStorage.setItem('refreshToken', refreshToken)\r\n                \r\n                yield put(getOrderRequest())\r\n            } else {\r\n                yield put(getOrderFailed())\r\n            }\r\n            return\r\n        }\r\n        yield put(getOrderFailed())\r\n    }\r\n}\r\n\r\nexport default function* orderSaga() {\r\n    yield takeEvery(GET_ORDER_REQUEST, makeOrder)\r\n}","import { call, takeEvery, put, select } from 'redux-saga/effects';\r\nimport { SagaIterator } from \"@redux-saga/types\";\r\n\r\nimport { checkResponse } from '../../utils/apiHelper';\r\nimport { resetEmailCode, resetPasswordFailed, resetPasswordSuccess, sendEmailFailed, sendEmailSuccess } from '../actions/reset-password/reset-password';\r\nimport { resetEmail, resetPassword } from '../actions/user/user';\r\n\r\nimport { _apiUrl } from '../constants';\r\nimport { RESET_PASSWORD_REQUEST, SEND_EMAIL_REQUEST } from '../constants/reset-password';\r\n\r\nconst sendEmailFetch = (email: string) => {\r\n    return fetch(`${_apiUrl}/password-reset`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n          email\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nconst resetUserPasswordFetch = (newPassword: string, emailCode: string) => {\r\n    return fetch(`${_apiUrl}/password-reset/reset`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            password: newPassword,\r\n            token: emailCode\r\n        })\r\n    }).then(checkResponse)\r\n}\r\n\r\nexport function* sendEmail(): SagaIterator {\r\n    try {\r\n        const email = yield select(store => store.user.email)\r\n        const response = yield call(sendEmailFetch, email);\r\n        \r\n        yield put(sendEmailSuccess(response))\r\n        yield put(resetEmail())\r\n    } catch(error) {\r\n        yield put(sendEmailFailed())\r\n    }\r\n}\r\n\r\nexport function* resetUserPassword(): SagaIterator {\r\n    try {\r\n        const { emailCode, password } = yield select(store => ({\r\n            password: store.user.password,\r\n            emailCode: store.resetPassword.emailCode\r\n        }))\r\n\r\n        const response = yield call(resetUserPasswordFetch, password, emailCode);\r\n        \r\n        yield put(resetPasswordSuccess(response))\r\n        yield put(resetEmailCode())\r\n        yield put(resetPassword())\r\n    } catch(error) {\r\n        yield put(resetPasswordFailed())\r\n    }\r\n}\r\n\r\nexport default function* resetPasswordSaga() {\r\n    yield takeEvery(RESET_PASSWORD_REQUEST, resetUserPassword)\r\n    yield takeEvery(SEND_EMAIL_REQUEST, sendEmail)\r\n}","import { all, spawn } from \"redux-saga/effects\";\r\nimport ingredientsSaga from \"./ingredients\";\r\nimport orderSaga from \"./order\";\r\nimport resetPasswordSaga from \"./reset-password\";\r\nimport userSaga from \"./user\";\r\n\r\nexport function* rootSaga() {\r\n    const sagas = [ingredientsSaga, userSaga, resetPasswordSaga, orderSaga];\r\n\r\n    yield all(sagas.map(saga => spawn(saga)));\r\n}","import { applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { createStore } from 'redux';\r\nimport { rootReducer } from './reducers';\r\nimport { createSocketMiddlware } from './middleware/socketMiddleware';\r\nimport { wsAllOrdersActions, wsUserOrdersActions } from './reducers';\r\nimport { rootSaga } from './sagas'\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n  \r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const enhancer = composeEnhancers(applyMiddleware(\r\n    thunk,\r\n    sagaMiddleware,\r\n    createSocketMiddlware(null, wsAllOrdersActions),\r\n    createSocketMiddlware('token', wsUserOrdersActions)\r\n));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nsagaMiddleware.run(rootSaga)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_orders_item_wrapper\":\"order-item_container_orders_item_wrapper__3ii6p\",\"container_orders_item\":\"order-item_container_orders_item__s7XR-\",\"container_orders_item_total\":\"order-item_container_orders_item_total__1jAhp\",\"container_orders_item_footer\":\"order-item_container_orders_item_footer__2ifNY\",\"container_orders_item_ingredients\":\"order-item_container_orders_item_ingredients__w_Qda\",\"container_orders_item_ingredient\":\"order-item_container_orders_item_ingredient__32f1s\",\"container_orders_item_ingredient_length\":\"order-item_container_orders_item_ingredient_length__2kkFO\",\"order_header\":\"order-item_order_header__DnBS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_wrapper\":\"order-details-page_order_wrapper__Ws7H7\",\"count\":\"order-details-page_count__Kf0f1\",\"count_descr\":\"order-details-page_count_descr__14uZv\",\"footer_title\":\"order-details-page_footer_title__3lbSq\",\"footer_descr\":\"order-details-page_footer_descr__3Q-oi\",\"image_wrapper\":\"order-details-page_image_wrapper__2lWTL\",\"accept\":\"order-details-page_accept__1rENN\",\"background\":\"order-details-page_background__k-c4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_nav_item\":\"profile-nav_container_nav_item__2pM7h\",\"active\":\"profile-nav_active__2Oaio\",\"container_nav_descr\":\"profile-nav_container_nav_descr__ccNre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"login-page_form_container__1yBe7\",\"form_wrapper\":\"login-page_form_wrapper__lzuR3\",\"form\":\"login-page_form__3Nq9B\",\"form_descr\":\"login-page_form_descr__BuEiI\",\"form_link\":\"login-page_form_link__2bOIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-page_container__EomQE\",\"container_wrapper\":\"feed-page_container_wrapper__1RIkn\",\"orders_wrapper\":\"feed-page_orders_wrapper__Qzj-n\",\"details_column\":\"feed-page_details_column__9gsZv\",\"orders_status_column\":\"feed-page_orders_status_column__2bHAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ingredient-details_title__3tmHs\",\"image\":\"ingredient-details_image__lfJQA\",\"subtitle\":\"ingredient-details_subtitle__1i8PN\",\"footer\":\"ingredient-details_footer__1hBHZ\",\"footer_item\":\"ingredient-details_footer_item__hILh3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"order-details_count__1_hdC\",\"count_descr\":\"order-details_count_descr__mRRlY\",\"footer_title\":\"order-details_footer_title__9NF8Y\",\"footer_descr\":\"order-details_footer_descr__3u6Wg\",\"image_wrapper\":\"order-details_image_wrapper__2C91g\",\"accept\":\"order-details_accept__JaasI\",\"background\":\"order-details_background__3YvRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_info_wrapper\":\"order-info_order_info_wrapper__POvu_\",\"order_info_item\":\"order-info_order_info_item__kDWdf\",\"order_info_icon\":\"order-info_order_info_icon__23ZxF order-item_container_orders_item_ingredient__32f1s\",\"order_info_title\":\"order-info_order_info_title__3OYEU\",\"order_info_footer\":\"order-info_order_info_footer__28KAK\",\"order_info_time\":\"order-info_order_info_time__2OkpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2tf18\",\"modal_wrapper\":\"modal_modal_wrapper__3cMMl\",\"modal_title\":\"modal_modal_title__gEd_3\",\"modal_close\":\"modal_modal_close__1ULNG\",\"modal_overlay\":\"modal_modal_overlay__3BbXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"burger-ingredients-item_ingredient__1LaZE\",\"ingredient_counter\":\"burger-ingredients-item_ingredient_counter__14gGL\",\"ingredient_img\":\"burger-ingredients-item_ingredient_img__1z1dM\",\"ingredient_price_wrapper\":\"burger-ingredients-item_ingredient_price_wrapper__265cz\",\"ingredient_name\":\"burger-ingredients-item_ingredient_name__29_CH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_container\":\"burger-ingredients_section_container__1oTn8\",\"tab_wrapper\":\"burger-ingredients_tab_wrapper__2lQT1\",\"ingredients_wrapper\":\"burger-ingredients_ingredients_wrapper__1kCF3\",\"ingredients_items_wrapper\":\"burger-ingredients_ingredients_items_wrapper__1CLRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_container\":\"burger-constructor_section_container__lcMgw\",\"drop\":\"burger-constructor_drop__s8D0K\",\"wrapper_inner\":\"burger-constructor_wrapper_inner__1vaQ6\",\"constructor_footer\":\"burger-constructor_constructor_footer__3kmy-\",\"total_wrapper\":\"burger-constructor_total_wrapper__cSjtN\",\"no_ingredients\":\"burger-constructor_no_ingredients__2h0F5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"register-page_form_container__3hhkk\",\"form_wrapper\":\"register-page_form_wrapper__1UeKI\",\"form\":\"register-page_form__UgKSf\",\"form_descr\":\"register-page_form_descr__3ES-O\",\"form_link\":\"register-page_form_link__3ETEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"forgot-password-page_form_container__2-VNo\",\"form_wrapper\":\"forgot-password-page_form_wrapper__3UgFz\",\"form\":\"forgot-password-page_form__3L0oc\",\"form_descr\":\"forgot-password-page_form_descr__3ZpdC\",\"form_link\":\"forgot-password-page_form_link__3H4k6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"reset-password-page_form_container__1IJHi\",\"form_wrapper\":\"reset-password-page_form_wrapper__3LgLV\",\"form\":\"reset-password-page_form__3UQQT\",\"form_descr\":\"reset-password-page_form_descr__3f0S7\",\"form_link\":\"reset-password-page_form_link__2HVUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrapper\":\"profile-page_form_wrapper__GqZ7Q\",\"profile_btn_wrapper\":\"profile-page_profile_btn_wrapper__UxcBi\",\"profile_btn_cancel\":\"profile-page_profile_btn_cancel__2Y_sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor_item\":\"burger-constructor-item_constructor_item__2bo2d\",\"active\":\"burger-constructor-item_active__wqT_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients_type_wrapper\":\"burger-ingredients-list_ingredients_type_wrapper__3wuJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders-page_container__2_7RQ\",\"container_orders\":\"orders-page_container_orders__ZTL9i\",\"container_orders_wrapper\":\"orders-page_container_orders_wrapper__3fMSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_wrapper\":\"ingredient-item-page_ingredient_wrapper__1J_BI\",\"ingredient_title\":\"ingredient-item-page_ingredient_title__9Qabt\",\"title\":\"ingredient-item-page_title__2Ut2z\",\"image\":\"ingredient-item-page_image__38xQ3\",\"subtitle\":\"ingredient-item-page_subtitle__p25-f\",\"footer\":\"ingredient-item-page_footer__2aBUF\",\"footer_item\":\"ingredient-item-page_footer_item__vzhbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_wrapper\":\"order-info-page_order_wrapper__3OkLv\",\"title\":\"order-info-page_title__2urAX\"};"],"sourceRoot":""}